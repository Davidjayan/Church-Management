{"ast":null,"code":"import _toConsumableArray from\"/home/david/Desktop/mydev/Church-Management/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/david/Desktop/mydev/Church-Management/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/david/Desktop/mydev/Church-Management/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from'react';import{url}from'../Constants';import{DataEntryForms}from'./DataEntryForm';import{jsx as _jsx}from\"react/jsx-runtime\";var Dataentry=function Dataentry(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),familyheads=_useState2[0],setFamilyheads=_useState2[1];var _useState3=useState({isOpen:false,message:'',variant:'filled',severity:'error'}),_useState4=_slicedToArray(_useState3,2),notify=_useState4[0],setNotify=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),validity=_useState6[0],setValidity=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),age=_useState8[0],setAge=_useState8[1];var _useState9=useState({name:'',dob:'',gender:'male',weddingdate:'',emailid:'',mobile:'',address:'',familyhead:'',familyid:'',selfid:'',android:false,baptized:false,married:false}),_useState10=_slicedToArray(_useState9,2),data=_useState10[0],setData=_useState10[1];useEffect(function(){var yearDifference=31536000000;setAge(String(parseInt((new Date().getTime()-new Date(data.dob).getTime())/yearDifference).toString().replace(\"-\",\"\")));console.log(age);},[data.dob]);var _useState11=useState(),_useState12=_slicedToArray(_useState11,2),validated=_useState12[0],setValidated=_useState12[1];var handleSubmit=function handleSubmit(event){var form=event.currentTarget;if(form.checkValidity()==false){event.preventDefault();event.stopPropagation();}else{setValidated(true);}};var addrecords=function addrecords(){if(validated){var Familyid=data.familyid;var Selfid=data.selfid;var Name=data.name;var Dob=data.dob;var Age=age;var Gender=data.gender;var Married=data.married==false?0:data.married;var Weddingdate=data.weddingdate;var Emailid=data.emailid;var Mobile=data.mobile;var Address=data.address;var Familyhead=data.familyhead;var Baptized=data.baptized==false?0:data.baptized;var Android=data.android==false?0:data.android;fetch(\"\".concat(url,\"/member_details.php\"),{method:'POST',headers:{Accept:'application/json','Content-Type':'application/json'},body:JSON.stringify({name:Name,dob:Dob,age:Age,gender:Gender,married:Married,weddingdate:Weddingdate,emailid:Emailid,mobile:Mobile,address:Address,familyhead:Familyhead,baptized:Baptized,android:Android,familyid:Familyid,selfid:Selfid})}).then(function(res){return res.json();}).then(function(result){setNotify(_objectSpread(_objectSpread({},notify),{},{isOpen:true,severity:result['status']==1?\"success\":\"error\",message:String(result['message'])}));// setData({\n//   name: '',\n//   dob: new Date(),\n//   gender: 'male',\n//   weddingdate: '',\n//   emailid: '',\n//   mobile: '',\n//   address: '',\n//   familyhead: '',\n//   familyid: '',\n//   selfid: '',\n//   android: false,\n//   baptized: false,\n//   married: false,\n// });\n}).catch(function(error){console.error(error);});}else{setNotify(_objectSpread(_objectSpread({},notify),{},{isOpen:true,message:\"Input all required\"}));}};useEffect(function(){addrecords();},[validated]);var searchfamilyhead=function searchfamilyhead(){fetch(\"\".concat(url,\"/searchfamilyhead.php\"),{method:'POST',headers:{Accept:'application/json','Content-Type':'application/json'}}).then(function(res){return res.json();}).then(function(result){var filteredresult=_toConsumableArray(new Set(result));setFamilyheads(filteredresult);}).catch(function(error){console.error(error);});};useEffect(function(){searchfamilyhead();},[]);return/*#__PURE__*/_jsx(DataEntryForms,{familyheads:familyheads,data:data,notify:notify,setNotify:setNotify,setData:setData,validated:validated,handleSubmit:handleSubmit});};export default Dataentry;","map":{"version":3,"sources":["/home/david/Desktop/mydev/Church-Management/src/views/Components/Dataentry.js"],"names":["useEffect","useState","url","DataEntryForms","Dataentry","familyheads","setFamilyheads","isOpen","message","variant","severity","notify","setNotify","validity","setValidity","age","setAge","name","dob","gender","weddingdate","emailid","mobile","address","familyhead","familyid","selfid","android","baptized","married","data","setData","yearDifference","String","parseInt","Date","getTime","toString","replace","console","log","validated","setValidated","handleSubmit","event","form","currentTarget","checkValidity","preventDefault","stopPropagation","addrecords","Familyid","Selfid","Name","Dob","Age","Gender","Married","Weddingdate","Emailid","Mobile","Address","Familyhead","Baptized","Android","fetch","method","headers","Accept","body","JSON","stringify","then","res","json","result","catch","error","searchfamilyhead","filteredresult","Set"],"mappings":"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","sourcesContent":["\nimport { useEffect, useState } from 'react'\nimport { url } from '../Constants'\nimport { DataEntryForms } from './DataEntryForm'\n\n\nconst Dataentry = () => {\n  const [familyheads, setFamilyheads] = useState([]);\n  const [notify, setNotify] = useState({ isOpen: false, message: '', variant: 'filled', severity: 'error' });\n  const [validity,setValidity] = useState(true);\n  const [age,setAge] = useState();\n\n\n  const [data, setData] = useState({\n    name: '',\n    dob: '',\n    gender: 'male',\n    weddingdate: '',\n    emailid: '',\n    mobile: '',\n    address: '',\n    familyhead: '',\n    familyid: '',\n    selfid: '',\n    android: false,\n    baptized: false,\n    married: false,\n  })\n\n  useEffect(() => {\n\n\n    let yearDifference = 31536000000;\n    setAge(String(parseInt((new Date().getTime()-new Date(data.dob).getTime())/yearDifference).toString().replace(\"-\",\"\")));\n\n\n    console.log(age);\n  }, [data.dob])\n  \n\n\n  const [validated, setValidated] = useState();\n\n  const handleSubmit =(event) =>{\n    const form = event.currentTarget\n\n    if (form.checkValidity() == false) {\n      event.preventDefault()\n\n      event.stopPropagation()\n    }\n    else {\n      setValidated(true);\n    }\n  }\n\n  \n  \n\n  const addrecords = () => {\n    if (validated) {\n      let Familyid = data.familyid\n      let Selfid = data.selfid\n      let Name = data.name\n      let Dob = data.dob\n      let Age = age;\n      let Gender = data.gender\n      let Married = data.married==false?0:data.married;\n      let Weddingdate = data.weddingdate\n      let Emailid = data.emailid\n      let Mobile = data.mobile\n      let Address = data.address\n      let Familyhead = data.familyhead\n      let Baptized = data.baptized==false?0:data.baptized\n      let Android = data.android==false?0:data.android\n\n      fetch(`${url}/member_details.php`, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: Name,\n          dob: Dob,\n          age: Age,\n          gender: Gender,\n          married: Married,\n          weddingdate: Weddingdate,\n          emailid: Emailid,\n          mobile: Mobile,\n          address: Address,\n          familyhead: Familyhead,\n          baptized: Baptized,\n          android: Android,\n          familyid: Familyid,\n          selfid: Selfid,\n        }),\n      })\n        .then((res) => res.json())\n        .then((result) => {\n          setNotify({\n            ...notify,\n            isOpen:true,\n            severity:result['status']==1?\"success\":\"error\",\n            message:String(result['message'])\n          });\n          // setData({\n          //   name: '',\n          //   dob: new Date(),\n          //   gender: 'male',\n          //   weddingdate: '',\n          //   emailid: '',\n          //   mobile: '',\n          //   address: '',\n          //   familyhead: '',\n          //   familyid: '',\n          //   selfid: '',\n          //   android: false,\n          //   baptized: false,\n          //   married: false,\n          // });\n        })\n        .catch((error) => {\n          console.error(error)\n        })\n    } else {\n      setNotify({\n        ...notify,\n        isOpen:true,\n        message:\"Input all required\"\n      })\n    }\n  }\n\n  useEffect(()=>{\n    addrecords();\n  },[validated])\n\n  const searchfamilyhead = () => {\n    fetch(`${url}/searchfamilyhead.php`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        let filteredresult = [...new Set(result)]\n        setFamilyheads(filteredresult)\n      })\n      .catch((error) => {\n        console.error(error)\n      })\n  }\n  useEffect(() => {\n    searchfamilyhead()\n  }, [])\n\n  return (\n    <DataEntryForms\n    familyheads={familyheads}\n    data={data}\n    notify={notify}\n    setNotify={setNotify}\n    setData={setData}\n    validated={validated}\n    handleSubmit={handleSubmit}\n    />\n  )\n}\n\nexport default Dataentry\n"]},"metadata":{},"sourceType":"module"}