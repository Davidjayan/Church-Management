{"ast":null,"code":"var _jsxFileName = \"/home/david/Desktop/mydev/coreui-free-react-admin-template/src/views/Components/YoutubeID.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { url } from '../Constants';\nimport { Grid, TextField, Button, IconButton, Typography } from '@mui/material';\nimport DeleteSweepIcon from '@mui/icons-material/DeleteSweep';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst YoutubeID = () => {\n  _s();\n\n  const [links, setlinks] = useState([{\n    sno: 1,\n    id: ''\n  }]);\n  const [count, setcount] = useState(2);\n  let id = links.map(k => k.id);\n\n  const submit = () => {\n    fetch(\"\".concat(url, \"/jehovanissi/backend/apis/youtubeid.php\"), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: id\n      })\n    }).then(res => res.json()).then(result => {\n      alert(result);\n      window.location.reload();\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"column\",\n    alignContent: \"flex-start\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        setlinks(currentPeople => [...currentPeople, {\n          sno: count,\n          id: ''\n        }]);\n        setcount(count + 1);\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Add New\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), links.map(k => {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        justifyItems: \"center\",\n        justifyContent: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"dense\",\n          onChange: event => {\n            const temp = event.target.value;\n            const id = temp.slice(17);\n            setlinks(currentPeople => currentPeople.map(x => x.sno === k.sno ? { ...x,\n              id\n            } : x));\n          },\n          placeholder: \"Enter the link\"\n        }, k.sno, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          variant: \"contained\",\n          onClick: () => {\n            setlinks(currentPeople => currentPeople.filter(x => x.sno !== k.sno));\n            setcount(count - 1);\n          },\n          children: /*#__PURE__*/_jsxDEV(DeleteSweepIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }, this)]\n      }, k.sno, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      justifyContent: \"center\",\n      justifyItems: \"center\",\n      alignContent: \"center\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => submit(),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(YoutubeID, \"RJJG9cbwMO9ht1v8idY/3gE5wJw=\");\n\n_c = YoutubeID;\nexport default YoutubeID;\n\nvar _c;\n\n$RefreshReg$(_c, \"YoutubeID\");","map":{"version":3,"sources":["/home/david/Desktop/mydev/coreui-free-react-admin-template/src/views/Components/YoutubeID.js"],"names":["React","useState","url","Grid","TextField","Button","IconButton","Typography","DeleteSweepIcon","YoutubeID","links","setlinks","sno","id","count","setcount","map","k","submit","fetch","method","headers","body","JSON","stringify","then","res","json","result","alert","window","location","reload","catch","error","console","currentPeople","event","temp","target","value","slice","x","filter"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { url } from '../Constants';\nimport { Grid, TextField, Button, IconButton, Typography } from '@mui/material';\nimport DeleteSweepIcon from '@mui/icons-material/DeleteSweep';\n\nconst YoutubeID = () => {\n    const [links, setlinks] = useState([{ sno: 1, id: '' }]);\n    const [count, setcount] = useState(2);\n\n    let id = links.map((k) => k.id);\n\n    const submit = () => {\n        fetch(`${url}/jehovanissi/backend/apis/youtubeid.php`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n\n            },\n            body: JSON.stringify({\n                id: id\n\n            })\n        })\n            .then(res => res.json())\n            .then((result) => {\n                alert(result);\n                window.location.reload();\n            }).catch((error) => {\n                console.error(error);\n            });\n\n    }\n\n\n\n\n    return (\n        <Grid\n            container\n            direction={\"column\"}\n            alignContent={\"flex-start\"}\n        >   \n        <Button \n                onClick={() => {\n                    setlinks(currentPeople => [...currentPeople, {\n                        sno: count,\n                        id: ''\n                    }]); setcount(count + 1);\n                }} >\n                    <Typography\n                        variant='h6'\n                    >\n                        Add New\n                    </Typography>\n                </Button>\n                \n                {links.map((k) => {\n                    return (\n                        <Grid\n                        key={k.sno}\n                        item\n                        container\n                        justifyItems={\"center\"}\n                        justifyContent={\"center\"}\n                        >\n                            <TextField\n                                margin=\"dense\"\n                                key={k.sno}\n                                onChange={(event) => {\n                                    const temp = event.target.value;\n                                    const id = temp.slice(17);\n                                    setlinks((currentPeople) => currentPeople.map(x => x.sno === k.sno ? {\n                                        ...x,\n                                        id\n                                    } : x));\n                                }} placeholder=\"Enter the link\" />\n\n                            <IconButton variant=\"contained\" onClick={\n                                () => {\n                                    setlinks(currentPeople => currentPeople.filter(x => x.sno !== k.sno)); setcount(count - 1)\n                                }\n                            }><DeleteSweepIcon />\n                            </IconButton>\n                        </Grid>\n\n                    )\n                })}\n            <Grid\n                item\n                container\n                justifyContent={\"center\"}\n                justifyItems={\"center\"}\n                alignContent={\"center\"}\n                alignItems={\"center\"}\n            >\n                <Button onClick={() => submit()}>Submit</Button>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default YoutubeID;"]},"metadata":{},"sourceType":"module"}