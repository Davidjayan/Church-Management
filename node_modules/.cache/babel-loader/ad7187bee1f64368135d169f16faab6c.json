{"ast":null,"code":"var _jsxFileName = \"/home/david/Desktop/mydev/coreui-free-react-admin-template/src/views/Components/Dataentry.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { url } from '../Constants';\nimport { Grid, Button, FormControlLabel, RadioGroup, Radio, Autocomplete } from '@mui/material';\nimport { CForm, CFormInput, CFormSwitch } from '@coreui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dataentry = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [dob, setDob] = useState('');\n  const [familyheads, setFamilyheads] = useState([]);\n  const [validity, setvalidity] = useState(true);\n  const [data, setData] = useState({\n    name: '',\n    dob: new Date(),\n    gender: '',\n    weddingdate: new Date().toLocaleDateString(),\n    emailid: '',\n    mobile: '',\n    address: '',\n    familyhead: '',\n    familyid: '',\n    selfid: '',\n    android: false,\n    baptized: false,\n    married: false\n  });\n  const str = dob.split('-');\n  const today = new Date();\n  const mon = today.getMonth();\n  const year = today.getFullYear();\n  let age;\n  let k = year - 1;\n\n  if (mon >= str[1]) {\n    age = year - str[0];\n  } else {\n    age = k - str[0];\n  }\n\n  const validation = () => {\n    if ((data.familyid && data.familyhead && data.address && data.selfid && data.name && data.gender && !data.mobile.length < 10) !== '') {\n      setvalidity(true);\n      return true;\n    } else {\n      setvalidity(false);\n      return false;\n    }\n  };\n\n  const [validated, setValidated] = useState(false);\n\n  const handleSubmit = event => {\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n  };\n\n  const addrecords = () => {\n    if (validity) {\n      let Familyid = data.familyid;\n      let Selfid = data.selfid;\n      let Name = data.name;\n      let Dob = data.dob;\n      let Age = age;\n      let Gender = data.gender;\n      let Married = data.married;\n      let Weddingdate = data.weddingdate;\n      let Emailid = data.emailid;\n      let Mobile = data.mobile;\n      let Address = data.address;\n      let Familyhead = data.familyhead;\n      let Baptized = data.baptized;\n      let Android = data.android;\n      fetch(\"\".concat(url, \"/jehovanissi/api/member_details.php\"), {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: Name,\n          dob: Dob,\n          age: Age,\n          gender: Gender,\n          married: Married,\n          weddingdate: Weddingdate,\n          emailid: Emailid,\n          mobile: Mobile,\n          address: Address,\n          familyhead: Familyhead,\n          baptized: Baptized,\n          android: Android,\n          familyid: Familyid,\n          selfid: Selfid\n        })\n      }).then(res => res.json()).then(result => {\n        alert(result);\n        console.log(result);\n      }).catch(error => {\n        console.error(error);\n      });\n    } else {\n      alert('Input All required');\n    }\n  };\n\n  const searchfamilyhead = () => {\n    fetch(\"\".concat(url, \"/jehovanissi/api/searchfamilyhead.php\"), {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(result => {\n      let filteredresult = [...new Set(result)];\n      setFamilyheads(filteredresult);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  useEffect(() => {\n    searchfamilyhead();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CForm, {\n    validated: validated,\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      direction: \"column\",\n      alignItems: 'stretch',\n      justifyItems: 'stretch',\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        direction: 'column',\n        alignItems: 'center',\n        justifyItems: 'stretch',\n        container: true,\n        item: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          children: [/*#__PURE__*/_jsxDEV(CFormInput, {\n            style: {\n              width: 300,\n              marginRight: 15\n            },\n            name: \"familyid\" // value={data.familyid}\n            ,\n            margin: \"dense\",\n            variant: \"outlined\",\n            placeholder: \"Family ID\",\n            label: \"Family ID\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CFormInput, {\n            name: \"selfid\",\n            style: {\n              width: 300,\n              marginRight: 15\n            } // value={data.selfid}\n            ,\n            margin: \"dense\",\n            variant: \"outlined\",\n            placeholder: \"Self ID\",\n            label: \"Self ID\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(CFormInput, {\n            name: \"name\" // value={data.name}\n            ,\n            style: {\n              width: 300,\n              marginRight: 15\n            },\n            margin: \"dense\",\n            variant: \"outlined\" // onChange={(event) => {\n            //     const str = event.target.value.split(' ');\n            //     for (let i = 0; i < str.length; i++) {\n            //         str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n            //     }\n            //     const Nameoff = str.join(' ');\n            //     setData({ ...data, name: Nameoff })\n            // }}\n            ,\n            placeholder: \"Enter Name\",\n            label: \"Enter Name\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n          row: true,\n          \"aria-label\": \"gender\",\n          name: \"row-radio-buttons-group\",\n          style: {\n            width: 300,\n            justifyContent: 'space-evenly'\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"male\",\n            name: \"gender\",\n            label: 'Male',\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 24\n            }, this) // onChange={(event) => setData({ ...data, gender: event.target.value })}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"female\",\n            name: \"gender\",\n            label: 'Female',\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 24\n            }, this) // onChange={(event) => setData({ ...data, gender: event.target.value })}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n          row: true,\n          \"aria-label\": \"martial-status\",\n          name: \"row-radio-buttons-group\",\n          style: {\n            width: 300,\n            justifyContent: 'space-evenly'\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: true,\n            label: 'Married',\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 24\n            }, this) // onChange={(event) => { setData({ ...data, married: event.target.value == \"true\" ? true : false }) }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: false,\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 24\n            }, this),\n            label: 'Unmarried' // onChange={(event) => { setData({ ...data, married: event.target.value == \"true\" ? true : false }) }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CFormInput, {\n          type: \"date\",\n          label: \"Wedding Date\" // style={{ display: data.married === true ? \"inline-block\" : \"none\", width: 300, marginRight: 15 }}\n          ,\n          margin: \"dense\",\n          variant: \"outlined\" // value={data.weddingdate}\n          // onChange={(event) => setData({ ...data, weddingdate: event.target.value })}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: [/*#__PURE__*/_jsxDEV(CFormInput, {\n            name: \"emailid\",\n            margin: \"dense\",\n            label: \"Email ID\",\n            style: {\n              width: 300,\n              marginRight: 15\n            },\n            variant: \"outlined\" // onChange={(event) => setData({ ...data, emailid: event.target.value })}\n            // value={data.emailid}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CFormInput, {\n            name: \"mobile\",\n            style: {\n              width: 300,\n              marginRight: 15\n            },\n            label: \"Mobile\",\n            margin: \"dense\",\n            variant: \"outlined\" // value={data.mobile}\n            // onChange={(event) => {\n            //   let patt = /[^0-9]/g;\n            //   const ph = event.target.value.replace(patt, '');\n            //   setData({ ...data, mobile: ph.slice(0, 10) });\n            // }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(CFormInput, {\n            name: \"address\",\n            label: \"Address\",\n            style: {\n              width: 300,\n              marginRight: 15\n            },\n            margin: \"dense\",\n            variant: \"outlined\" // value={data.address}\n            // onChange={(event) => {\n            //   const str = event.target.value.split(',');\n            //   for (let i = 0; i < str.length; i++) {\n            //     str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n            //   }\n            //   const address = str.join(',');\n            //   setData({ ...data, address: address })\n            // }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n          row: true,\n          \"aria-label\": \"Baptizm\",\n          name: \"row-radio-buttons-group\",\n          style: {\n            width: 300,\n            justifyContent: 'space-evenly'\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 24\n            }, this),\n            value: true,\n            label: 'Baptized' // onChange={(event) => setData({ ...data, baptized: event.target.value == \"true\" ? true : false })}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: false,\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 24\n            }, this),\n            label: 'Not Baptized' // onChange={(event) => setData({ ...data, baptized: event.target.value == \"true\" ? true : false })}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n          row: true,\n          \"aria-label\": \"mobile-type\",\n          name: \"row-radio-buttons-group\",\n          style: {\n            width: 300,\n            justifyContent: 'space-evenly'\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            label: 'Android',\n            value: true,\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 24\n            }, this) // onChange={(event) => setData({ ...data, android: event.target.value == \"true\" ? true : false })}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            label: 'Normal',\n            value: false,\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 24\n            }, this) // onChange={(event) => setData({ ...data, android: event.target.value == \"true\" ? true : false })}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          type: \"submit\",\n          children: \"Add to records\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dataentry, \"Z/25ri3WhVrsIDy4iybf4hWP9SE=\");\n\n_c = Dataentry;\nexport default Dataentry;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dataentry\");","map":{"version":3,"sources":["/home/david/Desktop/mydev/coreui-free-react-admin-template/src/views/Components/Dataentry.js"],"names":["React","useEffect","useState","url","Grid","Button","FormControlLabel","RadioGroup","Radio","Autocomplete","CForm","CFormInput","CFormSwitch","Dataentry","name","setName","dob","setDob","familyheads","setFamilyheads","validity","setvalidity","data","setData","Date","gender","weddingdate","toLocaleDateString","emailid","mobile","address","familyhead","familyid","selfid","android","baptized","married","str","split","today","mon","getMonth","year","getFullYear","age","k","validation","length","validated","setValidated","handleSubmit","event","form","currentTarget","checkValidity","preventDefault","stopPropagation","addrecords","Familyid","Selfid","Name","Dob","Age","Gender","Married","Weddingdate","Emailid","Mobile","Address","Familyhead","Baptized","Android","fetch","method","headers","Accept","body","JSON","stringify","then","res","json","result","alert","console","log","catch","error","searchfamilyhead","filteredresult","Set","width","marginRight","justifyContent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { url } from '../Constants'\nimport { Grid, Button, FormControlLabel, RadioGroup, Radio, Autocomplete } from '@mui/material'\nimport { CForm, CFormInput, CFormSwitch } from '@coreui/react'\n\nconst Dataentry = () => {\n  const [name, setName] = useState('')\n  const [dob, setDob] = useState('')\n  const [familyheads, setFamilyheads] = useState([])\n  const [validity, setvalidity] = useState(true)\n\n  const [data, setData] = useState({\n    name: '',\n    dob: new Date(),\n    gender: '',\n    weddingdate: new Date().toLocaleDateString(),\n    emailid: '',\n    mobile: '',\n    address: '',\n    familyhead: '',\n    familyid: '',\n    selfid: '',\n    android: false,\n    baptized: false,\n    married: false,\n  })\n\n  const str = dob.split('-')\n  const today = new Date()\n  const mon = today.getMonth()\n  const year = today.getFullYear()\n  let age\n\n  let k = year - 1\n\n  if (mon >= str[1]) {\n    age = year - str[0]\n  } else {\n    age = k - str[0]\n  }\n\n  const validation = () => {\n    if (\n      (data.familyid &&\n        data.familyhead &&\n        data.address &&\n        data.selfid &&\n        data.name &&\n        data.gender &&\n        !data.mobile.length < 10) !== ''\n    ) {\n      setvalidity(true)\n      return true\n    } else {\n      setvalidity(false)\n      return false\n    }\n  }\n  const [validated, setValidated] = useState(false)\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget\n\n    if (form.checkValidity() === false) {\n      event.preventDefault()\n\n      event.stopPropagation()\n    }\n\n    setValidated(true)\n  }\n  const addrecords = () => {\n    if (validity) {\n      let Familyid = data.familyid\n      let Selfid = data.selfid\n      let Name = data.name\n      let Dob = data.dob\n      let Age = age\n      let Gender = data.gender\n      let Married = data.married\n      let Weddingdate = data.weddingdate\n      let Emailid = data.emailid\n      let Mobile = data.mobile\n      let Address = data.address\n      let Familyhead = data.familyhead\n      let Baptized = data.baptized\n      let Android = data.android\n\n      fetch(`${url}/jehovanissi/api/member_details.php`, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          name: Name,\n          dob: Dob,\n          age: Age,\n          gender: Gender,\n          married: Married,\n          weddingdate: Weddingdate,\n          emailid: Emailid,\n          mobile: Mobile,\n          address: Address,\n          familyhead: Familyhead,\n          baptized: Baptized,\n          android: Android,\n          familyid: Familyid,\n          selfid: Selfid,\n        }),\n      })\n        .then((res) => res.json())\n        .then((result) => {\n          alert(result)\n          console.log(result)\n        })\n        .catch((error) => {\n          console.error(error)\n        })\n    } else {\n      alert('Input All required')\n    }\n  }\n\n  const searchfamilyhead = () => {\n    fetch(`${url}/jehovanissi/api/searchfamilyhead.php`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        let filteredresult = [...new Set(result)]\n        setFamilyheads(filteredresult)\n      })\n      .catch((error) => {\n        console.error(error)\n      })\n  }\n  useEffect(() => {\n    searchfamilyhead()\n  }, [])\n\n  return (\n    <CForm\n        validated={validated}\n        onSubmit={handleSubmit}\n    >\n      <Grid direction=\"column\" alignItems={'stretch'} justifyItems={'stretch'} container>\n        <Grid direction={'column'} alignItems={'center'} justifyItems={'stretch'} container item>\n          <Grid>\n            <CFormInput\n              style={{ width: 300, marginRight: 15 }}\n              name=\"familyid\"\n              // value={data.familyid}\n              margin=\"dense\"\n              variant=\"outlined\"\n              placeholder=\"Family ID\"\n              label=\"Family ID\"\n              required\n            />\n            <CFormInput\n              name=\"selfid\"\n              style={{ width: 300, marginRight: 15 }}\n              // value={data.selfid}\n              margin=\"dense\"\n              variant=\"outlined\"\n              placeholder=\"Self ID\"\n              label=\"Self ID\"\n              required\n            />\n          </Grid>\n          <Grid>\n            <CFormInput\n              name=\"name\"\n              // value={data.name}\n              style={{ width: 300, marginRight: 15 }}\n              margin=\"dense\"\n              variant=\"outlined\"\n              // onChange={(event) => {\n              //     const str = event.target.value.split(' ');\n              //     for (let i = 0; i < str.length; i++) {\n\n              //         str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n              //     }\n              //     const Nameoff = str.join(' ');\n              //     setData({ ...data, name: Nameoff })\n              // }}\n              placeholder=\"Enter Name\"\n              label=\"Enter Name\"\n              required\n            />\n            {/* <DatePicker\n              style={{ width: 300, marginRight: 15 }}\n              // value={data.dob}\n              // onChange={(event) => setData({ ...data, dob: event.target.value })}\n              label=\"Enter DOB\"\n            /> */}\n          </Grid>\n          <RadioGroup\n            row\n            aria-label=\"gender\"\n            name=\"row-radio-buttons-group\"\n            style={{\n              width: 300,\n              justifyContent: 'space-evenly',\n            }}\n          >\n            <FormControlLabel\n              value=\"male\"\n              name=\"gender\"\n              label={'Male'}\n              control={<Radio />}\n              // onChange={(event) => setData({ ...data, gender: event.target.value })}\n            />\n            <FormControlLabel\n              value=\"female\"\n              name=\"gender\"\n              label={'Female'}\n              control={<Radio />}\n              // onChange={(event) => setData({ ...data, gender: event.target.value })}\n            />\n          </RadioGroup>\n          <RadioGroup\n            row\n            aria-label=\"martial-status\"\n            name=\"row-radio-buttons-group\"\n            style={{\n              width: 300,\n              justifyContent: 'space-evenly',\n            }}\n          >\n            <FormControlLabel\n              value={true}\n              label={'Married'}\n              control={<Radio />}\n              // onChange={(event) => { setData({ ...data, married: event.target.value == \"true\" ? true : false }) }}\n            />\n            <FormControlLabel\n              value={false}\n              control={<Radio />}\n              label={'Unmarried'}\n              // onChange={(event) => { setData({ ...data, married: event.target.value == \"true\" ? true : false }) }}\n            />\n          </RadioGroup>\n\n          <CFormInput\n            type=\"date\"\n            label=\"Wedding Date\"\n            // style={{ display: data.married === true ? \"inline-block\" : \"none\", width: 300, marginRight: 15 }}\n            margin=\"dense\"\n            variant=\"outlined\"\n            // value={data.weddingdate}\n            // onChange={(event) => setData({ ...data, weddingdate: event.target.value })}\n          />\n          <Grid>\n            <CFormInput\n              name=\"emailid\"\n              margin=\"dense\"\n              label=\"Email ID\"\n              style={{ width: 300, marginRight: 15 }}\n              variant=\"outlined\"\n              // onChange={(event) => setData({ ...data, emailid: event.target.value })}\n              // value={data.emailid}\n            />\n\n            <CFormInput\n              name=\"mobile\"\n              style={{ width: 300, marginRight: 15 }}\n              label=\"Mobile\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              // value={data.mobile}\n              // onChange={(event) => {\n              //   let patt = /[^0-9]/g;\n              //   const ph = event.target.value.replace(patt, '');\n              //   setData({ ...data, mobile: ph.slice(0, 10) });\n              // }}\n            />\n          </Grid>\n\n          <Grid>\n            <CFormInput\n              name=\"address\"\n              label=\"Address\"\n              style={{ width: 300, marginRight: 15 }}\n              margin=\"dense\"\n              variant=\"outlined\"\n              // value={data.address}\n              // onChange={(event) => {\n              //   const str = event.target.value.split(',');\n              //   for (let i = 0; i < str.length; i++) {\n              //     str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n              //   }\n              //   const address = str.join(',');\n              //   setData({ ...data, address: address })\n              // }}\n            />\n            {/* <Autocomplete\n              options={familyheads}\n              renderInput={(params) =>\n                <CFormInput\n                  {...params}\n                  name=\"familyhead\"\n                  value={data.familyhead}\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  label=\"Family Head\"\n                  onChange={(event) => {\n                    const str = event.target.value.split(' ');\n                    for (let i = 0; i < str.length; i++) {\n                      str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n                    }\n                    const familyheadname = str.join(' ');\n                    setData({ ...data, familyhead: familyheadname })\n                  }}\n                />\n              }\n            /> */}\n          </Grid>\n          <RadioGroup\n            row\n            aria-label=\"Baptizm\"\n            name=\"row-radio-buttons-group\"\n            style={{\n              width: 300,\n              justifyContent: 'space-evenly',\n            }}\n          >\n            <FormControlLabel\n              control={<Radio />}\n              value={true}\n              label={'Baptized'}\n              // onChange={(event) => setData({ ...data, baptized: event.target.value == \"true\" ? true : false })}\n            />\n            <FormControlLabel\n              value={false}\n              control={<Radio />}\n              label={'Not Baptized'}\n              // onChange={(event) => setData({ ...data, baptized: event.target.value == \"true\" ? true : false })}\n            />\n          </RadioGroup>\n          <RadioGroup\n            row\n            aria-label=\"mobile-type\"\n            name=\"row-radio-buttons-group\"\n            style={{\n              width: 300,\n              justifyContent: 'space-evenly',\n            }}\n          >\n            <FormControlLabel\n              label={'Android'}\n              value={true}\n              control={<Radio />}\n              // onChange={(event) => setData({ ...data, android: event.target.value == \"true\" ? true : false })}\n            />\n            <FormControlLabel\n              label={'Normal'}\n              value={false}\n              control={<Radio />}\n              // onChange={(event) => setData({ ...data, android: event.target.value == \"true\" ? true : false })}\n            />\n          </RadioGroup>\n\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n          >\n            Add to records\n          </Button>\n        </Grid>\n      </Grid>\n    </CForm>\n  )\n}\n\nexport default Dataentry\n"]},"metadata":{},"sourceType":"module"}