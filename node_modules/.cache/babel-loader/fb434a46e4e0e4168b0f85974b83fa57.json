{"ast":null,"code":"var _jsxFileName = \"/home/david/Desktop/mydev/coreui-free-react-admin-template/src/views/Components/EditData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { url } from '../Constants';\nimport { Button, Grid, TextField, Typography } from '@mui/material';\nimport { CAlert, CFormSelect, CFormText, CTable, CTableBody, CTableDataCell, CTableHead, CTableHeaderCell, CTableRow } from '@coreui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditData = () => {\n  _s();\n\n  const [data, setdata] = useState([]);\n  const [familyheads, setFamilyheads] = useState([]);\n  const [addresses, setAddresses] = useState([]);\n  useEffect(() => {\n    fetch(\"\".concat(url, \"/jehovanissi/api/data-fetch.php\"), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(result => {\n      setdata(result);\n      result.map((x, key) => {\n        setdata(currentPeople => currentPeople.map((p, l) => l === key ? { ...p,\n          InitialSID: p.SelfID\n        } : p));\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [2]);\n\n  const searchfamilyhead = () => {\n    fetch(\"\".concat(url, \"/jehovanissi/api/searchfamilyhead.php\"), {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(result => {\n      let filteredresult = [...new Set(result)];\n      setFamilyheads(filteredresult);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  const searchaddress = () => {\n    fetch(\"\".concat(url, \"/jehovanissi/api/searchaddress.php\"), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(result => {\n      let filteredresult = [...new Set(result)];\n      setAddresses(filteredresult);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  const [display2, setdisplay2] = useState(\"none\");\n  const [row, setrow] = useState(0);\n  const [focus, isFocused] = useState({\n    'familyid': data[row] !== undefined ? data[row]['FamilyID'] !== '' ? true : false : true,\n    'selfid': data[row] !== undefined ? data[row]['SelfID'] !== '' ? true : false : true,\n    'name': data[row] !== undefined ? data[row]['Name'] !== '' ? true : false : true,\n    'email': data[row] !== undefined ? data[row]['EmailID'] !== '' ? true : false : true,\n    'mobile': data[row] !== undefined ? data[row]['Mobile'] !== '' ? true : false : true,\n    'address': data[row] !== undefined ? data[row]['Address'] !== '' ? true : false : true,\n    'familyhead': data[row] !== undefined ? data[row]['FamilyHead'] !== '' ? true : false : true\n  });\n\n  const makechanges = () => {\n    fetch(\"\".concat(url, \"/jehovanissi/api/data-edit.php\"), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        data: data[row]\n      })\n    }).then(res => res.json()).then(result => {\n      /*#__PURE__*/\n      _jsxDEV(CAlert, {\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this);\n\n      window.location.reload();\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const deleteRecord = () => {\n    fetch(\"\".concat(url, \"/jehovanissi/api/data-delete.php\"), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        selfid: data[row]['SelfID']\n      })\n    }).then(res => res.json()).then(result => {\n      /*#__PURE__*/\n      _jsxDEV(CAlert, {\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this);\n\n      window.location.reload();\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const Typograph = props => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: [\" \", props.children, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this);\n  };\n\n  const [searchby, setsearchby] = useState(\"id\");\n  const [value, setvalue] = useState();\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    className: \"editform\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      style: {\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typograph, {\n        children: \"Search by\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        width: 100,\n        children: /*#__PURE__*/_jsxDEV(CFormSelect, {\n          name: \"searchby\",\n          onChange: event => setsearchby(event.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"id\",\n            children: \"Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        onChange: event => {\n          const func = k => {\n            const str = k.split(' ');\n\n            for (let i = 0; i < str.length; i++) {\n              str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n            }\n\n            return str.join(' ');\n          };\n\n          let val = searchby === \"id\" ? event.target.value.toUpperCase() : func(event.target.value);\n          setvalue(searchby === \"id\" ? event.target.value.toUpperCase() : func(event.target.value));\n\n          if (searchby === \"id\") {\n            data.map((l, index) => {\n              if (l.FamilyID === val) {\n                setrow(index);\n                setdisplay2(\"block\");\n              }\n            });\n          } else if (searchby === \"name\") {\n            data.map((l, index) => {\n              if (l.Name === val) {\n                setrow(index);\n                setdisplay2(\"block\");\n              }\n            });\n          }\n        },\n        style: {\n          width: 250,\n          marginTop: 30,\n          marginBottom: 30\n        },\n        value: value,\n        placeholder: \"Enter \".concat(searchby),\n        list: searchby === \"id\" ? \"idsearch\" : \"namesearch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n        id: \"idsearch\",\n        children: data.map((k, key) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            children: k.FamilyID\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n        id: \"namesearch\",\n        children: data.map((k, key) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            children: k.Name\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      style: {\n        display: display2\n      },\n      className: \"form1\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          name: \"familyid\",\n          value: data[row] === undefined ? '' : data[row]['FamilyID'],\n          onChange: event => {\n            setdata(currentPeople => currentPeople.map((x, index) => index === row ? { ...x,\n              FamilyID: event.target.value.toUpperCase(),\n              SelfID: event.target.value.slice(3)\n            } : x));\n          },\n          className: \"checkk1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: focus['familyid'] === true ? \"floating-label2\" : \"floating-label1\",\n          children: \"Family id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 43\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          name: \"selfid\",\n          disabled: \"true\",\n          value: data[row] === undefined ? '' : data[row]['SelfID']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: focus['selfid'] === true ? \"floating-label2\" : \"floating-label1\",\n          children: \"Enter SelfID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 137\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          name: \"name\",\n          value: data[row] === undefined ? '' : data[row]['Name'],\n          onFocus: event => isFocused({ ...focus,\n            name: event.target.value === '' ? false : true\n          }),\n          onBlur: event => isFocused({ ...focus,\n            name: event.target.value === '' ? false : true\n          }),\n          onChange: event => {\n            const str = event.target.value.split(' ');\n\n            for (let i = 0; i < str.length; i++) {\n              str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n            }\n\n            const Nameoff = str.join(' ');\n            setdata(currentPeople => currentPeople.map((x, index) => index === row ? { ...x,\n              Name: Nameoff\n            } : x));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: focus['name'] === true ? \"floating-label2\" : \"floating-label1\",\n          children: \"Enter Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dateinputbox1\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          type: \"date\",\n          name: \"dob\",\n          value: data[row] === undefined ? '' : data[row]['DOB'],\n          placeholder: \"DOB\",\n          onChange: event => {\n            const str = event.target.value.split('-');\n            const today = new Date();\n            const mon = today.getMonth();\n            const year = today.getFullYear();\n            let age;\n            let k = year - 1;\n\n            if (mon >= str[1]) {\n              age = year - str[0];\n            } else {\n              age = k - str[0];\n            }\n\n            setdata(currentPeople => currentPeople.map((x, index) => index === row ? { ...x,\n              DOB: event.target.value,\n              Age: age\n            } : x));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 49\n        }, this), /*#__PURE__*/_jsxDEV(Typograph, {\n          children: data[row] === undefined ? '' : data[row]['Age']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"radio1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"radioinput1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Male \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 50\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            type: \"radio\",\n            checked: data[row] === undefined ? '' : data[row]['Gender'] === \"male\" ? true : false,\n            value: \"male\",\n            name: \"gender\",\n            onChange: event => {\n              setdata(currentPeople => currentPeople.map((x, index) => index === row ? { ...x,\n                Gender: event.target.value\n              } : x));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Female\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            type: \"radio\",\n            checked: data[row] === undefined ? '' : data[row]['Gender'] === \"female\" ? true : false,\n            value: \"female\",\n            name: \"gender\",\n            onChange: event => {\n              setdata(currentPeople => currentPeople.map((x, index) => index === row ? { ...x,\n                Gender: event.target.value\n              } : x));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"radioinput1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Married \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 50\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            type: \"radio\",\n            checked: data[row] === undefined ? '' : data[row]['Married'] === \"1\" ? true : false,\n            value: \"true\",\n            onChange: event => {\n              setdata(currentPeople => currentPeople.map((x, index) => index === row ? { ...x,\n                Married: event.target.value === \"true\" ? \"1\" : \"0\"\n              } : x));\n            },\n            name: \"married\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Unmarried \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            type: \"radio\",\n            checked: data[row] === undefined ? '' : data[row]['Married'] === \"0\" ? true : false,\n            value: \"false\",\n            onChange: event => {\n              setdata(currentPeople => currentPeople.map((x, index) => index === row ? { ...x,\n                Married: event.target.value === \"true\" ? \"1\" : \"0\"\n              } : x));\n            },\n            name: \"married\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        style: {\n          display: data[row] === undefined ? \"none\" : data[row]['Married'] === \"1\" ? \"block\" : \"none\"\n        },\n        name: \"weddingdate\",\n        value: data[row] === undefined ? '' : data[row]['WeddingDate'],\n        type: \"date\",\n        placeholder: \"Wedding Date\",\n        onChange: event => {\n          setdata(currentPeople => currentPeople.map((x, index) => index === row ? { ...x,\n            WeddingDate: event.target.value\n          } : x));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          name: \"emailid\",\n          value: data[row] === undefined ? '' : data[row]['EmailID'],\n          onFocus: event => isFocused({ ...focus,\n            email: event.target.value === '' ? false : true\n          }),\n          onBlur: event => isFocused({ ...focus,\n            email: event.target.value === '' ? false : true\n          }),\n          onChange: event => {\n            setdata(currentPeople => currentPeople.map((x, index) => index === row ? { ...x,\n              EmailID: event.target.value\n            } : x));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: focus['email'] === true ? \"floating-label2\" : \"floating-label1\",\n          children: \"Enter EmailID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          name: \"mobile\",\n          value: data[row] === undefined ? '' : data[row]['Mobile'],\n          onFocus: event => isFocused({ ...focus,\n            mobile: event.target.value === '' ? false : true\n          }),\n          onBlur: event => isFocused({ ...focus,\n            mobile: event.target.value === '' ? false : true\n          }),\n          onChange: event => {\n            let patt = /[^0-9]/g;\n            const ph = event.target.value.replace(patt, '');\n            setdata(currentPeople => currentPeople.map((x, index) => index === row ? { ...x,\n              Mobile: ph\n            } : x));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: focus['mobile'] === true ? \"floating-label2\" : \"floating-label1\",\n          children: \"Enter Mobile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          name: \"address\",\n          value: data[row] === undefined ? '' : data[row]['Address'],\n          onFocus: event => isFocused({ ...focus,\n            address: event.target.value === '' ? false : true\n          }),\n          onBlur: event => isFocused({ ...focus,\n            address: event.target.value === '' ? false : true\n          }),\n          onChange: event => {\n            searchaddress();\n            const str = event.target.value.split(',');\n\n            for (let i = 0; i < str.length; i++) {\n              str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n            }\n\n            const address = str.join(',');\n            setdata(currentPeople => currentPeople.map((x, index) => index === row ? { ...x,\n              Address: address\n            } : x));\n          },\n          list: \"searchaddresses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n          id: \"searchaddresses\",\n          children: addresses.map((k, key) => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              children: k\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: focus['address'] === true ? \"floating-label2\" : \"floating-label1\",\n          children: \"Enter Address \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          name: \"familyhead\",\n          value: data[row] === undefined ? '' : data[row]['FamilyHead'],\n          onFocus: event => isFocused({ ...focus,\n            familyhead: event.target.value === '' ? false : true\n          }),\n          onBlur: event => isFocused({ ...focus,\n            familyhead: event.target.value === '' ? false : true\n          }),\n          onChange: event => {\n            searchfamilyhead();\n            const str = event.target.value.split(' ');\n\n            for (let i = 0; i < str.length; i++) {\n              str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n            }\n\n            const familyheadname = str.join(' ');\n            setdata(currentPeople => currentPeople.map((x, index) => index === row ? { ...x,\n              FamilyHead: familyheadname\n            } : x));\n          },\n          list: \"searchfhead\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n          id: \"searchfhead\",\n          children: familyheads.map((k, key) => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              children: k\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: focus['familyhead'] === true ? \"floating-label2\" : \"floating-label1\",\n          children: \"Enter Familyhead \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"radio\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"radioinput1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Baptized\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"baptized\",\n            type: \"radio\",\n            checked: data[row] === undefined ? '' : data[row]['Baptized'] === \"1\" ? true : false,\n            value: \"true\",\n            onChange: event => {\n              setdata(currentPeople => currentPeople.map((x, index) => index === row ? { ...x,\n                Baptized: event.target.value === \"true\" ? \"1\" : \"0\"\n              } : x));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Not baptized\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"baptized\",\n            type: \"radio\",\n            checked: data[row] === undefined ? '' : data[row]['Baptized'] === \"0\" ? true : false,\n            value: \"false\",\n            onChange: event => {\n              setdata(currentPeople => currentPeople.map((x, index) => index === row ? { ...x,\n                Baptized: event.target.value === \"true\" ? \"1\" : \"0\"\n              } : x));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"radioinput1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Android\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 25\n          }, this), \"  \", /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"android\",\n            type: \"radio\",\n            checked: data[row] === undefined ? '' : data[row]['Android'] === \"1\" ? true : false,\n            value: \"true\",\n            onChange: event => {\n              setdata(currentPeople => currentPeople.map((x, index) => index === row ? { ...x,\n                Android: event.target.value === \"true\" ? \"1\" : \"0\"\n              } : x));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 49\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 25\n          }, this), \"   \", /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"android\",\n            type: \"radio\",\n            checked: data[row] === undefined ? '' : data[row]['Android'] === \"0\" ? true : false,\n            value: \"false\",\n            onChange: event => {\n              setdata(currentPeople => currentPeople.map((x, index) => index === row ? { ...x,\n                Android: event.target.value === \"true\" ? \"1\" : \"0\"\n              } : x));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 49\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => makechanges(),\n        className: \"bt1\",\n        children: \"Make Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => deleteRecord(),\n        className: \"bt1\",\n        children: \"Delete Selected Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CTable, {\n      children: [/*#__PURE__*/_jsxDEV(CTableHead, {\n        children: [/*#__PURE__*/_jsxDEV(CTableHeaderCell, {\n          children: \"SELF ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CTableHeaderCell, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CTableHeaderCell, {\n          children: \"Father or Husband Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CTableBody, {\n        children: data.map((k, index) => {\n          return /*#__PURE__*/_jsxDEV(CTableRow, {\n            children: [/*#__PURE__*/_jsxDEV(CTableDataCell, {\n              children: k.SelfID\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CTableDataCell, {\n              children: k.Name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CTableDataCell, {\n              children: k.FamilyHead\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CTableDataCell, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  setrow(index);\n                  setdisplay2(\"block\");\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditData, \"fm7QsTIysRBAPcsQkrFSkqgZ2zU=\");\n\n_c = EditData;\nexport default EditData;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditData\");","map":{"version":3,"sources":["/home/david/Desktop/mydev/coreui-free-react-admin-template/src/views/Components/EditData.js"],"names":["React","useEffect","useState","url","Button","Grid","TextField","Typography","CAlert","CFormSelect","CFormText","CTable","CTableBody","CTableDataCell","CTableHead","CTableHeaderCell","CTableRow","EditData","data","setdata","familyheads","setFamilyheads","addresses","setAddresses","fetch","method","headers","then","res","json","result","map","x","key","currentPeople","p","l","InitialSID","SelfID","catch","error","console","log","searchfamilyhead","filteredresult","Set","searchaddress","display2","setdisplay2","row","setrow","focus","isFocused","undefined","makechanges","body","JSON","stringify","window","location","reload","deleteRecord","selfid","Typograph","props","children","searchby","setsearchby","value","setvalue","display","flexDirection","event","target","func","k","str","split","i","length","charAt","toUpperCase","substring","join","val","index","FamilyID","Name","width","marginTop","marginBottom","slice","name","Nameoff","today","Date","mon","getMonth","year","getFullYear","age","DOB","Age","Gender","Married","WeddingDate","email","EmailID","mobile","patt","ph","replace","Mobile","address","Address","familyhead","familyheadname","FamilyHead","Baptized","Android"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { url } from '../Constants';\nimport { Button, Grid, TextField, Typography } from '@mui/material';\nimport { CAlert, CFormSelect, CFormText, CTable, CTableBody, CTableDataCell, CTableHead, CTableHeaderCell, CTableRow } from '@coreui/react';\n\nconst EditData = () => {\n    const [data, setdata] = useState([]);\n    const [familyheads, setFamilyheads] = useState([]);\n    const [addresses, setAddresses] = useState([]);\n\n\n\n    useEffect(() => {\n        fetch(`${url}/jehovanissi/api/data-fetch.php`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n\n        }).then((res) => res.json())\n            .then((result) => {\n                setdata(result);\n                result.map((x, key) => {\n                    setdata((currentPeople) => currentPeople.map((p, l) => l === key ? {\n                        ...p,\n                        InitialSID: p.SelfID,\n                    } : p));\n                })\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    }, [2]);\n\n\n    const searchfamilyhead = () => {\n        fetch(`${url}/jehovanissi/api/searchfamilyhead.php`, {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n\n        })\n            .then(res => res.json())\n            .then((result) => {\n                let filteredresult = [...new Set(result)];\n                setFamilyheads(filteredresult);\n            }).catch((error) => {\n                console.error(error);\n            });\n    }\n    const searchaddress = () => {\n        fetch(`${url}/jehovanissi/api/searchaddress.php`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n\n        })\n            .then(res => res.json())\n            .then((result) => {\n                let filteredresult = [...new Set(result)];\n                setAddresses(filteredresult);\n            }).catch((error) => {\n                console.error(error);\n            });\n    }\n\n    const [display2, setdisplay2] = useState(\"none\");\n    const [row, setrow] = useState(0);\n    const [focus, isFocused] = useState({ 'familyid': data[row] !== undefined ? data[row]['FamilyID'] !== '' ? true : false : true, 'selfid': data[row] !== undefined ? data[row]['SelfID'] !== '' ? true : false : true, 'name': data[row] !== undefined ? data[row]['Name'] !== '' ? true : false : true, 'email': data[row] !== undefined ? data[row]['EmailID'] !== '' ? true : false : true, 'mobile': data[row] !== undefined ? data[row]['Mobile'] !== '' ? true : false : true, 'address': data[row] !== undefined ? data[row]['Address'] !== '' ? true : false : true, 'familyhead': data[row] !== undefined ? data[row]['FamilyHead'] !== '' ? true : false : true })\n\n\n    const makechanges = () => {\n        fetch(`${url}/jehovanissi/api/data-edit.php`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                data: data[row]\n            })\n\n        }).then((res) => res.json())\n            .then((result) => {\n                <CAlert\n                    \n                >{result}\n                </CAlert>\n                window.location.reload();\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    }\n    const deleteRecord = () => {\n\n\n        fetch(`${url}/jehovanissi/api/data-delete.php`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                selfid: data[row]['SelfID']\n            })\n\n        }).then((res) => res.json())\n            .then((result) => {\n                <CAlert\n                    \n                >{result}\n                </CAlert>\n                window.location.reload();\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n\n    }\n\n    const Typograph = (props) => {\n        return (\n            <p className='lead' > {props.children} </p>\n        )\n    }\n    const [searchby, setsearchby] = useState(\"id\");\n    const [value, setvalue] = useState();\n    return (\n        <Grid className=\"editform\" >\n            <Grid style={{ display: 'flex', flexDirection: 'column' }}>\n                <Typograph >\n                    Search by\n                </Typograph>\n                <Grid\n                    width={100}\n                >\n                    <CFormSelect\n                        name=\"searchby\"\n                        onChange={(event) => setsearchby(event.target.value)}\n                    >\n                        <option value=\"id\">Id</option>\n                        <option value=\"name\">Name</option>\n                    </CFormSelect>\n                </Grid>\n                <TextField\n                    onChange={(event) => {\n                        const func = (k) => {\n                            const str = k.split(' ');\n                            for (let i = 0; i < str.length; i++) {\n\n                                str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n                            }\n\n                            return str.join(' ');\n                        }\n                        let val = searchby === \"id\" ? event.target.value.toUpperCase() : func(event.target.value);\n                        setvalue(searchby === \"id\" ? event.target.value.toUpperCase() : func(event.target.value));\n\n                        if (searchby === \"id\") {\n                            data.map((l, index) => {\n                                if (l.FamilyID === val) {\n                                    setrow(index);\n                                    setdisplay2(\"block\");\n                                }\n                            })\n                        } else if (searchby === \"name\") {\n                            data.map((l, index) => {\n                                if (l.Name === val) {\n                                    setrow(index);\n                                    setdisplay2(\"block\");\n                                }\n                            })\n\n                        }\n                    }}\n                    style={{ width: 250, marginTop: 30, marginBottom: 30 }}\n                    value={value}\n                    placeholder={`Enter ${searchby}`}\n                    list={searchby === \"id\" ? \"idsearch\" : \"namesearch\"}\n                />\n\n                <datalist id=\"idsearch\" >\n                    {data.map((k, key) => {\n                        return (\n                            <option key={key}>{k.FamilyID}</option>\n                        )\n                    })}\n                </datalist>\n\n                <datalist id=\"namesearch\" >\n                    {data.map((k, key) => {\n                        return (\n                            <option key={key} >{k.Name}</option>\n                        )\n                    })}\n                </datalist>\n            </Grid>\n\n\n\n            <Grid style={{ display: display2 }} className=\"form1\" >\n                <label><TextField name=\"familyid\" value={data[row] === undefined ? '' : data[row]['FamilyID']}\n                    onChange={(event) => {\n                        setdata((currentPeople) => currentPeople.map((x, index) => index === row ? {\n                            ...x,\n                            FamilyID: event.target.value.toUpperCase(),\n                            SelfID: event.target.value.slice(3)\n                        } : x));\n                    }}\n                    className=\"checkk1\" /><span className={focus['familyid'] === true ? \"floating-label2\" : \"floating-label1\"}>Family id</span></label>\n\n                <label><TextField name=\"selfid\" disabled=\"true\" value={data[row] === undefined ? '' : data[row]['SelfID']} ></TextField><span className={focus['selfid'] === true ? \"floating-label2\" : \"floating-label1\"}>Enter SelfID</span></label>\n\n                <label>\n                    <TextField name=\"name\"\n                        value={data[row] === undefined ? '' : data[row]['Name']}\n                        onFocus={(event) => isFocused({ ...focus, name: event.target.value === '' ? false : true })}\n                        onBlur={(event) => isFocused({ ...focus, name: event.target.value === '' ? false : true })}\n\n                        onChange={(event) => {\n                            const str = event.target.value.split(' ');\n                            for (let i = 0; i < str.length; i++) {\n\n                                str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n                            }\n\n                            const Nameoff = str.join(' ');\n                            setdata((currentPeople) => currentPeople.map((x, index) => index === row ? {\n                                ...x,\n                                Name: Nameoff\n                            } : x));\n                        }} />\n                    <span className={focus['name'] === true ? \"floating-label2\" : \"floating-label1\"}>Enter Name</span></label>\n                <div className=\"dateinputbox1\" ><TextField type=\"date\" name=\"dob\" value={data[row] === undefined ? '' : data[row]['DOB']} placeholder=\"DOB\"\n                    onChange={(event) => {\n\n                        const str = event.target.value.split('-');\n                        const today = new Date();\n                        const mon = today.getMonth();\n                        const year = today.getFullYear();\n                        let age;\n                        let k = year - 1;\n                        if (mon >= str[1]) {\n                            age = year - str[0];\n                        }\n                        else {\n                            age = k - str[0];\n                        }\n                        setdata((currentPeople) => currentPeople.map((x, index) => index === row ? {\n                            ...x,\n                            DOB: event.target.value,\n                            Age: age\n                        } : x));\n                    }}\n\n                /><Typograph>{data[row] === undefined ? '' : data[row]['Age']}</Typograph></div>\n\n                <div className=\"radio1\"  >\n                    <div className=\"radioinput1\"><label>Male </label>\n                        <TextField type=\"radio\"\n                            checked={data[row] === undefined ? '' : data[row]['Gender'] === \"male\" ? true : false}\n                            value=\"male\"\n                            name=\"gender\"\n                            onChange={(event) => {\n                                setdata((currentPeople) => currentPeople.map((x, index) => index === row ? {\n                                    ...x,\n                                    Gender: event.target.value\n                                } : x));\n                            }}\n                        />\n                        <label>Female</label>\n                        <TextField type=\"radio\"\n                            checked={data[row] === undefined ? '' : data[row]['Gender'] === \"female\" ? true : false}\n                            value=\"female\"\n                            name=\"gender\"\n                            onChange={(event) => {\n                                setdata((currentPeople) => currentPeople.map((x, index) => index === row ? {\n                                    ...x,\n                                    Gender: event.target.value\n                                } : x));\n                            }}\n                        /></div>\n                    <div className=\"radioinput1\"><label>Married </label>\n                        <TextField type=\"radio\"\n                            checked={data[row] === undefined ? '' : data[row]['Married'] === \"1\" ? true : false}\n                            value='true'\n                            onChange={(event) => {\n                                setdata((currentPeople) => currentPeople.map((x, index) => index === row ? {\n                                    ...x,\n                                    Married: event.target.value === \"true\" ? \"1\" : \"0\"\n                                } : x));\n                            }}\n                            name=\"married\" />\n                        <label>Unmarried </label>\n                        <TextField type=\"radio\" checked={data[row] === undefined ? '' : data[row]['Married'] === \"0\" ? true : false}\n                            value='false'\n                            onChange={(event) => {\n                                setdata((currentPeople) => currentPeople.map((x, index) => index === row ? {\n                                    ...x,\n                                    Married: event.target.value === \"true\" ? \"1\" : \"0\"\n                                } : x));\n                            }}\n                            name=\"married\" /></div>\n                </div>\n                <TextField style={{ display: data[row] === undefined ? \"none\" : data[row]['Married'] === \"1\" ? \"block\" : \"none\" }} name=\"weddingdate\" value={data[row] === undefined ? '' : data[row]['WeddingDate']} type=\"date\" placeholder=\"Wedding Date\"\n                    onChange={(event) => {\n                        setdata((currentPeople) => currentPeople.map((x, index) => index === row ? {\n                            ...x,\n                            WeddingDate: event.target.value\n                        } : x));\n                    }}\n\n                ></TextField>\n                <label><TextField name=\"emailid\" value={data[row] === undefined ? '' : data[row]['EmailID']}\n                    onFocus={(event) => isFocused({ ...focus, email: event.target.value === '' ? false : true })}\n                    onBlur={(event) => isFocused({ ...focus, email: event.target.value === '' ? false : true })}\n                    onChange={(event) => {\n                        setdata((currentPeople) => currentPeople.map((x, index) => index === row ? {\n                            ...x,\n                            EmailID: event.target.value\n                        } : x));\n                    }}\n                ></TextField><span className={focus['email'] === true ? \"floating-label2\" : \"floating-label1\"}>Enter EmailID</span></label>\n                <label><TextField name=\"mobile\"\n                    value={data[row] === undefined ? '' : data[row]['Mobile']}\n                    onFocus={(event) => isFocused({ ...focus, mobile: event.target.value === '' ? false : true })}\n                    onBlur={(event) => isFocused({ ...focus, mobile: event.target.value === '' ? false : true })}\n                    onChange={(event) => {\n\n\n\n                        let patt = /[^0-9]/g;\n                        const ph = event.target.value.replace(patt, '');\n                        setdata((currentPeople) => currentPeople.map((x, index) => index === row ? {\n                            ...x,\n                            Mobile: ph\n                        } : x));\n\n                    }} ></TextField><span className={focus['mobile'] === true ? \"floating-label2\" : \"floating-label1\"}>Enter Mobile</span></label>\n\n                <label><TextField name=\"address\" value={data[row] === undefined ? '' : data[row]['Address']}\n                    onFocus={(event) => isFocused({ ...focus, address: event.target.value === '' ? false : true })}\n                    onBlur={(event) => isFocused({ ...focus, address: event.target.value === '' ? false : true })}\n                    onChange={(event) => {\n\n                        searchaddress();\n                        const str = event.target.value.split(',');\n                        for (let i = 0; i < str.length; i++) {\n\n                            str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n                        }\n\n                        const address = str.join(',');\n                        setdata((currentPeople) => currentPeople.map((x, index) => index === row ? {\n                            ...x,\n                            Address: address\n                        } : x));\n                    }}\n                    list=\"searchaddresses\"\n                ></TextField>\n                    <datalist id=\"searchaddresses\">\n                        {addresses.map((k, key) => {\n                            return (\n                                <option key={key} >{k}</option>\n                            )\n                        })}\n                    </datalist>\n\n                    <span className={focus['address'] === true ? \"floating-label2\" : \"floating-label1\"}>Enter Address </span></label>\n                <label><TextField name=\"familyhead\"\n                    value={data[row] === undefined ? '' : data[row]['FamilyHead']}\n                    onFocus={(event) => isFocused({ ...focus, familyhead: event.target.value === '' ? false : true })}\n                    onBlur={(event) => isFocused({ ...focus, familyhead: event.target.value === '' ? false : true })}\n                    onChange={(event) => {\n                        searchfamilyhead();\n                        const str = event.target.value.split(' ');\n                        for (let i = 0; i < str.length; i++) {\n\n                            str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n                        }\n\n                        const familyheadname = str.join(' ');\n                        setdata((currentPeople) => currentPeople.map((x, index) => index === row ? {\n                            ...x,\n                            FamilyHead: familyheadname\n                        } : x));\n                    }}\n                    list=\"searchfhead\"\n                >\n                </TextField>\n                    <datalist id=\"searchfhead\">\n                        {familyheads.map((k, key) => {\n                            return (\n                                <option key={key} >{k}</option>\n                            )\n                        })}\n                    </datalist>\n\n                    <span className={focus['familyhead'] === true ? \"floating-label2\" : \"floating-label1\"}>Enter Familyhead </span></label>\n                <div className=\"radio\">\n                    <div className=\"radioinput1\">\n                        <label>Baptized</label>\n                        <TextField name=\"baptized\" type=\"radio\"\n                            checked={data[row] === undefined ? '' : data[row]['Baptized'] === \"1\" ? true : false}\n                            value='true'\n                            onChange={(event) => {\n                                setdata((currentPeople) => currentPeople.map((x, index) => index === row ? {\n                                    ...x,\n                                    Baptized: event.target.value === \"true\" ? \"1\" : \"0\"\n                                } : x));\n                            }}\n                        ></TextField>\n\n                        <label>Not baptized</label>\n                        <TextField name=\"baptized\" type=\"radio\"\n                            checked={data[row] === undefined ? '' : data[row]['Baptized'] === \"0\" ? true : false}\n                            value='false'\n                            onChange={(event) => {\n                                setdata((currentPeople) => currentPeople.map((x, index) => index === row ? {\n                                    ...x,\n                                    Baptized: event.target.value === \"true\" ? \"1\" : \"0\"\n                                } : x));\n                            }}\n                        ></TextField>\n                    </div>\n\n                    <div className=\"radioinput1\">\n                        <label>Android</label>  <TextField name=\"android\" type=\"radio\"\n                            checked={data[row] === undefined ? '' : data[row]['Android'] === \"1\" ? true : false}\n                            value='true'\n                            onChange={(event) => {\n                                setdata((currentPeople) => currentPeople.map((x, index) => index === row ? {\n                                    ...x,\n                                    Android: event.target.value === \"true\" ? \"1\" : \"0\"\n                                } : x));\n                            }}\n\n                        ></TextField>\n\n                        <label>Normal</label>   <TextField name=\"android\" type=\"radio\"\n                            checked={data[row] === undefined ? '' : data[row]['Android'] === \"0\" ? true : false}\n                            value='false'\n                            onChange={(event) => {\n                                setdata((currentPeople) => currentPeople.map((x, index) => index === row ? {\n                                    ...x,\n                                    Android: event.target.value === \"true\" ? \"1\" : \"0\"\n                                } : x));\n                            }}\n                        ></TextField>\n                    </div>\n                </div>\n                <Button onClick={() => makechanges()} className=\"bt1\">Make Changes</Button>\n                <Button onClick={() => deleteRecord()} className=\"bt1\">Delete Selected Form</Button>\n            </Grid>\n\n\n            <CTable>\n                <CTableHead>\n                    <CTableHeaderCell>SELF ID</CTableHeaderCell>\n                    <CTableHeaderCell>Name</CTableHeaderCell>\n                    <CTableHeaderCell>Father or Husband Name</CTableHeaderCell>\n\n                </CTableHead>\n                <CTableBody>\n                    {data.map((k, index) => {\n                        return (\n                            <CTableRow key={index}>\n                                <CTableDataCell>{k.SelfID}</CTableDataCell>\n                                <CTableDataCell>{k.Name}</CTableDataCell>\n                                <CTableDataCell>{k.FamilyHead}</CTableDataCell>\n                                <CTableDataCell><Button\n                                    onClick={() => {\n                                        setrow(index);\n                                        setdisplay2(\"block\");\n                                    }}\n                                >Edit</Button></CTableDataCell>\n\n                            </CTableRow>\n                        )\n                    })}\n                </CTableBody>\n            </CTable>\n\n\n\n\n        </Grid>\n    )\n}\nexport default EditData;"]},"metadata":{},"sourceType":"module"}