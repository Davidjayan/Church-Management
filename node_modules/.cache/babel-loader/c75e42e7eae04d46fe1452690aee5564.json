{"ast":null,"code":"var _jsxFileName = \"/home/david/Desktop/mydev/coreui-free-react-admin-template/src/views/Components/Dataentry.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { url } from \"../Constants\";\nimport { Grid, TextField, Button, FormControlLabel, RadioGroup, Radio, Autocomplete } from \"@mui/material\";\nimport { padding } from \"@mui/system\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dataentry = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [dob, setDob] = useState('');\n  const [gender, setGender] = useState('');\n  const [married, setMarried] = useState(false);\n  const [weddingdate, setWeddingdate] = useState('');\n  const [emailid, setEmailid] = useState('');\n  const [mobile, setMobile] = useState();\n  const [address, setAddress] = useState('');\n  const [familyhead, setFamilyhead] = useState('');\n  const [baptized, setBaptized] = useState(false);\n  const [android, setAndroid] = useState(true);\n  const [familyid, setFamilyid] = useState('');\n  const [selfid, setSelfid] = useState('');\n  const [familyheads, setFamilyheads] = useState([]);\n  const [validity, setvalidity] = useState();\n  const [data, setData] = useState({\n    \"name\": '',\n    \"dob\": '',\n    \"gender\": '',\n    \"weddingdate\": '',\n    \"emailid\": '',\n    \"mobile\": '',\n    \"address\": '',\n    \"familyhead\": '',\n    \"familyid\": '',\n    \"selfid\": '',\n    \"android\": false,\n    \"baptized\": false,\n    \"married\": false\n  });\n  const str = dob.split('-');\n  const today = new Date();\n  const mon = today.getMonth();\n  const year = today.getFullYear();\n  let age;\n  let k = year - 1;\n\n  if (mon >= str[1]) {\n    age = year - str[0];\n  } else {\n    age = k - str[0];\n  }\n\n  const addrecords = () => {\n    if ((data.familyid && data.familyhead && data.address && data.selfid && data.name && data.gender && !data.mobile.length < 10) !== '') {\n      setvalidity(true);\n      console.log(validity);\n    } else {\n      setvalidity(false);\n    }\n\n    if (!validity) {\n      let Familyid = familyid;\n      let Selfid = selfid;\n      let Name = name;\n      let Dob = dob;\n      let Age = age;\n      let Gender = gender;\n      let Married = married;\n      let Weddingdate = weddingdate;\n      let Emailid = emailid;\n      let Mobile = mobile;\n      let Address = address;\n      let Familyhead = familyhead;\n      let Baptized = baptized;\n      let Android = android;\n      fetch(\"\".concat(url, \"/jehovanissi/backend/apis/member_details.php\"), {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: Name,\n          dob: Dob,\n          age: Age,\n          gender: Gender,\n          married: Married,\n          weddingdate: Weddingdate,\n          emailid: Emailid,\n          mobile: Mobile,\n          address: Address,\n          familyhead: Familyhead,\n          baptized: Baptized,\n          android: Android,\n          familyid: Familyid,\n          selfid: Selfid\n        })\n      }).then(res => res.json()).then(result => {\n        alert(result);\n        window.location.reload();\n      }).catch(error => {\n        console.error(error);\n      });\n    } else {\n      alert(\"Input All required\");\n    }\n  };\n\n  const searchfamilyhead = () => {\n    fetch(\"\".concat(url, \"/jehovanissi/backend/apis/searchfamilyhead.php\"), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(result => {\n      let filteredresult = [...new Set(result)];\n      setFamilyheads(filteredresult);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  useEffect(() => {\n    searchfamilyhead();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    direction: \"column\",\n    alignItems: \"stretch\",\n    justifyItems: \"stretch\",\n    container: true,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      direction: \"column\",\n      alignItems: \"center\",\n      justifyItems: \"stretch\",\n      container: true,\n      item: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          style: {\n            width: 300,\n            marginRight: 15\n          },\n          name: \"familyid\",\n          value: data.familyid,\n          margin: \"dense\",\n          variant: \"standard\",\n          onChange: event => {\n            setData({ ...data,\n              familyid: event.target.value.toUpperCase()\n            });\n          },\n          placeholder: \"Family ID\",\n          label: \"Family ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"selfid\",\n          style: {\n            width: 300,\n            marginRight: 15\n          },\n          value: data.selfid,\n          margin: \"dense\",\n          variant: \"standard\",\n          onFocus: () => setData({ ...data,\n            selfid: data.familyid.slice(3)\n          }),\n          placeholder: \"Self ID\",\n          label: \"Self ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          name: \"name\",\n          value: data.name,\n          style: {\n            width: 300,\n            marginRight: 15\n          },\n          margin: \"dense\",\n          variant: \"standard\",\n          onChange: event => {\n            const str = event.target.value.split(' ');\n\n            for (let i = 0; i < str.length; i++) {\n              str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n            }\n\n            const Nameoff = str.join(' ');\n            setData({ ...data,\n              name: Nameoff\n            });\n          },\n          placeholder: \"Enter Name\",\n          label: \"Enter Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          type: \"date\",\n          name: \"dob\",\n          style: {\n            width: 300,\n            marginRight: 15\n          },\n          margin: \"dense\",\n          value: data.dob,\n          variant: \"standard\",\n          onChange: event => setData({ ...data,\n            dob: event.target.value\n          }),\n          placeholder: \"Enter DOB\",\n          label: \"Enter DOB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        row: true,\n        \"aria-label\": \"gender\",\n        name: \"row-radio-buttons-group\",\n        style: {\n          width: 300,\n          justifyContent: \"space-evenly\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"male\",\n          name: \"gender\",\n          label: \"Male\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 34\n          }, this),\n          onChange: event => setData({ ...data,\n            gender: event.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"female\",\n          name: \"gender\",\n          label: \"Female\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 34\n          }, this),\n          onChange: event => setData({ ...data,\n            gender: event.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        row: true,\n        \"aria-label\": \"martial-status\",\n        name: \"row-radio-buttons-group\",\n        style: {\n          width: 300,\n          justifyContent: \"space-evenly\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: true,\n          label: \"Married\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 34\n          }, this),\n          onChange: event => {\n            setData({ ...data,\n              married: event.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: false,\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 34\n          }, this),\n          label: \"Unmarried\",\n          onChange: event => {\n            setData({ ...data,\n              married: event.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"date\",\n        label: \"Wedding Date\",\n        style: {\n          width: 300,\n          marginRight: 15\n        },\n        margin: \"dense\",\n        variant: \"standard\",\n        value: data.weddingdate,\n        onChange: event => setData({ ...data,\n          weddingdate: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          name: \"emailid\",\n          margin: \"dense\",\n          label: \"Email ID\",\n          style: {\n            width: 300,\n            marginRight: 15\n          },\n          variant: \"standard\",\n          onChange: event => setData({ ...data,\n            emailid: event.target.value\n          }),\n          value: data.emailid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"mobile\",\n          style: {\n            width: 300,\n            marginRight: 15\n          },\n          label: \"Mobile\",\n          margin: \"dense\",\n          variant: \"standard\",\n          value: data.mobile,\n          onChange: event => {\n            let patt = /[^0-9]/g;\n            const ph = event.target.value.replace(patt, '');\n            setData({ ...data,\n              mobile: ph.slice(0, 10)\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          name: \"address\",\n          label: \"Address\",\n          style: {\n            width: 300,\n            marginRight: 15\n          },\n          margin: \"dense\",\n          variant: \"standard\",\n          value: data.address,\n          onChange: event => {\n            const str = event.target.value.split(',');\n\n            for (let i = 0; i < str.length; i++) {\n              str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n            }\n\n            const address = str.join(',');\n            setData({ ...data,\n              address: address\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n          options: familyheads,\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            name: \"familyhead\",\n            value: data.familyhead,\n            margin: \"dense\",\n            variant: \"standard\",\n            label: \"Family Head\",\n            onChange: event => {\n              const str = event.target.value.split(' ');\n\n              for (let i = 0; i < str.length; i++) {\n                str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n              }\n\n              const familyheadname = str.join(' ');\n              setData({ ...data,\n                familyhead: familyheadname\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        row: true,\n        \"aria-label\": \"Baptizm\",\n        name: \"row-radio-buttons-group\",\n        style: {\n          width: 300,\n          justifyContent: \"space-evenly\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 34\n          }, this),\n          value: true,\n          label: \"Baptized\",\n          onChange: event => setData({ ...data,\n            baptized: event.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: false,\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 34\n          }, this),\n          label: \"Not Baptized\",\n          onChange: event => setData({ ...data,\n            baptized: event.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        row: true,\n        \"aria-label\": \"mobile-type\",\n        name: \"row-radio-buttons-group\",\n        style: {\n          width: 300,\n          justifyContent: \"space-evenly\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          label: \"Android\",\n          value: true,\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 34\n          }, this),\n          onChange: event => setData({ ...data,\n            android: event.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          label: \"Normal\",\n          value: false,\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 34\n          }, this),\n          onChange: event => setData({ ...data,\n            android: event.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: addrecords,\n        children: \"Add to records\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: JSON.stringify(data)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dataentry, \"2v+PMc95+C6rYNqwWWUSO2tAsZE=\");\n\n_c = Dataentry;\nexport default Dataentry;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dataentry\");","map":{"version":3,"sources":["/home/david/Desktop/mydev/coreui-free-react-admin-template/src/views/Components/Dataentry.js"],"names":["React","useEffect","useState","url","Grid","TextField","Button","FormControlLabel","RadioGroup","Radio","Autocomplete","padding","Dataentry","name","setName","dob","setDob","gender","setGender","married","setMarried","weddingdate","setWeddingdate","emailid","setEmailid","mobile","setMobile","address","setAddress","familyhead","setFamilyhead","baptized","setBaptized","android","setAndroid","familyid","setFamilyid","selfid","setSelfid","familyheads","setFamilyheads","validity","setvalidity","data","setData","str","split","today","Date","mon","getMonth","year","getFullYear","age","k","addrecords","length","console","log","Familyid","Selfid","Name","Dob","Age","Gender","Married","Weddingdate","Emailid","Mobile","Address","Familyhead","Baptized","Android","fetch","method","headers","body","JSON","stringify","then","res","json","result","alert","window","location","reload","catch","error","searchfamilyhead","filteredresult","Set","width","marginRight","event","target","value","toUpperCase","slice","i","charAt","substring","Nameoff","join","justifyContent","patt","ph","replace","params","familyheadname"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { url } from \"../Constants\";\nimport { Grid, TextField, Button, FormControlLabel, RadioGroup, Radio, Autocomplete } from \"@mui/material\";\nimport { padding } from \"@mui/system\";\n\nconst Dataentry = () => {\n    const [name, setName] = useState('');\n    const [dob, setDob] = useState('');\n    const [gender, setGender] = useState('');\n    const [married, setMarried] = useState(false);\n    const [weddingdate, setWeddingdate] = useState('');\n    const [emailid, setEmailid] = useState('');\n    const [mobile, setMobile] = useState();\n    const [address, setAddress] = useState('');\n    const [familyhead, setFamilyhead] = useState('');\n    const [baptized, setBaptized] = useState(false);\n    const [android, setAndroid] = useState(true);\n    const [familyid, setFamilyid] = useState('');\n    const [selfid, setSelfid] = useState('');\n    const [familyheads, setFamilyheads] = useState([]);\n    const [validity, setvalidity] = useState();\n\n    const [data, setData] = useState({\n        \"name\": '',\n        \"dob\": '',\n        \"gender\": '',\n        \"weddingdate\": '',\n        \"emailid\": '',\n        \"mobile\": '',\n        \"address\": '',\n        \"familyhead\": '',\n        \"familyid\": '',\n        \"selfid\": '',\n        \"android\": false,\n        \"baptized\": false,\n        \"married\": false\n\n    })\n\n    const str = dob.split('-');\n    const today = new Date();\n    const mon = today.getMonth();\n    const year = today.getFullYear();\n    let age;\n\n\n\n    let k = year - 1;\n\n    if (mon >= str[1]) {\n        age = year - str[0];\n\n\n    }\n    else {\n        age = k - str[0];\n\n    }\n\n    const addrecords = () => {\n        if ((data.familyid && data.familyhead && data.address && data.selfid && data.name && data.gender && (!data.mobile.length < 10)) !== '') {\n            setvalidity(true);\n            console.log(validity);\n        }\n        else {\n            setvalidity(false);\n        }\n\n        if (!validity) {\n\n            let Familyid = familyid;\n            let Selfid = selfid;\n            let Name = name;\n            let Dob = dob;\n            let Age = age;\n            let Gender = gender;\n            let Married = married;\n            let Weddingdate = weddingdate;\n            let Emailid = emailid;\n            let Mobile = mobile;\n            let Address = address;\n            let Familyhead = familyhead;\n            let Baptized = baptized;\n            let Android = android;\n\n\n            fetch(`${url}/jehovanissi/backend/apis/member_details.php`, {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n\n                    name: Name,\n                    dob: Dob,\n                    age: Age,\n                    gender: Gender,\n                    married: Married,\n                    weddingdate: Weddingdate,\n                    emailid: Emailid,\n                    mobile: Mobile,\n                    address: Address,\n                    familyhead: Familyhead,\n                    baptized: Baptized,\n                    android: Android,\n                    familyid: Familyid,\n                    selfid: Selfid\n                })\n            })\n                .then(res => res.json())\n                .then((result) => {\n                    alert(result);\n                    window.location.reload();\n                }).catch((error) => {\n                    console.error(error);\n                });\n        }\n        else {\n            alert(\"Input All required\");\n\n        }\n\n\n\n    }\n\n    const searchfamilyhead = () => {\n        fetch(`${url}/jehovanissi/backend/apis/searchfamilyhead.php`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n\n        })\n            .then(res => res.json())\n            .then((result) => {\n                let filteredresult = [...new Set(result)];\n                setFamilyheads(filteredresult);\n            }).catch((error) => {\n                console.error(error);\n            });\n    }\n    useEffect(() => {\n        searchfamilyhead();\n    }, [])\n\n    return (\n        <Grid\n            direction=\"column\"\n            alignItems={\"stretch\"}\n            justifyItems={\"stretch\"}\n            container\n        >\n            <Grid\n                direction={\"column\"}\n                alignItems={\"center\"}\n                justifyItems={\"stretch\"}\n                container\n                item\n            >\n                <Grid>\n                    <TextField\n                        style={{ width: 300, marginRight: 15 }}\n                        name=\"familyid\"\n                        value={data.familyid}\n                        margin=\"dense\"\n                        variant=\"standard\"\n                        onChange={(event) => {\n                            setData({ ...data, familyid: event.target.value.toUpperCase() })\n                        }}\n                        placeholder=\"Family ID\"\n                        label=\"Family ID\"\n                    />\n                    <TextField\n                        name=\"selfid\"\n                        style={{ width: 300, marginRight: 15 }}\n                        value={data.selfid}\n                        margin=\"dense\"\n                        variant=\"standard\"\n                        onFocus={() => setData({ ...data, selfid: data.familyid.slice(3) })}\n                        placeholder=\"Self ID\"\n                        label=\"Self ID\"\n                    />\n                </Grid>\n                <Grid>\n                    <TextField\n                        name=\"name\"\n                        value={data.name}\n                        style={{ width: 300, marginRight: 15 }}\n                        margin=\"dense\"\n                        variant=\"standard\"\n                        onChange={(event) => {\n                            const str = event.target.value.split(' ');\n                            for (let i = 0; i < str.length; i++) {\n\n                                str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n                            }\n                            const Nameoff = str.join(' ');\n                            setData({ ...data, name: Nameoff })\n                        }}\n                        placeholder=\"Enter Name\"\n                        label=\"Enter Name\"\n                    />\n                    <TextField\n                        type=\"date\"\n                        name=\"dob\"\n                        style={{ width: 300, marginRight: 15 }}\n                        margin=\"dense\"\n                        value={data.dob}\n                        variant=\"standard\"\n                        onChange={(event) => setData({ ...data, dob: event.target.value })}\n                        placeholder=\"Enter DOB\"\n                        label=\"Enter DOB\"\n                    />\n                </Grid>\n                <RadioGroup\n                    row\n                    aria-label=\"gender\"\n                    name=\"row-radio-buttons-group\"\n                    style={{\n                        width: 300,\n                        justifyContent: \"space-evenly\"\n                    }}\n                >\n                    <FormControlLabel\n                        value=\"male\"\n                        name=\"gender\"\n                        label={\"Male\"}\n                        control={<Radio />}\n                        onChange={(event) => setData({ ...data, gender: event.target.value })} />\n                    <FormControlLabel\n                        value=\"female\"\n                        name=\"gender\"\n                        label={\"Female\"}\n                        control={<Radio />}\n                        onChange={(event) => setData({ ...data, gender: event.target.value })} />\n                </RadioGroup>\n                <RadioGroup\n                    row\n                    aria-label=\"martial-status\"\n                    name=\"row-radio-buttons-group\"\n                    style={{\n                        width: 300,\n                        justifyContent: \"space-evenly\"\n                    }}\n                >\n                    <FormControlLabel\n                        value={true}\n                        label={\"Married\"}\n                        control={<Radio />}\n                        onChange={(event) => { setData({ ...data, married: event.target.value }) }} />\n                    <FormControlLabel\n                        value={false}\n                        control={<Radio />}\n                        label=\"Unmarried\"\n                        onChange={(event) => { setData({ ...data, married: event.target.value }) }} />\n                </RadioGroup>\n\n                <TextField\n                    type=\"date\"\n                    label=\"Wedding Date\"\n                    style={{ width: 300, marginRight: 15 }}\n                    margin=\"dense\"\n                    variant=\"standard\"\n                    value={data.weddingdate}\n                    onChange={(event) => setData({ ...data, weddingdate: event.target.value })}\n                />\n                <Grid>\n                    <TextField\n                        name=\"emailid\"\n                        margin=\"dense\"\n                        label=\"Email ID\"\n                        style={{ width: 300, marginRight: 15 }}\n                        variant=\"standard\"\n                        onChange={(event) => setData({ ...data, emailid: event.target.value })}\n                        value={data.emailid}\n                    />\n\n                    <TextField\n                        name=\"mobile\"\n                        style={{ width: 300, marginRight: 15 }}\n                        label=\"Mobile\"\n                        margin=\"dense\"\n                        variant=\"standard\"\n                        value={data.mobile}\n                        onChange={(event) => {\n                            let patt = /[^0-9]/g;\n                            const ph = event.target.value.replace(patt, '');\n                            setData({ ...data, mobile: ph.slice(0, 10) });\n                        }} />\n                </Grid>\n\n                <Grid>\n                    <TextField\n                        name=\"address\"\n                        label=\"Address\"\n                        style={{ width: 300, marginRight: 15 }}\n                        margin=\"dense\"\n                        variant=\"standard\"\n                        value={data.address}\n                        onChange={(event) => {\n                            const str = event.target.value.split(',');\n                            for (let i = 0; i < str.length; i++) {\n                                str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n                            }\n                            const address = str.join(',');\n                            setData({ ...data, address: address })\n                        }}\n                    />\n                    <Autocomplete\n                        options={familyheads}\n                        renderInput={(params) =>\n                            <TextField\n                                {...params}\n                                name=\"familyhead\"\n                                value={data.familyhead}\n                                margin=\"dense\"\n                                variant=\"standard\"\n                                label=\"Family Head\"\n                                onChange={(event) => {\n                                    const str = event.target.value.split(' ');\n                                    for (let i = 0; i < str.length; i++) {\n                                        str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n                                    }\n                                    const familyheadname = str.join(' ');\n                                    setData({ ...data, familyhead: familyheadname })\n                                }}\n                            />\n                        }\n                    />\n                </Grid>\n                <RadioGroup\n                    row\n                    aria-label=\"Baptizm\"\n                    name=\"row-radio-buttons-group\"\n                    style={{\n                        width: 300,\n                        justifyContent: \"space-evenly\"\n                    }}\n                >\n                    <FormControlLabel\n                        control={<Radio />}\n                        value={true}\n                        label={\"Baptized\"}\n                        onChange={(event) => setData({ ...data, baptized: event.target.value })}\n                    />\n                    <FormControlLabel\n                        value={false}\n                        control={<Radio />}\n                        label={\"Not Baptized\"}\n                        onChange={(event) => setData({ ...data, baptized: event.target.value })}\n                    />\n                </RadioGroup>\n\n                <RadioGroup\n                    row\n                    aria-label=\"mobile-type\"\n                    name=\"row-radio-buttons-group\"\n                    style={{\n                        width: 300,\n                        justifyContent: \"space-evenly\"\n                    }}\n                >\n                    <FormControlLabel\n                        label={\"Android\"}\n                        value={true}\n                        control={<Radio />}\n                        onChange={(event) => setData({ ...data, android: event.target.value })} />\n                    <FormControlLabel\n                        label={\"Normal\"}\n                        value={false}\n                        control={<Radio />}\n                        onChange={(event) => setData({ ...data, android: event.target.value })} />\n                </RadioGroup>\n\n                <Button\n                    variant=\"contained\"\n                    onClick={addrecords} >\n                    Add to records</Button>\n            </Grid>\n            <Grid>\n                {JSON.stringify(data)}\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default Dataentry;"]},"metadata":{},"sourceType":"module"}