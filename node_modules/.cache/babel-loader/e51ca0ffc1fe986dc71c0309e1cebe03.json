{"ast":null,"code":"var _jsxFileName = \"/home/david/Desktop/mydev/coreui-free-react-admin-template/src/views/Components/EditData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { url } from '../Constants';\nimport { TextField } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditData = () => {\n  _s();\n\n  const [data, setdata] = useState([]);\n  const [familyheads, setFamilyheads] = useState([]);\n  const [addresses, setAddresses] = useState([]);\n  useEffect(() => {\n    fetch(\"\".concat(url, \"/jehovanissi/backend/apis/data-fetch.php\"), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(result => {\n      setdata(result);\n      result.map((x, key) => {\n        setdata(currentPeople => currentPeople.map((p, l) => l === key ? { ...p,\n          InitialSID: p.SelfID\n        } : p));\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [2]);\n\n  const searchfamilyhead = () => {\n    fetch(\"\".concat(url, \"/jehovanissi/backend/apis/searchfamilyhead.php\"), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(result => {\n      let filteredresult = [...new Set(result)];\n      setFamilyheads(filteredresult);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  const searchaddress = () => {\n    fetch(\"\".concat(url, \"/jehovanissi/backend/apis/searchaddress.php\"), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(result => {\n      let filteredresult = [...new Set(result)];\n      setAddresses(filteredresult);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  const [display2, setdisplay2] = useState(\"none\");\n  const [row, setrow] = useState(0);\n  const [focus, isFocused] = useState({\n    'familyid': data[row] !== undefined ? data[row]['FamilyID'] !== '' ? true : false : true,\n    'selfid': data[row] !== undefined ? data[row]['SelfID'] !== '' ? true : false : true,\n    'name': data[row] !== undefined ? data[row]['Name'] !== '' ? true : false : true,\n    'email': data[row] !== undefined ? data[row]['EmailID'] !== '' ? true : false : true,\n    'mobile': data[row] !== undefined ? data[row]['Mobile'] !== '' ? true : false : true,\n    'address': data[row] !== undefined ? data[row]['Address'] !== '' ? true : false : true,\n    'familyhead': data[row] !== undefined ? data[row]['FamilyHead'] !== '' ? true : false : true\n  });\n\n  const makechanges = () => {\n    fetch(\"\".concat(url, \"/jehovanissi/backend/apis/data-edit.php\"), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        data: data[row]\n      })\n    }).then(res => res.json()).then(result => {\n      alert(result);\n      window.location.reload();\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const deleteRecord = () => {\n    fetch(\"\".concat(url, \"/jehovanissi/backend/apis/data-delete.php\"), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        selfid: data[row]['SelfID']\n      })\n    }).then(res => res.json()).then(result => {\n      alert(result);\n      window.location.reload();\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const [searchby, setsearchby] = useState(\"id\");\n  const [value, setvalue] = useState();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editform\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"   \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Search By\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"searchby\",\n        onChange: event => setsearchby(event.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"id\",\n          children: \"Id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        onChange: event => {\n          const func = k => {\n            const str = k.split(' ');\n\n            for (let i = 0; i < str.length; i++) {\n              str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n            }\n\n            return str.join(' ');\n          };\n\n          let val = searchby === \"id\" ? event.target.value.toUpperCase() : func(event.target.value);\n          setvalue(searchby === \"id\" ? event.target.value.toUpperCase() : func(event.target.value));\n\n          if (searchby === \"id\") {\n            data.map((l, index) => {\n              if (l.FamilyID === val) {\n                setrow(index);\n                setdisplay2(\"block\");\n              }\n            });\n          } else if (searchby === \"name\") {\n            data.map((l, index) => {\n              if (l.Name === val) {\n                setrow(index);\n                setdisplay2(\"block\");\n              }\n            });\n          }\n        },\n        value: value,\n        list: searchby === \"id\" ? \"idsearch\" : \"namesearch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n      id: \"idsearch\",\n      children: data.map((k, key) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          children: k.FamilyID\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n      id: \"namesearch\",\n      children: data.map((k, key) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          children: k.Name\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: display2\n      },\n      className: \"form1\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          name: \"familyid\",\n          value: data[row] === undefined ? '' : data[row]['FamilyID'],\n          onChange: event => {\n            setdata(currentPeople => currentPeople.map((x, index) => index === row ? { ...x,\n              FamilyID: event.target.value.toUpperCase(),\n              SelfID: event.target.value.slice(3)\n            } : x));\n          },\n          className: \"checkk1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: focus['familyid'] === true ? \"floating-label2\" : \"floating-label1\",\n          children: \"Family id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          name: \"selfid\",\n          disabled: \"true\",\n          value: data[row] === undefined ? '' : data[row]['SelfID']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: focus['selfid'] === true ? \"floating-label2\" : \"floating-label1\",\n          children: \"Enter SelfID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 128\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          name: \"name\",\n          value: data[row] === undefined ? '' : data[row]['Name'],\n          onFocus: event => isFocused({ ...focus,\n            name: event.target.value === '' ? false : true\n          }),\n          onBlur: event => isFocused({ ...focus,\n            name: event.target.value === '' ? false : true\n          }),\n          onChange: event => {\n            const str = event.target.value.split(' ');\n\n            for (let i = 0; i < str.length; i++) {\n              str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n            }\n\n            const Nameoff = str.join(' ');\n            setdata(currentPeople => currentPeople.map((x, index) => index === row ? { ...x,\n              Name: Nameoff\n            } : x));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: focus['name'] === true ? \"floating-label2\" : \"floating-label1\",\n          children: \"Enter Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dateinputbox1\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          type: \"date\",\n          name: \"dob\",\n          value: data[row] === undefined ? '' : data[row]['DOB'],\n          placeholder: \"DOB\",\n          onChange: event => {\n            const str = event.target.value.split('-');\n            const today = new Date();\n            const mon = today.getMonth();\n            const year = today.getFullYear();\n            let age;\n            let k = year - 1;\n\n            if (mon >= str[1]) {\n              age = year - str[0];\n            } else {\n              age = k - str[0];\n            }\n\n            setdata(currentPeople => currentPeople.map((x, index) => index === row ? { ...x,\n              DOB: event.target.value,\n              Age: age\n            } : x));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: data[row] === undefined ? '' : data[row]['Age']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"radio1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"radioinput1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Male \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            type: \"radio\",\n            checked: data[row] === undefined ? '' : data[row]['Gender'] === \"male\" ? true : false,\n            value: \"male\",\n            name: \"gender\",\n            onChange: event => {\n              setdata(currentPeople => currentPeople.map((x, index) => index === row ? { ...x,\n                Gender: event.target.value\n              } : x));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 2\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Female\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 2\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            type: \"radio\",\n            checked: data[row] === undefined ? '' : data[row]['Gender'] === \"female\" ? true : false,\n            value: \"female\",\n            name: \"gender\",\n            onChange: event => {\n              setdata(currentPeople => currentPeople.map((x, index) => index === row ? { ...x,\n                Gender: event.target.value\n              } : x));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 2\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"radioinput1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Married \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            type: \"radio\",\n            checked: data[row] === undefined ? '' : data[row]['Married'] === \"1\" ? true : false,\n            value: \"true\",\n            onChange: event => {\n              setdata(currentPeople => currentPeople.map((x, index) => index === row ? { ...x,\n                Married: event.target.value === \"true\" ? \"1\" : \"0\"\n              } : x));\n            },\n            name: \"married\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 2\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Unmarried \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 2\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            type: \"radio\",\n            checked: data[row] === undefined ? '' : data[row]['Married'] === \"0\" ? true : false,\n            value: \"false\",\n            onChange: event => {\n              setdata(currentPeople => currentPeople.map((x, index) => index === row ? { ...x,\n                Married: event.target.value === \"true\" ? \"1\" : \"0\"\n              } : x));\n            },\n            name: \"married\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 2\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 2\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        style: {\n          display: data[row] === undefined ? \"none\" : data[row]['Married'] === \"1\" ? \"block\" : \"none\"\n        },\n        name: \"weddingdate\",\n        value: data[row] === undefined ? '' : data[row]['WeddingDate'],\n        type: \"date\",\n        placeholder: \"Wedding Date\",\n        onChange: event => {\n          setdata(currentPeople => currentPeople.map((x, index) => index === row ? { ...x,\n            WeddingDate: event.target.value\n          } : x));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          name: \"emailid\",\n          value: data[row] === undefined ? '' : data[row]['EmailID'],\n          onFocus: event => isFocused({ ...focus,\n            email: event.target.value === '' ? false : true\n          }),\n          onBlur: event => isFocused({ ...focus,\n            email: event.target.value === '' ? false : true\n          }),\n          onChange: event => {\n            setdata(currentPeople => currentPeople.map((x, index) => index === row ? { ...x,\n              EmailID: event.target.value\n            } : x));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: focus['email'] === true ? \"floating-label2\" : \"floating-label1\",\n          children: \"Enter EmailID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          name: \"mobile\",\n          value: data[row] === undefined ? '' : data[row]['Mobile'],\n          onFocus: event => isFocused({ ...focus,\n            mobile: event.target.value === '' ? false : true\n          }),\n          onBlur: event => isFocused({ ...focus,\n            mobile: event.target.value === '' ? false : true\n          }),\n          onChange: event => {\n            let patt = /[^0-9]/g;\n            const ph = event.target.value.replace(patt, '');\n            setdata(currentPeople => currentPeople.map((x, index) => index === row ? { ...x,\n              Mobile: ph\n            } : x));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: focus['mobile'] === true ? \"floating-label2\" : \"floating-label1\",\n          children: \"Enter Mobile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          name: \"address\",\n          value: data[row] === undefined ? '' : data[row]['Address'],\n          onFocus: event => isFocused({ ...focus,\n            address: event.target.value === '' ? false : true\n          }),\n          onBlur: event => isFocused({ ...focus,\n            address: event.target.value === '' ? false : true\n          }),\n          onChange: event => {\n            searchaddress();\n            const str = event.target.value.split(',');\n\n            for (let i = 0; i < str.length; i++) {\n              str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n            }\n\n            const address = str.join(',');\n            setdata(currentPeople => currentPeople.map((x, index) => index === row ? { ...x,\n              Address: address\n            } : x));\n          },\n          list: \"searchaddresses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n          id: \"searchaddresses\",\n          children: addresses.map((k, key) => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              children: k\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 18\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: focus['address'] === true ? \"floating-label2\" : \"floating-label1\",\n          children: \"Enter Address \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          name: \"familyhead\",\n          value: data[row] === undefined ? '' : data[row]['FamilyHead'],\n          onFocus: event => isFocused({ ...focus,\n            familyhead: event.target.value === '' ? false : true\n          }),\n          onBlur: event => isFocused({ ...focus,\n            familyhead: event.target.value === '' ? false : true\n          }),\n          onChange: event => {\n            searchfamilyhead();\n            const str = event.target.value.split(' ');\n\n            for (let i = 0; i < str.length; i++) {\n              str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n            }\n\n            const familyheadname = str.join(' ');\n            setdata(currentPeople => currentPeople.map((x, index) => index === row ? { ...x,\n              FamilyHead: familyheadname\n            } : x));\n          },\n          list: \"searchfhead\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n          id: \"searchfhead\",\n          children: familyheads.map((k, key) => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              children: k\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 18\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: focus['familyhead'] === true ? \"floating-label2\" : \"floating-label1\",\n          children: \"Enter Familyhead \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"radio\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"radioinput1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Baptized\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 2\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"baptized\",\n            type: \"radio\",\n            checked: data[row] === undefined ? '' : data[row]['Baptized'] === \"1\" ? true : false,\n            value: \"true\",\n            onChange: event => {\n              setdata(currentPeople => currentPeople.map((x, index) => index === row ? { ...x,\n                Baptized: event.target.value === \"true\" ? \"1\" : \"0\"\n              } : x));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 2\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Not baptized\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 2\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"baptized\",\n            type: \"radio\",\n            checked: data[row] === undefined ? '' : data[row]['Baptized'] === \"0\" ? true : false,\n            value: \"false\",\n            onChange: event => {\n              setdata(currentPeople => currentPeople.map((x, index) => index === row ? { ...x,\n                Baptized: event.target.value === \"true\" ? \"1\" : \"0\"\n              } : x));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 2\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"radioinput1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Android\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 2\n          }, this), \"  \", /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"android\",\n            type: \"radio\",\n            checked: data[row] === undefined ? '' : data[row]['Android'] === \"1\" ? true : false,\n            value: \"true\",\n            onChange: event => {\n              setdata(currentPeople => currentPeople.map((x, index) => index === row ? { ...x,\n                Android: event.target.value === \"true\" ? \"1\" : \"0\"\n              } : x));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 2\n          }, this), \"   \", /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"android\",\n            type: \"radio\",\n            checked: data[row] === undefined ? '' : data[row]['Android'] === \"0\" ? true : false,\n            value: \"false\",\n            onChange: event => {\n              setdata(currentPeople => currentPeople.map((x, index) => index === row ? { ...x,\n                Android: event.target.value === \"true\" ? \"1\" : \"0\"\n              } : x));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 2\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => makechanges(),\n        className: \"bt1\",\n        children: \"Make Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteRecord(),\n        className: \"bt1\",\n        children: \"Delete Selected Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 2\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"SELF ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Father or Husband Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 17\n      }, this), data.map((k, index) => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: k.SelfID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: k.Name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: k.FamilyHead\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setrow(index);\n                setdisplay2(\"block\");\n              },\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditData, \"E9mPyOog7VQsqp1XxSzaU4zw5Uw=\");\n\n_c = EditData;\nexport default EditData;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditData\");","map":{"version":3,"sources":["/home/david/Desktop/mydev/coreui-free-react-admin-template/src/views/Components/EditData.js"],"names":["React","useEffect","useState","url","TextField","EditData","data","setdata","familyheads","setFamilyheads","addresses","setAddresses","fetch","method","headers","then","res","json","result","map","x","key","currentPeople","p","l","InitialSID","SelfID","catch","error","console","log","searchfamilyhead","filteredresult","Set","searchaddress","display2","setdisplay2","row","setrow","focus","isFocused","undefined","makechanges","body","JSON","stringify","alert","window","location","reload","deleteRecord","selfid","searchby","setsearchby","value","setvalue","event","target","func","k","str","split","i","length","charAt","toUpperCase","substring","join","val","index","FamilyID","Name","display","slice","name","Nameoff","today","Date","mon","getMonth","year","getFullYear","age","DOB","Age","Gender","Married","WeddingDate","email","EmailID","mobile","patt","ph","replace","Mobile","address","Address","familyhead","familyheadname","FamilyHead","Baptized","Android"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { url } from '../Constants';\nimport { TextField } from '@mui/material';\n\nconst EditData = () =>{\n        const [data,setdata]=useState([]);\n        const [familyheads,setFamilyheads]  = useState([]);\n        const [addresses,setAddresses]  = useState([]);\n                \n\n\n    useEffect(()=>{\n        fetch(`${url}/jehovanissi/backend/apis/data-fetch.php`,{\n        method:'POST',\n        headers:{\n          'Accept' : 'application/json', \n          'Content-Type' : 'application/json'\n        },\n        \n      }).then((res)=>res.json())\n        .then((result)=>{\n            setdata(result);\n            result.map((x,key)=>{\n                setdata((currentPeople)=>currentPeople.map((p,l)=>l===key?{\n                    ...p,\n                    InitialSID:p.SelfID,\n                }:p));   \n            })\n        })\n        .catch((error)=>{\n            console.log(error);\n        })\n    },[2]);\n\n\n    const searchfamilyhead = () =>{\n        fetch(`${url}/jehovanissi/backend/apis/searchfamilyhead.php`,{\n        method:'POST',\n        headers:{\n          'Accept' : 'application/json', \n          'Content-Type' : 'application/json'\n        },\n        \n      })\n        .then(res => res.json())\n        .then((result) => {\n            let filteredresult = [...new Set(result)];\n              setFamilyheads(filteredresult);\n          }).catch((error)=>{\n            console.error(error);\n          });\n    }\n    const searchaddress= () =>{\n        fetch(`${url}/jehovanissi/backend/apis/searchaddress.php`,{\n        method:'POST',\n        headers:{\n          'Accept' : 'application/json', \n          'Content-Type' : 'application/json'\n        },\n        \n      })\n        .then(res => res.json())\n        .then((result) => {\n            let filteredresult = [...new Set(result)];\n              setAddresses(filteredresult);\n          }).catch((error)=>{\n            console.error(error);\n          });\n    }\n\n    const [display2,setdisplay2]=useState(\"none\");\n    const [row,setrow]=useState(0);\n    const [focus,isFocused]=useState({'familyid':data[row]!==undefined?data[row]['FamilyID']!==''?true:false:true,'selfid':data[row]!==undefined?data[row]['SelfID']!==''?true:false:true,'name':data[row]!==undefined?data[row]['Name']!==''?true:false:true,'email':data[row]!==undefined?data[row]['EmailID']!==''?true:false:true,'mobile':data[row]!==undefined?data[row]['Mobile']!==''?true:false:true,'address':data[row]!==undefined?data[row]['Address']!==''?true:false:true,'familyhead':data[row]!==undefined?data[row]['FamilyHead']!==''?true:false:true})\n\n\n    const makechanges = ()=>{\n        fetch(`${url}/jehovanissi/backend/apis/data-edit.php`,{\n        method:'POST',\n        headers:{\n          'Accept' : 'application/json', \n          'Content-Type' : 'application/json'\n        },\n        body:JSON.stringify({\n            data:data[row]\n        })\n        \n      }).then((res)=>res.json())\n        .then((result)=>{\n            alert(result);\n            window.location.reload();\n        })\n        .catch((error)=>{\n            console.log(error);\n        })\n    }\n    const deleteRecord = ()=>{\n       \n           \n        fetch(`${url}/jehovanissi/backend/apis/data-delete.php`,{\n        method:'POST',\n        headers:{\n          'Accept' : 'application/json', \n          'Content-Type' : 'application/json'\n        },\n        body:JSON.stringify({\n            selfid:data[row]['SelfID']\n        })\n        \n      }).then((res)=>res.json())\n        .then((result)=>{\n            alert(result);\n            window.location.reload();\n        })\n        .catch((error)=>{\n            console.log(error);\n        })\n    \n    }\n    const [searchby,setsearchby]=useState(\"id\");\n    const [value,setvalue] = useState();\n    return(\n        <div className=\"editform\" >\n         <div>   <p>Search By</p>\n            <select \n            name=\"searchby\" onChange={(event)=>setsearchby(event.target.value)}  >\n                <option value=\"id\">Id</option>\n                <option value=\"name\">Name</option>\n            </select>\n            <TextField onChange={(event)=>{\n                const func = (k) =>{\n                    const str = k.split(' ');\n               for (let i = 0;i<str.length;i++){\n\n                 str[i]=str[i].charAt(0).toUpperCase()+str[i].substring(1);\n               }\n               \n              return str.join(' ');\n                } \n                let val=searchby===\"id\"?event.target.value.toUpperCase():func(event.target.value);\n                setvalue(searchby===\"id\"?event.target.value.toUpperCase():func(event.target.value));\n                \n                if(searchby===\"id\"){\n                    data.map((l,index)=>{\n                        if(l.FamilyID===val){\n                            setrow(index);\n                            setdisplay2(\"block\");\n                        }\n                    })\n                }else if(searchby===\"name\"){\n                    data.map((l,index)=>{\n                        if(l.Name===val){\n                            setrow(index);\n                            setdisplay2(\"block\");\n                        }\n                    })\n                    \n                }\n            }} \n            value={value}\n\n            list={searchby===\"id\"?\"idsearch\":\"namesearch\"}\n            />\n\n            </div>\n            <datalist id=\"idsearch\" >\n                {data.map((k,key)=>{\n                    return(\n                        <option key={key}>{k.FamilyID}</option>\n                    )\n                })}\n            </datalist>\n\n            <datalist id=\"namesearch\" >\n                {data.map((k,key)=>{\n                    return(\n                        <option key={key} >{k.Name}</option>\n                    )\n                })}\n            </datalist>\n\n            \n            \n            <div style={{display:display2}} className=\"form1\" >\n            <label><TextField name=\"familyid\" value={data[row]===undefined?'':data[row]['FamilyID']} \n            onChange={(event)=>{\n                setdata((currentPeople)=>currentPeople.map((x,index)=>index===row?{\n                    ...x,\n                    FamilyID:event.target.value.toUpperCase(),\n                    SelfID:event.target.value.slice(3)\n                }:x));\n            }}\n            className=\"checkk1\"  /><span  className={focus['familyid']===true?\"floating-label2\":\"floating-label1\"}>Family id</span></label>\n            \n            <label><TextField name=\"selfid\" disabled=\"true\"  value={data[row]===undefined?'':data[row]['SelfID']} ></TextField><span className={focus['selfid']===true?\"floating-label2\":\"floating-label1\"}>Enter SelfID</span></label>\n\n            <label>\n     <TextField name=\"name\"    \n        value={data[row]===undefined?'':data[row]['Name']}\n        onFocus={(event)=>isFocused({...focus,name:event.target.value===''?false:true})}\n        onBlur={(event)=>isFocused({...focus,name:event.target.value===''?false:true})}\n\n     onChange={(event)=>{\n         const str = event.target.value.split(' ');\n               for (let i = 0;i<str.length;i++){\n\n                 str[i]=str[i].charAt(0).toUpperCase()+str[i].substring(1);\n               }\n               \n              const Nameoff = str.join(' ');\n              setdata((currentPeople)=>currentPeople.map((x,index)=>index===row?{\n                ...x,\n                Name:Nameoff\n            }:x));\n         }}/>\n     <span  className={focus['name']===true?\"floating-label2\":\"floating-label1\"}>Enter Name</span></label>\n <div className=\"dateinputbox1\" ><TextField type=\"date\" name=\"dob\" value={data[row]===undefined?'':data[row]['DOB']} placeholder=\"DOB\" \n    onChange={(event)=>{\n\n        const str = event.target.value.split('-');\n        const today = new Date();\n        const mon = today.getMonth();\n         const year = today.getFullYear();\n        let age;    \n        let k=year-1;\n        if(mon>=str[1]){\n        age = year-str[0];\n        }\n        else{\n        age = k-str[0];\n        }\n        setdata((currentPeople)=>currentPeople.map((x,index)=>index===row?{\n            ...x,\n            DOB:event.target.value,\n            Age:age\n        }:x));\n    }}\n \n /><p>{data[row]===undefined?'':data[row]['Age']}</p></div>\n \n \n <div className=\"radio1\"  >  \n <div className=\"radioinput1\"><label>Male </label>\n <TextField type=\"radio\" \n checked={data[row]===undefined?'':data[row]['Gender']===\"male\"?true:false} \n value=\"male\"  \n name=\"gender\" \n onChange={(event)=>{\n    setdata((currentPeople)=>currentPeople.map((x,index)=>index===row?{\n        ...x,\n        Gender:event.target.value\n    }:x));\n }}\n /> \n <label>Female</label>  \n <TextField type=\"radio\" \n checked={data[row]===undefined?'':data[row]['Gender']===\"female\"?true:false} \n value=\"female\" \n name=\"gender\"\n onChange={(event)=>{\n    setdata((currentPeople)=>currentPeople.map((x,index)=>index===row?{\n        ...x,\n        Gender:event.target.value\n    }:x));\n }}\n /></div>\n <div className=\"radioinput1\"><label>Married </label> \n <TextField type=\"radio\" \n checked={data[row]===undefined?'':data[row]['Married']===\"1\"?true:false} \n value='true' \n onChange={(event)=>{\n    setdata((currentPeople)=>currentPeople.map((x,index)=>index===row?{\n        ...x,\n        Married:event.target.value===\"true\"?\"1\":\"0\"\n    }:x));\n }}\n name=\"married\" /> \n <label>Unmarried </label> \n <TextField type=\"radio\" checked={data[row]===undefined?'':data[row]['Married']===\"0\"?true:false}\n value='false'\n onChange={(event)=>{\n    setdata((currentPeople)=>currentPeople.map((x,index)=>index===row?{\n        ...x,\n        Married:event.target.value===\"true\"?\"1\":\"0\"\n    }:x));\n }}\n name=\"married\"  /></div>\n </div>\n <TextField style={{display:data[row]===undefined?\"none\":data[row]['Married']===\"1\"?\"block\":\"none\"}} name=\"weddingdate\" value={data[row]===undefined?'':data[row]['WeddingDate']} type=\"date\" placeholder=\"Wedding Date\" \n onChange={(event)=>{\n    setdata((currentPeople)=>currentPeople.map((x,index)=>index===row?{\n        ...x,\n        WeddingDate:event.target.value\n    }:x));\n }}\n \n ></TextField>\n <label><TextField name=\"emailid\" value={data[row]===undefined?'':data[row]['EmailID']}\n        onFocus={(event)=>isFocused({...focus,email:event.target.value===''?false:true})}\n        onBlur={(event)=>isFocused({...focus,email:event.target.value===''?false:true})} \n        onChange={(event)=>{\n            setdata((currentPeople)=>currentPeople.map((x,index)=>index===row?{\n                ...x,\n                EmailID:event.target.value\n            }:x));\n         }}\n        ></TextField><span className={focus['email']===true?\"floating-label2\":\"floating-label1\"}>Enter EmailID</span></label>\n <label><TextField  name=\"mobile\" \n value={data[row]===undefined?'':data[row]['Mobile']}\n onFocus={(event)=>isFocused({...focus,mobile:event.target.value===''?false:true})}\n onBlur={(event)=>isFocused({...focus,mobile:event.target.value===''?false:true})}\n onChange={(event)=>{\n     \n    \n         \n     let patt = /[^0-9]/g;\n     const ph = event.target.value.replace(patt,'');\n     setdata((currentPeople)=>currentPeople.map((x,index)=>index===row?{\n        ...x,\n        Mobile:ph\n    }:x));\n      \n } } ></TextField><span  className={focus['mobile']===true?\"floating-label2\":\"floating-label1\"}>Enter Mobile</span></label>\n \n <label><TextField name=\"address\" value={data[row]===undefined?'':data[row]['Address']}\n        onFocus={(event)=>isFocused({...focus,address:event.target.value===''?false:true})}\n        onBlur={(event)=>isFocused({...focus,address:event.target.value===''?false:true})}   \n        onChange={(event)=>{\n\n            searchaddress();\n            const str = event.target.value.split(',');\n                      for (let i = 0;i<str.length;i++){\n       \n                        str[i]=str[i].charAt(0).toUpperCase()+str[i].substring(1);\n                      }\n                      \n                     const address = str.join(',');\n                     setdata((currentPeople)=>currentPeople.map((x,index)=>index===row?{\n                       ...x,\n                       Address:address\n                   }:x));\n            }}\n                list = \"searchaddresses\"\n        ></TextField>\n        <datalist id=\"searchaddresses\">\n         {addresses.map((k,key)=>{\n             return(\n                 <option key={key} >{k}</option>\n             )\n         })}\n     </datalist>\n        \n        <span  className={focus['address']===true?\"floating-label2\":\"floating-label1\"}>Enter Address </span></label>\n <label><TextField name=\"familyhead\"  \n value={data[row]===undefined?'':data[row]['FamilyHead']}\n onFocus={(event)=>isFocused({...focus,familyhead:event.target.value===''?false:true})}\n onBlur={(event)=>isFocused({...focus,familyhead:event.target.value===''?false:true})}\n onChange={(event)=>{\n     searchfamilyhead();\n     const str = event.target.value.split(' ');\n               for (let i = 0;i<str.length;i++){\n\n                 str[i]=str[i].charAt(0).toUpperCase()+str[i].substring(1);\n               }\n               \n              const familyheadname = str.join(' ');\n              setdata((currentPeople)=>currentPeople.map((x,index)=>index===row?{\n                ...x,\n                FamilyHead:familyheadname\n            }:x));\n     }} \n     list=\"searchfhead\"\n     >\n     </TextField>\n     <datalist id=\"searchfhead\">\n         {familyheads.map((k,key)=>{\n             return(\n                 <option key={key} >{k}</option>\n             )\n         })}\n     </datalist>\n\n     <span  className={focus['familyhead']===true?\"floating-label2\":\"floating-label1\"}>Enter Familyhead </span></label>\n <div className=\"radio\">\n <div className=\"radioinput1\">\n <label>Baptized</label>\n <TextField name=\"baptized\"  type=\"radio\" \n checked={data[row]===undefined?'':data[row]['Baptized']===\"1\"?true:false}\n value='true' \n onChange={(event)=>{\n    setdata((currentPeople)=>currentPeople.map((x,index)=>index===row?{\n        ...x,\n        Baptized:event.target.value===\"true\"?\"1\":\"0\"\n    }:x));\n }}\n ></TextField>\n \n <label>Not baptized</label>\n <TextField name=\"baptized\" type=\"radio\"\n checked={data[row]===undefined?'':data[row]['Baptized']===\"0\"?true:false}\n value='false' \n onChange={(event)=>{\n    setdata((currentPeople)=>currentPeople.map((x,index)=>index===row?{\n        ...x,\n        Baptized:event.target.value===\"true\"?\"1\":\"0\"\n    }:x));\n }}\n ></TextField>\n </div>\n \n <div className=\"radioinput1\">\n <label>Android</label>  <TextField name=\"android\" type=\"radio\" \n checked={data[row]===undefined?'':data[row]['Android']===\"1\"?true:false}\n value='true' \n onChange={(event)=>{\n    setdata((currentPeople)=>currentPeople.map((x,index)=>index===row?{\n        ...x,\n        Android:event.target.value===\"true\"?\"1\":\"0\"\n    }:x));\n }}\n \n ></TextField>\n\n <label>Normal</label>   <TextField name=\"android\"  type=\"radio\" \n checked={data[row]===undefined?'':data[row]['Android']===\"0\"?true:false}\n value='false'\n onChange={(event)=>{\n    setdata((currentPeople)=>currentPeople.map((x,index)=>index===row?{\n        ...x,\n        Android:event.target.value===\"true\"?\"1\":\"0\"\n    }:x));\n }}\n ></TextField>\n </div>\n </div>\n <button onClick={()=>makechanges()} className=\"bt1\">Make Changes</button>\n <button onClick={()=>deleteRecord()} className=\"bt1\">Delete Selected Form</button>\n</div>\n            \n\n<table>\n                <tr>\n                    <th>SELF ID</th>\n                    <th>Name</th>\n                    <th>Father or Husband Name</th>\n\n                </tr>\n                {data.map((k,index)=>{\n                    return(\n                        <tr key={index}>\n                            <td>{k.SelfID}</td>\n                            <td>{k.Name}</td>\n                            <td>{k.FamilyHead}</td>\n                            <td><button \n                                onClick={()=>{\n                                    setrow(index);\n                                    setdisplay2(\"block\");\n                                }}\n                             >Edit</button></td>\n\n                        </tr>\n                    )\n                })}\n            </table>\n\n\n\n\n        </div>\n    )\n}\nexport default EditData;"]},"metadata":{},"sourceType":"module"}