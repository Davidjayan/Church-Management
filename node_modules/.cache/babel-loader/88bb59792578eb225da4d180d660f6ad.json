{"ast":null,"code":"var _jsxFileName = \"/home/david/Desktop/mydev/coreui-free-react-admin-template/src/views/Components/Accounting.js\",\n    _s = $RefreshSig$();\n\nimport { Grid, TextField, Select, MenuItem, Button, IconButton, Typography, Table, TableBody, TableCell, TableRow, Autocomplete } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport { url } from \"../Constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Accounting = () => {\n  _s();\n\n  const [people, setPeople] = useState([{\n    id: 1,\n    Name: '',\n    type: '',\n    Amount: ''\n  }]);\n  const [count, setCount] = useState(2);\n  const [names, setnames] = useState([]);\n  const [searchterm, setsearchterm] = useState();\n  const arrOfferingTypes = [{\n    \"name\": \"Select\",\n    \"value\": \"\"\n  }, {\n    \"name\": \"Tithe\",\n    \"value\": \"Tithe\"\n  }, {\n    \"name\": \"Offering\",\n    \"value\": \"Offering\"\n  }, {\n    \"name\": \"Missionary\",\n    \"value\": \"Missionary\"\n  }, {\n    \"name\": \"Special Offering\",\n    \"value\": \"Special Offering\"\n  }, {\n    \"name\": \"Baptism Offering\",\n    \"value\": \"Baptism Offering\"\n  }, {\n    \"name\": \"Birthday Offering\",\n    \"value\": \"Birthday Offering\"\n  }, {\n    \"name\": \"Wedding Offering\",\n    \"value\": \"Wedding Offering\"\n  }, {\n    \"name\": \"Child Dedication Offering\",\n    \"value\": \"Child Dedication Offering\"\n  }, {\n    \"name\": \"Committed Offering\",\n    \"value\": \"Committed Offering\"\n  }, {\n    \"name\": \"Building Fund\",\n    \"value\": \"Building Fund\"\n  }];\n  const results = !searchterm ? names : names.filter(person => person.toLowerCase().includes(searchterm.toLocaleLowerCase()));\n  const [ones, setones] = useState(0);\n  const [twos, settwos] = useState(0);\n  const [fives, setfives] = useState(0);\n  const [tens, settens] = useState(0);\n  const [twentys, settwentys] = useState(0);\n  const [fiftys, setfiftys] = useState(0);\n  const [hundreds, sethundreds] = useState(0);\n  const [twohundreds, settwohundreds] = useState(0);\n  const [fivehundreds, setfivehunndreds] = useState(0);\n  const [twothousands, settwothousands] = useState(0);\n  const [dateofofferings, setdateofofferings] = useState();\n  const [offeringsAsObject, setOfferings] = useState([{\n    \"price\": 2000,\n    \"cnt\": 0,\n    \"tot\": 0\n  }, {\n    \"price\": 500,\n    \"cnt\": 0,\n    \"tot\": 0\n  }, {\n    \"price\": 200,\n    \"cnt\": 0,\n    \"tot\": 0\n  }, {\n    \"price\": 100,\n    \"cnt\": 0,\n    \"tot\": 0\n  }, {\n    \"price\": 50,\n    \"cnt\": 0,\n    \"tot\": 0\n  }, {\n    \"price\": 20,\n    \"cnt\": 0,\n    \"tot\": 0\n  }, {\n    \"price\": 10,\n    \"cnt\": 0,\n    \"tot\": 0\n  }, {\n    \"price\": 5,\n    \"cnt\": 0,\n    \"tot\": 0\n  }, {\n    \"price\": 2,\n    \"cnt\": 0,\n    \"tot\": 0\n  }, {\n    \"price\": 1,\n    \"cnt\": 0,\n    \"tot\": 0\n  }]);\n  let name = people.map(k => k.Name);\n  let type = people.map(k => k.type);\n  let amount = people.map(k => k.Amount);\n  let today = new Date();\n  let dd = today.getDate();\n  dd = dd < 10 ? \"0\" + dd : dd;\n  let mm = today.getMonth() + 1 > 12 ? today.getMonth() : today.getMonth() + 1;\n  mm = mm < 10 ? \"0\" + mm : mm;\n\n  if (dd === \"00\") {\n    dd = 31;\n    mm = mm - 1;\n  }\n\n  let yyyy = today.getFullYear();\n  today = yyyy + \"-\" + mm + \"-\" + dd;\n  let grandTotal = offeringsAsObject.reduce((accumulator, item) => accumulator + item.tot, 0);\n  grandTotal = isNaN(grandTotal) ? 0 : grandTotal; // let grandTotal = (1 * ones) + (2 * twos) + (5 * fives) + (10 * tens) + (20 * twentys) + (50 * fiftys) + (100 * hundreds) + (200 * twohundreds) + (500 * fivehundreds) + (2000 * twothousands);\n\n  let Total = isNaN(people.reduce((accumulator, item) => isNaN(accumulator) ? 0 : accumulator + parseFloat(item.Amount), 0)) ? 0 : people.reduce((accumulator, item) => isNaN(accumulator) ? 0 : accumulator + parseFloat(item.Amount), 0);\n  const churchOffering = isNaN(grandTotal - Total) ? 0 : grandTotal - Total;\n  let titheTotal = isNaN(people.reduce((accumulator, item) => item.type === 'Tithe' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : people.reduce((accumulator, item) => item.type === 'Tithe' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n  let offeringTotal = isNaN(people.reduce((accumulator, item) => item.type === 'Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : people.reduce((accumulator, item) => item.type === 'Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n  let missionaryTotal = isNaN(people.reduce((accumulator, item) => item.type === 'Missionary' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : people.reduce((accumulator, item) => item.type === 'Missionary' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n  let specialofferingTotal = isNaN(people.reduce((accumulator, item) => item.type === 'Special Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : people.reduce((accumulator, item) => item.type === 'Special Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n  let baptismofferingTotal = isNaN(people.reduce((accumulator, item) => item.type === 'Baptism Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : people.reduce((accumulator, item) => item.type === 'Baptism Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n  let birthdayofferingTotal = isNaN(people.reduce((accumulator, item) => item.type === 'Birthday Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : people.reduce((accumulator, item) => item.type === 'Birthday Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n  let weddingofferingTotal = isNaN(people.reduce((accumulator, item) => item.type === 'Wedding Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : people.reduce((accumulator, item) => item.type === 'Wedding Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n  let childdedicationofferingTotal = isNaN(people.reduce((accumulator, item) => item.type === 'Child Dedication Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : people.reduce((accumulator, item) => item.type === 'Child Dedication Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n  let committedofferingTotal = isNaN(people.reduce((accumulator, item) => item.type === 'Committed Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : people.reduce((accumulator, item) => item.type === 'Committed Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n  let buildingfundTotal = isNaN(people.reduce((accumulator, item) => item.type === 'Building Fund' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : people.reduce((accumulator, item) => item.type === 'Building Fund' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n  let arrOfTotals = [{\n    \"name\": \"Total\",\n    \"value\": Total\n  }, {\n    \"name\": \"Tithe Total\",\n    \"value\": titheTotal\n  }, {\n    \"name\": \"Offering Total\",\n    \"value\": offeringTotal\n  }, {\n    \"name\": \"Special Offering Total\",\n    \"value\": specialofferingTotal\n  }, {\n    \"name\": \"Missionary Total\",\n    \"value\": missionaryTotal\n  }, {\n    \"name\": \"Church Offering\",\n    \"value\": churchOffering\n  }, {\n    \"name\": \"Grand Total\",\n    \"value\": grandTotal\n  }];\n\n  const submit = () => {\n    if (name[0] && dateofofferings && amount !== 0 && churchOffering >= 0) {\n      fetch(\"http://\".concat(url, \"/jehovanissi/backend/apis/accounting.php\"), {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: name,\n          type: type,\n          amount: amount,\n          dateofofferings: dateofofferings,\n          churchOffering: churchOffering,\n          titheTotal: titheTotal,\n          grandTotal: grandTotal,\n          offeringTotal: offeringTotal,\n          missionaryTotal: missionaryTotal,\n          specialofferingTotal: specialofferingTotal,\n          buildingfundTotal: buildingfundTotal,\n          baptismofferingTotal: baptismofferingTotal,\n          birthdayofferingTotal: birthdayofferingTotal,\n          weddingofferingTotal: weddingofferingTotal,\n          childdedicationofferingTotal: childdedicationofferingTotal,\n          committedofferingTotal: committedofferingTotal,\n          twothousands: twothousands,\n          twohundreds: twohundreds,\n          fivehundreds: fivehundreds,\n          hundreds: hundreds,\n          fiftys: fiftys,\n          twentys: twentys,\n          tens: tens,\n          fives: fives,\n          twos: twos,\n          ones: ones\n        })\n      }).then(res => res.json()).then(result => {\n        alert(result);\n        window.location.reload();\n      }).catch(error => {\n        console.error(error);\n      });\n    } else {\n      alert(\"Input all required and check for mistakes\");\n    }\n  };\n\n  const searchapi = () => {\n    fetch(\"\".concat(url, \"/jehovanissi/backend/apis/searchname.php\"), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(result => {\n      setnames(result);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  useEffect(() => {\n    searchapi();\n  }, [1]);\n  const [val, setval] = useState({});\n\n  const handleClick = () => {\n    setval(results);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    justifyContent: \"space-evenly\",\n    direction: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        children: people.map(p => {\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  options: results,\n                  fullWidth: false,\n                  style: {\n                    width: 200\n                  },\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    margin: \"dense\",\n                    size: \"small\",\n                    onChange: event => {\n                      const str = event.target.value.split(' ');\n\n                      for (let i = 0; i < str.length; i++) {\n                        str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n                      }\n\n                      const Name = str.join(' ');\n                      setsearchterm(Name);\n                      setPeople(currentPeople => currentPeople.map(x => x.id === p.id ? { ...x,\n                        Name\n                      } : x));\n                    },\n                    value: p.Name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Select, {\n                  size: \"small\",\n                  style: {\n                    width: 200,\n                    marginTop: 7\n                  },\n                  onChange: event => {\n                    const type = event.target.value;\n                    setPeople(currentPeople => currentPeople.map(x => x.id === p.id ? { ...x,\n                      type\n                    } : x));\n                  },\n                  children: arrOfferingTypes.map((val, key) => {\n                    return /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: val.value,\n                      children: val.name\n                    }, key, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 275,\n                      columnNumber: 27\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  margin: \"dense\",\n                  size: \"small\",\n                  style: {\n                    width: 200\n                  },\n                  onChange: event => {\n                    const Am = event.target.value;\n                    let patt = /[^0-9]/g;\n                    const Amount = parseFloat(Am.replace(patt, ''));\n                    setPeople(currentPeople => currentPeople.map(x => x.id === p.id ? { ...x,\n                      Amount\n                    } : x));\n                  },\n                  value: p.Amount,\n                  type: \"number\",\n                  placeholder: \"Enter Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  style: {\n                    justifySelf: \"center\",\n                    alignSelf: \"center\"\n                  },\n                  onClick: () => {\n                    setPeople(currentPeople => currentPeople.filter(x => x.id !== p.id));\n                    setCount(count - 1);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(DeleteOutlineIcon, {\n                    style: {\n                      marginTop: -25,\n                      justifySelf: \"center\",\n                      alignSelf: \"center\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this)\n          }, p.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: () => {\n          setPeople(currentPeople => [...currentPeople, {\n            id: count,\n            Name: '',\n            type: '',\n            Amount: ''\n          }]);\n          setCount(count + 1);\n        },\n        children: /*#__PURE__*/_jsxDEV(AddCircleOutlineIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        children: /*#__PURE__*/_jsxDEV(TableBody, {\n          children: arrOfTotals.map((val, key) => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: val.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: val.value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 19\n              }, this)]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: submit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        value: dateofofferings,\n        size: \"small\",\n        onChange: event => setdateofofferings(event.target.value),\n        type: \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setdateofofferings(today),\n        children: \"Click if date is todays date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        children: /*#__PURE__*/_jsxDEV(TableBody, {\n          children: offeringsAsObject.map((k, key) => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              direction: \"row\",\n              justifyItems: \"center\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  margin: 3,\n                  children: [k.price, \" x \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  style: {\n                    width: 100\n                  },\n                  margin: \"dense\",\n                  size: \"small\",\n                  onChange: e => {\n                    setOfferings(cp => cp.map((l, lkey) => lkey === key ? { ...l,\n                      cnt: parseInt(e.target.value),\n                      tot: parseInt(e.target.value) * k.price\n                    } : l));\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 413,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  children: [\" = \", isNaN(k.tot) ? 0 : k.tot]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 19\n              }, this)]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Accounting, \"Owd0Bc1NAD7xW9MyNhEhBPb8U6Y=\");\n\n_c = Accounting;\nexport default Accounting;\n\nvar _c;\n\n$RefreshReg$(_c, \"Accounting\");","map":{"version":3,"sources":["/home/david/Desktop/mydev/coreui-free-react-admin-template/src/views/Components/Accounting.js"],"names":["Grid","TextField","Select","MenuItem","Button","IconButton","Typography","Table","TableBody","TableCell","TableRow","Autocomplete","React","useEffect","useState","AddCircleOutlineIcon","DeleteOutlineIcon","url","Accounting","people","setPeople","id","Name","type","Amount","count","setCount","names","setnames","searchterm","setsearchterm","arrOfferingTypes","results","filter","person","toLowerCase","includes","toLocaleLowerCase","ones","setones","twos","settwos","fives","setfives","tens","settens","twentys","settwentys","fiftys","setfiftys","hundreds","sethundreds","twohundreds","settwohundreds","fivehundreds","setfivehunndreds","twothousands","settwothousands","dateofofferings","setdateofofferings","offeringsAsObject","setOfferings","name","map","k","amount","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","grandTotal","reduce","accumulator","item","tot","isNaN","Total","parseFloat","churchOffering","titheTotal","offeringTotal","missionaryTotal","specialofferingTotal","baptismofferingTotal","birthdayofferingTotal","weddingofferingTotal","childdedicationofferingTotal","committedofferingTotal","buildingfundTotal","arrOfTotals","submit","fetch","method","headers","body","JSON","stringify","then","res","json","result","alert","window","location","reload","catch","error","console","searchapi","val","setval","handleClick","p","width","params","event","str","target","value","split","i","length","charAt","toUpperCase","substring","join","currentPeople","x","marginTop","key","Am","patt","replace","justifySelf","alignSelf","price","e","cp","l","lkey","cnt","parseInt"],"mappings":"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","sourcesContent":["import { Grid, TextField, Select, MenuItem, Button, IconButton, Typography, Table, TableBody, TableCell, TableRow, Autocomplete } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport { url } from \"../Constants\";\n\n\n\nconst Accounting = () => {\n  const [people, setPeople] = useState([{ id: 1, Name: '', type: '', Amount: '' }]);\n  const [count, setCount] = useState(2);\n  const [names, setnames] = useState([]);\n\n  const [searchterm, setsearchterm] = useState();\n\n  const arrOfferingTypes = [\n    { \"name\": \"Select\", \"value\": \"\" },\n    { \"name\": \"Tithe\", \"value\": \"Tithe\" },\n    { \"name\": \"Offering\", \"value\": \"Offering\" },\n    { \"name\": \"Missionary\", \"value\": \"Missionary\" },\n    { \"name\": \"Special Offering\", \"value\": \"Special Offering\" },\n    { \"name\": \"Baptism Offering\", \"value\": \"Baptism Offering\" },\n    { \"name\": \"Birthday Offering\", \"value\": \"Birthday Offering\" },\n    { \"name\": \"Wedding Offering\", \"value\": \"Wedding Offering\" },\n    { \"name\": \"Child Dedication Offering\", \"value\": \"Child Dedication Offering\" },\n    { \"name\": \"Committed Offering\", \"value\": \"Committed Offering\" },\n    { \"name\": \"Building Fund\", \"value\": \"Building Fund\" }\n  ]\n\n  const results = !searchterm ? names : names.filter(person => person.toLowerCase().includes(searchterm.toLocaleLowerCase()));\n\n  const [ones, setones] = useState(0);\n  const [twos, settwos] = useState(0);\n  const [fives, setfives] = useState(0);\n  const [tens, settens] = useState(0);\n  const [twentys, settwentys] = useState(0);\n  const [fiftys, setfiftys] = useState(0);\n  const [hundreds, sethundreds] = useState(0);\n  const [twohundreds, settwohundreds] = useState(0);\n  const [fivehundreds, setfivehunndreds] = useState(0);\n  const [twothousands, settwothousands] = useState(0);\n  const [dateofofferings, setdateofofferings] = useState();\n\n  const [offeringsAsObject, setOfferings] = useState(\n    [\n      { \"price\": 2000, \"cnt\": 0, \"tot\": 0 },\n      { \"price\": 500, \"cnt\": 0, \"tot\": 0 },\n      { \"price\": 200, \"cnt\": 0, \"tot\": 0 },\n      { \"price\": 100, \"cnt\": 0, \"tot\": 0 },\n      { \"price\": 50, \"cnt\": 0, \"tot\": 0 },\n      { \"price\": 20, \"cnt\": 0, \"tot\": 0 },\n      { \"price\": 10, \"cnt\": 0, \"tot\": 0 },\n      { \"price\": 5, \"cnt\": 0, \"tot\": 0 },\n      { \"price\": 2, \"cnt\": 0, \"tot\": 0 },\n      { \"price\": 1, \"cnt\": 0, \"tot\": 0 },\n    ]\n  );\n\n  let name = people.map((k) => k.Name);\n\n  let type = people.map((k) => k.type);\n\n  let amount = people.map((k) => k.Amount);\n\n\n\n\n\n  let today = new Date();\n\n  let dd = today.getDate();\n  dd = dd < 10 ? \"0\" + dd : dd;\n\n\n  let mm = (today.getMonth() + 1) > 12 ? today.getMonth() : today.getMonth() + 1;\n  mm = mm < 10 ? \"0\" + mm : mm;\n  if (dd === \"00\") {\n    dd = 31;\n    mm = mm - 1;\n  }\n  let yyyy = today.getFullYear();\n\n  today = yyyy + \"-\" + mm + \"-\" + dd;\n\n  let grandTotal = offeringsAsObject.reduce((accumulator, item) => accumulator + item.tot, 0);\n  grandTotal = isNaN(grandTotal)?0:grandTotal\n  // let grandTotal = (1 * ones) + (2 * twos) + (5 * fives) + (10 * tens) + (20 * twentys) + (50 * fiftys) + (100 * hundreds) + (200 * twohundreds) + (500 * fivehundreds) + (2000 * twothousands);\n\n\n  let Total = isNaN(people.reduce((accumulator, item) => isNaN(accumulator) ? 0 : accumulator + parseFloat(item.Amount), 0)) ? 0 : people.reduce((accumulator, item) => isNaN(accumulator) ? 0 : accumulator + parseFloat(item.Amount), 0);\n\n  const churchOffering = isNaN(grandTotal - Total)?0:grandTotal-Total;\n\n\n\n  let titheTotal = isNaN(people.reduce((accumulator, item) => item.type === 'Tithe' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : people.reduce((accumulator, item) => item.type === 'Tithe' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n  let offeringTotal = isNaN(people.reduce((accumulator, item) => item.type === 'Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : people.reduce((accumulator, item) => item.type === 'Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n  let missionaryTotal = isNaN(people.reduce((accumulator, item) => item.type === 'Missionary' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : people.reduce((accumulator, item) => item.type === 'Missionary' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n  let specialofferingTotal = isNaN(people.reduce((accumulator, item) => item.type === 'Special Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : people.reduce((accumulator, item) => item.type === 'Special Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n  let baptismofferingTotal = isNaN(people.reduce((accumulator, item) => item.type === 'Baptism Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : people.reduce((accumulator, item) => item.type === 'Baptism Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n  let birthdayofferingTotal = isNaN(people.reduce((accumulator, item) => item.type === 'Birthday Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : people.reduce((accumulator, item) => item.type === 'Birthday Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n  let weddingofferingTotal = isNaN(people.reduce((accumulator, item) => item.type === 'Wedding Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : people.reduce((accumulator, item) => item.type === 'Wedding Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n  let childdedicationofferingTotal = isNaN(people.reduce((accumulator, item) => item.type === 'Child Dedication Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : people.reduce((accumulator, item) => item.type === 'Child Dedication Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n  let committedofferingTotal = isNaN(people.reduce((accumulator, item) => item.type === 'Committed Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : people.reduce((accumulator, item) => item.type === 'Committed Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n  let buildingfundTotal = isNaN(people.reduce((accumulator, item) => item.type === 'Building Fund' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : people.reduce((accumulator, item) => item.type === 'Building Fund' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n  let arrOfTotals = [\n    { \"name\": \"Total\", \"value\": Total },\n    { \"name\": \"Tithe Total\", \"value\": titheTotal },\n    { \"name\": \"Offering Total\", \"value\": offeringTotal },\n    { \"name\": \"Special Offering Total\", \"value\": specialofferingTotal },\n    { \"name\": \"Missionary Total\", \"value\": missionaryTotal },\n    { \"name\": \"Church Offering\", \"value\": churchOffering },\n    { \"name\": \"Grand Total\", \"value\": grandTotal }\n  ]\n\n  const submit = () => {\n    if (name[0] && dateofofferings && (amount !== 0) && churchOffering >= 0) {\n      fetch(`http://${url}/jehovanissi/backend/apis/accounting.php`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n\n        },\n        body: JSON.stringify({\n          name: name,\n          type: type,\n          amount: amount,\n          dateofofferings: dateofofferings,\n          churchOffering: churchOffering,\n          titheTotal: titheTotal,\n          grandTotal: grandTotal,\n          offeringTotal: offeringTotal,\n          missionaryTotal: missionaryTotal,\n          specialofferingTotal: specialofferingTotal,\n          buildingfundTotal: buildingfundTotal,\n          baptismofferingTotal: baptismofferingTotal,\n          birthdayofferingTotal: birthdayofferingTotal,\n          weddingofferingTotal: weddingofferingTotal,\n          childdedicationofferingTotal: childdedicationofferingTotal,\n          committedofferingTotal: committedofferingTotal,\n          twothousands: twothousands,\n          twohundreds: twohundreds,\n          fivehundreds: fivehundreds,\n          hundreds: hundreds,\n          fiftys: fiftys,\n          twentys: twentys,\n          tens: tens,\n          fives: fives,\n          twos: twos,\n          ones: ones\n\n        })\n      })\n        .then(res => res.json())\n        .then((result) => {\n          alert(result);\n          window.location.reload();\n        }).catch((error) => {\n          console.error(error);\n        });\n\n    }\n\n\n    else {\n      alert(\"Input all required and check for mistakes\");\n    }\n  }\n  const searchapi = () => {\n    fetch(`${url}/jehovanissi/backend/apis/searchname.php`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n\n      },\n    })\n      .then(res => res.json())\n      .then((result) => {\n        setnames(result);\n      }).catch((error) => {\n        console.error(error);\n      });\n  }\n  useEffect(() => {\n    searchapi();\n  }, [1])\n\n  const [val, setval] = useState({});\n\n  const handleClick = () => {\n    setval(results);\n  }\n\n  return (\n    <Grid\n      container\n      justifyContent={\"space-evenly\"}\n      direction={\"row\"}\n    >\n      <Grid>\n        <Table\n          size=\"small\"\n        >\n          {people.map((p) => {\n            return (\n              <Grid key={p.id}>\n                <TableRow>\n                  <TableCell>\n\n                    <Autocomplete\n                      options={results}\n                      fullWidth={false}\n                      style={{ width: 200 }}\n                      renderInput={params =>\n                        <TextField\n                          {...params}\n                          margin=\"dense\"\n                          size=\"small\"\n                          onChange={(event) => {\n                            const str = event.target.value.split(' ');\n                            for (let i = 0; i < str.length; i++) {\n\n                              str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n                            }\n\n                            const Name = str.join(' ');\n                            setsearchterm(Name);\n                            setPeople((currentPeople) => currentPeople.map(x => x.id === p.id ? {\n                              ...x,\n                              Name\n                            } : x));\n                          }} value={p.Name}\n                        />\n                      }\n                    />\n                  </TableCell>\n\n                  {/* <datalist id=\"namelist\">\n                {results.map((k, key) => {\n                  return (\n                    <option key={key} >{k}</option>\n                  )\n                })}\n              </datalist> */}\n\n                  <TableCell>\n\n                    <Select\n                      size=\"small\"\n                      style={{width:200,marginTop:7}}\n                      onChange={(event) => {\n                        const type = event.target.value;\n                        setPeople((currentPeople) => currentPeople.map(x => x.id === p.id ? {\n                          ...x,\n                          type\n                        } : x));\n\n                      }}\n                    >\n\n                      {arrOfferingTypes.map((val, key) => {\n                        return (\n                          <MenuItem\n                            key={key}\n                            value={val.value}\n                          >\n                            {val.name}\n                          </MenuItem>\n                        )\n                      })}\n                      {/* <MenuItem>Select </MenuItem>\n                <MenuItem value=\"Tithe\">Tithe</MenuItem>\n                <MenuItem value=\"Offering\">Offering</MenuItem>\n                <MenuItem value=\"Missionary\">Missionary</MenuItem>\n                <MenuItem value=\"Special Offering\">Special Offering</MenuItem>\n                <MenuItem value=\"Baptism Offering\">Baptism Offering</MenuItem>\n                <MenuItem value=\"Birthday Offering\">Birthday Offering</MenuItem>\n                <MenuItem value=\"Wedding Offering\">Wedding Offering</MenuItem>\n                <MenuItem value=\"Child Dedication Offering\">Child Dedication Offering</MenuItem>\n                <MenuItem value=\"Committed Offering\">Committed Offering</MenuItem>\n              <MenuItem value=\"Building Fund\">Building Fund</MenuItem> */}\n                    </Select>\n                  </TableCell>\n                  <TableCell>\n\n                    <TextField\n                      margin=\"dense\"\n                      size=\"small\"\n                      style={{width:200}}\n                      onChange={(event) => {\n                        const Am = event.target.value;\n                        let patt = /[^0-9]/g;\n                        const Amount = parseFloat(Am.replace(patt, ''));\n                        setPeople((currentPeople) => currentPeople.map(x => x.id === p.id ? {\n                          ...x,\n                          Amount\n                        } : x));\n                      }}\n                      value={p.Amount}\n                      type=\"number\"\n                      placeholder=\"Enter Amount\" />\n                  </TableCell>\n                  <TableCell>\n\n                    <IconButton\n                      style={{ justifySelf: \"center\", alignSelf: \"center\" }}\n                      onClick={\n                        () => {\n                          setPeople(currentPeople => currentPeople.filter(x => x.id !== p.id)); setCount(count - 1)\n                        }\n                      }>\n                      <DeleteOutlineIcon\n                        style={{ marginTop: -25, justifySelf: \"center\", alignSelf: \"center\" }}\n                      />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              </Grid>\n            )\n\n          })}\n        </Table>\n        <IconButton\n          onClick={() => {\n            setPeople(currentPeople => [...currentPeople, {\n              id: count,\n              Name: '',\n              type: '',\n              Amount: '',\n            }]); setCount(count + 1)\n          }}\n        ><AddCircleOutlineIcon /></IconButton>\n        <Table>\n          <TableBody>\n            {arrOfTotals.map((val, key) => {\n              return (\n                <TableRow\n                  key={key}\n                >\n                  <TableCell>{val.name}</TableCell>\n                  <TableCell>{val.value}</TableCell>\n                </TableRow>\n              )\n            })}\n          </TableBody>\n        </Table>\n        {/* <TableBody>\n          <TableCell>\n            <Typography>Total:{Total}</Typography>\n          </TableCell>\n          <TableCell>\n          <Typography>Tithe Total:{titheTotal}</Typography>\n          </TableCell>\n          <TableCell>\n          <Typography>Offering Total:{offeringTotal}</Typography>\n          </TableCell>\n          <TableCell>\n          <Typography>Special Offering Total:{specialofferingTotal}</Typography>\n          </TableCell>\n\n          <Typography>Missionary Total:{missionaryTotal}</Typography>\n          <Typography>Building Fund Total:{buildingfundTotal}</Typography>\n        </TableBody> */}\n\n        <Button\n          variant=\"contained\"\n          onClick={submit}\n        >\n          Submit\n        </Button>\n      </Grid>\n      <Grid>\n        <TextField\n          value={dateofofferings}\n          size=\"small\"\n          onChange={(event) => setdateofofferings(event.target.value)}\n          type=\"date\" />\n        <Button\n          onClick={() => setdateofofferings(today)}\n        >\n          Click if date is todays date\n        </Button>\n        <Table\n          size=\"small\"\n        >\n          <TableBody>\n            {offeringsAsObject.map((k, key) => {\n              return (\n                <TableRow\n                  key={key}\n                  direction={\"row\"}\n                  justifyItems={\"center\"}\n                  alignItems={\"center\"}\n                >\n                  <TableCell>\n                    <Typography\n                      margin={3}\n                    >{k.price} x </Typography>\n                  </TableCell>\n                  <TableCell>\n                    <TextField\n                      style={{width:100}}\n                      margin=\"dense\"\n                      size=\"small\"\n                      onChange={(e) => {\n                        setOfferings(cp => cp.map((l, lkey) => lkey === key ?\n                          {\n                            ...l,\n                            cnt: parseInt(e.target.value),\n                            tot: parseInt(e.target.value) * k.price\n                          }\n                          : l))\n                      }}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Typography> = {isNaN(k.tot) ? 0 : k.tot}</Typography>\n                  </TableCell>\n                </TableRow>\n              )\n            })}\n          </TableBody>\n        </Table>\n\n        {/* <p>2000 x <input min=\"0\" onChange={(event) => settwothousands(event.target.valueAsNumber)} type=\"number\" /><span>={isNaN(2000 * twothousands) ? 0 : 2000 * twothousands}</span></p>\n        <p>500 x <input min=\"0\" onChange={(event) => setfivehunndreds(event.target.valueAsNumber)} type=\"number\" /><span>={isNaN(500 * fivehundreds) ? 0 : 500 * fivehundreds}</span></p>\n        <p>200 x <input min=\"0\" onChange={(event) => settwohundreds(event.target.valueAsNumber)} type=\"number\" /><span>={isNaN(200 * twohundreds) ? 0 : 200 * twohundreds}</span></p>\n        <p>100 x <input min=\"0\" onChange={(event) => sethundreds(event.target.valueAsNumber)} type=\"number\" /><span>={isNaN(100 * hundreds) ? 0 : 100 * hundreds}</span></p>\n        <p>50 x <input min=\"0\" onChange={(event) => setfiftys(event.target.valueAsNumber)} type=\"number\" /><span>={isNaN(50 * fiftys) ? 0 : 50 * fiftys}</span></p>\n        <p>20 x <input min=\"0\" onChange={(event) => settwentys(event.target.valueAsNumber)} type=\"number\" /><span>={isNaN(20 * twentys) ? 0 : 20 * twentys}</span></p>\n        <p>10 x <input min=\"0\" onChange={(event) => settens(event.target.valueAsNumber)} type=\"number\" /><span>={isNaN(10 * tens) ? 0 : 10 * tens}</span></p>\n        <p>5 x <input min=\"0\" onChange={(event) => setfives(event.target.valueAsNumber)} type=\"number\" /><span>={isNaN(5 * fives) ? 0 : 5 * fives}</span></p>\n        <p>2 x <input min=\"0\" onChange={(event) => settwos(event.target.valueAsNumber)} type=\"number\" /><span>={isNaN(2 * twos) ? 0 : 2 * twos}</span></p>\n        <p>1 x <input min=\"0\" onChange={(event) => setones(event.target.valueAsNumber)} type=\"number\" /><span>={isNaN(1 * ones) ? 0 : 1 * ones}</span></p> */}\n      </Grid>\n\n    </Grid>\n\n  )\n}\nexport default Accounting;"]},"metadata":{},"sourceType":"module"}