{"ast":null,"code":"var _jsxFileName = \"/home/david/Desktop/mydev/coreui-free-react-admin-template/src/views/Components/Sub Components/newstudententry.js\",\n    _s = $RefreshSig$();\n\nimport { TextField } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { url } from \"../../Constants\";\nimport { AlertMessage } from \"../Support/AlertMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Newstudententry = () => {\n  _s();\n\n  const [newname, setnewname] = useState('');\n  const [names, setnames] = useState([]);\n  const [searchterm, setsearchterm] = useState();\n  const results = !searchterm ? names : names.filter(person => person.toLowerCase().includes(searchterm.toLocaleLowerCase()));\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: '',\n    variant: 'filled',\n    severity: 'error'\n  });\n\n  const submit = () => {\n    if (newname) {\n      fetch(\"\".concat(url, \"//insertstudentname.php\"), {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          newname: newname\n        })\n      }).then(res => res.json()).then(result => {\n        setNotify({ ...notify,\n          isOpen: true,\n          message: result\n        });\n        window.location.reload();\n      }).catch(error => {\n        console.error(error);\n      });\n    } else {\n      setNotify({ ...notify,\n        isOpen: true,\n        message: 'Input All Requried'\n      });\n    }\n  };\n\n  const searchapi = () => {\n    fetch(\"\".concat(url, \"//searchname.php\"), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(result => {\n      setnames(result);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"newentry\",\n    children: [/*#__PURE__*/_jsxDEV(AlertMessage, {\n      notify: notify,\n      setNotify: setNotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      className: \"newentry-in\",\n      required: true,\n      placeholder: \"New Student\",\n      value: newname,\n      onChange: event => {\n        searchapi();\n        const str1 = event.target.value.split(' ');\n\n        for (let j = 0; j < str1.length; j++) {\n          str1[j] = str1[j].charAt(0).toUpperCase() + str1[j].substring(1);\n        }\n\n        const newstr = str1.join(' ');\n        setsearchterm(newstr);\n        setnewname(newstr);\n      },\n      list: \"namelist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n      id: \"namelist\",\n      children: results.map((k, key) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          children: k\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: () => {\n        submit();\n      },\n      children: \"+Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Newstudententry, \"0HSCSiHI3AVGI9vMHnl6LNfEnTQ=\");\n\n_c = Newstudententry;\nexport default Newstudententry;\n\nvar _c;\n\n$RefreshReg$(_c, \"Newstudententry\");","map":{"version":3,"sources":["/home/david/Desktop/mydev/coreui-free-react-admin-template/src/views/Components/Sub Components/newstudententry.js"],"names":["TextField","React","useState","url","AlertMessage","Newstudententry","newname","setnewname","names","setnames","searchterm","setsearchterm","results","filter","person","toLowerCase","includes","toLocaleLowerCase","notify","setNotify","isOpen","message","variant","severity","submit","fetch","method","headers","body","JSON","stringify","then","res","json","result","window","location","reload","catch","error","console","searchapi","event","str1","target","value","split","j","length","charAt","toUpperCase","substring","newstr","join","map","k","key"],"mappings":"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","sourcesContent":["import { TextField } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { url } from \"../../Constants\";\nimport { AlertMessage } from \"../Support/AlertMessage\";\n\nconst Newstudententry = () => {\n  const [newname, setnewname] = useState('');\n  const [names, setnames] = useState([]);\n  const [searchterm, setsearchterm] = useState();\n  const results = !searchterm ? names : names.filter(person => person.toLowerCase().includes(searchterm.toLocaleLowerCase()));\n  const [notify, setNotify] = useState({ isOpen: false, message: '', variant: 'filled', severity: 'error' });\n\n\n  const submit = () => {\n    if (newname) {\n      fetch(`${url}//insertstudentname.php`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n\n        },\n        body: JSON.stringify({\n          newname: newname\n\n        })\n      })\n        .then(res => res.json())\n        .then((result) => {\n          setNotify({\n            ...notify,\n            isOpen:true,\n            message:result\n          })\n          window.location.reload();\n        }).catch((error) => {\n          console.error(error);\n        });\n\n\n\n    }\n    else {\n     setNotify({\n       ...notify,\n       isOpen:true,\n       message:'Input All Requried'\n     })\n    }\n  }\n  const searchapi = () => {\n    fetch(`${url}//searchname.php`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n\n      },\n    })\n      .then(res => res.json())\n      .then((result) => {\n        setnames(result);\n      }).catch((error) => {\n        console.error(error);\n      });\n  }\n\n  return (\n    <div className=\"newentry\">\n      <AlertMessage\n        notify={notify}\n        setNotify={setNotify}\n      />\n      <TextField className=\"newentry-in\"\n        required\n        placeholder=\"New Student\"\n        value={newname}\n        onChange={(event) => {\n          searchapi();\n          const str1 = event.target.value.split(' ');\n          for (let j = 0; j < str1.length; j++) {\n\n            str1[j] = str1[j].charAt(0).toUpperCase() + str1[j].substring(1);\n          }\n          const newstr = str1.join(' ');\n          setsearchterm(newstr);\n          setnewname(newstr);\n\n        }}\n        list=\"namelist\"\n      ></TextField>\n      <datalist id=\"namelist\">\n        {results.map((k, key) => {\n          return (\n            <option key={key} >{k}</option>\n          )\n        })}\n      </datalist>\n\n\n      <button className=\"btn\" onClick={() => { submit() }}>+Add</button>\n    </div>\n  )\n}\n\nexport default Newstudententry;"]},"metadata":{},"sourceType":"module"}