{"ast":null,"code":"var _jsxFileName = \"/home/david/Desktop/mydev/Church-Management/src/views/Components/DataEntryForm.js\";\nimport { CButton, CCol, CForm, CFormFeedback, CFormInput, CFormLabel, CFormTextarea } from '@coreui/react';\nimport { FormControlLabel, Radio, RadioGroup } from '@mui/material';\nimport { AlertMessage } from './Support/AlertMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataEntryForms = props => {\n  const data = props.data;\n  const familyheads = props.familyheads;\n  return /*#__PURE__*/_jsxDEV(CForm, {\n    direction: 'column',\n    alignItems: 'center',\n    justifyItems: 'stretch',\n    container: true,\n    item: true,\n    validated: props.validated,\n    children: [/*#__PURE__*/_jsxDEV(AlertMessage, {\n      closeFunc: window.location.reload,\n      notify: props.notify,\n      setNotify: props.setNotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CCol, {\n      md: 4,\n      children: [/*#__PURE__*/_jsxDEV(CFormLabel, {\n        children: \"Family ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CFormInput, {\n        style: {\n          width: 300,\n          marginRight: 15\n        },\n        name: \"familyid\",\n        value: data.FamilyID,\n        margin: \"dense\",\n        variant: \"outlined\",\n        onChange: event => {\n          props.setData({ ...data,\n            FamilyID: event.target.value.toUpperCase()\n          });\n        },\n        placeholder: \"Family ID\",\n        label: \"Family ID\",\n        required: true,\n        invalid: data.FamilyID ? false : true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CFormFeedback, {\n        invalid: true,\n        children: \"Field is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CCol, {\n      md: 4,\n      children: [/*#__PURE__*/_jsxDEV(CFormLabel, {\n        children: \"Self ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CFormInput, {\n        name: \"selfid\",\n        style: {\n          width: 300,\n          marginRight: 15\n        },\n        value: data.SelfID,\n        margin: \"dense\",\n        variant: \"outlined\",\n        onFocus: () => props.setData({ ...data,\n          SelfID: data.FamilyID.slice(3)\n        }),\n        placeholder: \"Self ID\",\n        label: \"Self ID\",\n        required: true,\n        readOnly: true,\n        invalid: data.SelfID ? false : true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CFormFeedback, {\n        invalid: true,\n        children: \"Field is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CCol, {\n      children: [/*#__PURE__*/_jsxDEV(CFormLabel, {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CFormInput, {\n        name: \"name\",\n        value: data.Name,\n        style: {\n          width: 300,\n          marginRight: 15\n        },\n        margin: \"dense\",\n        variant: \"outlined\",\n        onChange: event => {\n          const str = event.target.value.split(' ');\n\n          for (let i = 0; i < str.length; i++) {\n            str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n          }\n\n          const patt = /[^a-zA-Z ]/g;\n          const Name1 = str.join(' ').replace(patt, '');\n          props.setData({ ...data,\n            Name: Name1\n          });\n        },\n        placeholder: \"Enter Name\",\n        label: \"Enter Name\" // invalid={data.name ? false : true}\n        ,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CFormFeedback, {\n        invalid: true,\n        children: \"Please fill this field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CCol, {\n      md: 4,\n      children: [/*#__PURE__*/_jsxDEV(CFormLabel, {\n        children: \"Date Of Birth\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CFormInput, {\n        type: 'date',\n        style: {\n          width: 300,\n          marginRight: 15\n        },\n        value: data.DOB,\n        onChange: event => props.setData({ ...data,\n          DOB: event.target.value\n        }),\n        label: \"Enter DOB\",\n        required: true,\n        invalid: data.DOB ? false : true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CFormFeedback, {\n        invalid: true,\n        children: \"Field is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CCol, {\n      md: 4,\n      children: [/*#__PURE__*/_jsxDEV(CFormLabel, {\n        children: \"Gender\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        row: true,\n        value: data.Gender,\n        \"aria-label\": \"gender\",\n        name: \"row-radio-buttons-group\",\n        style: {\n          width: 300,\n          justifyContent: 'space-evenly'\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"male\",\n          name: \"gender\",\n          label: 'Male',\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 22\n          }, this),\n          onChange: event => props.setData({ ...data,\n            Gender: event.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"female\",\n          name: \"gender\",\n          label: 'Female',\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 22\n          }, this),\n          onChange: event => props.setData({ ...data,\n            Gender: event.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CCol, {\n      md: 4,\n      children: [/*#__PURE__*/_jsxDEV(CFormLabel, {\n        children: \"Martial status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        row: true,\n        \"aria-label\": \"martial-status\",\n        name: \"row-radio-buttons-group\",\n        value: data.Married,\n        style: {\n          width: 300,\n          justifyContent: 'space-evenly'\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: true,\n          label: 'Married',\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 22\n          }, this),\n          onChange: event => {\n            props.setData({ ...data,\n              Married: event.target.value == 'true' ? true : false\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: false,\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 22\n          }, this),\n          label: 'Unmarried',\n          onChange: event => {\n            props.setData({ ...data,\n              Married: event.target.value == 'true' ? true : false\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CCol, {\n      md: 4,\n      style: {\n        display: data.Married === true ? 'block' : 'none',\n        width: 300,\n        marginRight: 15\n      },\n      children: [/*#__PURE__*/_jsxDEV(CFormLabel, {\n        children: \"Wedding Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CFormInput, {\n        type: \"date\",\n        label: \"Wedding Date\",\n        margin: \"dense\",\n        variant: \"outlined\",\n        value: data.WeddingDate,\n        onChange: event => props.setData({ ...data,\n          WeddingDate: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CCol, {\n      children: [/*#__PURE__*/_jsxDEV(CFormLabel, {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CFormInput, {\n        name: \"emailid\",\n        placeholder: \"Enter Emailid\",\n        margin: \"dense\",\n        label: \"Email ID\",\n        style: {\n          width: 300,\n          marginRight: 15\n        },\n        variant: \"outlined\",\n        onChange: event => props.setData({ ...data,\n          EmailID: event.target.value\n        }),\n        value: data.EmailID,\n        invalid: !data.EmailID || data.EmailID.includes('@') && data.EmailID.includes('.com') ? false : true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CFormFeedback, {\n        invalid: true,\n        children: \"Please input valid email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CCol, {\n      children: [/*#__PURE__*/_jsxDEV(CFormLabel, {\n        children: \"Mobile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CFormInput, {\n        name: \"mobile\",\n        style: {\n          width: 300,\n          marginRight: 15\n        },\n        label: \"Mobile\",\n        placeholder: \"Enter mobile number\",\n        margin: \"dense\",\n        variant: \"outlined\",\n        value: data.Mobile,\n        onChange: event => {\n          let patt = /[^0-9]/g;\n          const ph = event.target.value.replace(patt, '');\n          props.setData({ ...data,\n            Mobile: ph.slice(0, 10)\n          });\n        },\n        required: true,\n        invalid: data.Mobile.length === 10 ? false : true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CFormFeedback, {\n        invalid: true,\n        children: \"Enter valid number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CCol, {\n      children: [/*#__PURE__*/_jsxDEV(CFormLabel, {\n        children: \"Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CFormTextarea, {\n        name: \"address\",\n        label: \"Address\",\n        placeholder: \"Enter address\",\n        style: {\n          width: 300,\n          marginRight: 15\n        },\n        margin: \"dense\",\n        variant: \"outlined\",\n        value: data.Address,\n        onChange: event => {\n          const str = event.target.value.split(',');\n\n          for (let i = 0; i < str.length; i++) {\n            str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n          }\n\n          const address = str.join(',');\n          props.setData({ ...data,\n            Address: address\n          });\n        },\n        required: true,\n        invalid: data.Address ? false : true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CFormFeedback, {\n        invalid: true,\n        children: \"Field is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CCol, {\n      md: 4,\n      children: [/*#__PURE__*/_jsxDEV(CFormLabel, {\n        children: \"Family head\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CFormInput, {\n        name: \"familyhead\",\n        value: data.FamilyHead,\n        margin: \"dense\",\n        placeholder: \"Enter family head\",\n        variant: \"outlined\",\n        label: \"Family Head\",\n        onChange: event => {\n          const str = event.target.value.split(' ');\n\n          for (let i = 0; i < str.length; i++) {\n            str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n          }\n\n          const familyheadname = str.join(' ');\n          props.setData({ ...data,\n            FamilyHead: familyheadname\n          });\n        },\n        required: true,\n        invalid: data.FamilyHead ? false : true,\n        list: \"listforfamilyheads\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n        id: \"listforfamilyheads\",\n        children: familyheads.map((f, key) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            children: f\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CFormFeedback, {\n        invalid: true,\n        children: \"Field is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CCol, {\n      md: 4,\n      children: [/*#__PURE__*/_jsxDEV(CFormLabel, {\n        children: \"Baptism\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        row: true,\n        \"aria-label\": \"Baptizm\",\n        value: data.Baptized == \"true\" || data.Baptized == 1 ? true : false,\n        name: \"row-radio-buttons-group\",\n        style: {\n          width: 300,\n          justifyContent: 'space-evenly'\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 22\n          }, this),\n          value: true,\n          label: 'Baptized',\n          onChange: event => props.setData({ ...data,\n            Baptized: event.target.value == 'true' ? true : false\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: false,\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 22\n          }, this),\n          label: 'Not Baptized',\n          onChange: event => props.setData({ ...data,\n            Baptized: event.target.value == 'true' ? true : false\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CCol, {\n      md: 4,\n      children: [/*#__PURE__*/_jsxDEV(CFormLabel, {\n        children: \"Mobile type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        row: true,\n        value: data.Android,\n        \"aria-label\": \"mobile-type\",\n        name: \"row-radio-buttons-group\",\n        style: {\n          width: 300,\n          justifyContent: 'space-evenly'\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          label: 'Android',\n          value: true,\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 22\n          }, this),\n          onChange: event => props.setData({ ...data,\n            Android: event.target.value == 'true' ? true : false\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          label: 'Normal',\n          value: false,\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 22\n          }, this),\n          onChange: event => props.setData({ ...data,\n            Android: event.target.value == 'true' ? true : false\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CButton, {\n      onClick: props.handleSubmit,\n      children: \"Add to records\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n_c = DataEntryForms;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataEntryForms\");","map":{"version":3,"sources":["/home/david/Desktop/mydev/Church-Management/src/views/Components/DataEntryForm.js"],"names":["CButton","CCol","CForm","CFormFeedback","CFormInput","CFormLabel","CFormTextarea","FormControlLabel","Radio","RadioGroup","AlertMessage","DataEntryForms","props","data","familyheads","validated","window","location","reload","notify","setNotify","width","marginRight","FamilyID","event","setData","target","value","toUpperCase","SelfID","slice","Name","str","split","i","length","charAt","substring","patt","Name1","join","replace","DOB","Gender","justifyContent","Married","display","WeddingDate","EmailID","includes","Mobile","ph","Address","address","FamilyHead","familyheadname","map","f","key","Baptized","Android","handleSubmit"],"mappings":"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","sourcesContent":["import { CButton, CCol, CForm, CFormFeedback, CFormInput, CFormLabel, CFormTextarea } from '@coreui/react'\nimport { FormControlLabel, Radio, RadioGroup } from '@mui/material'\nimport { AlertMessage } from './Support/AlertMessage'\n\n\n\nexport const DataEntryForms = (props)=>{\n    const data = props.data;\n    const familyheads = props.familyheads;\n    return(\n        <CForm direction={'column'} alignItems={'center'} justifyItems={'stretch'} container item validated={props.validated} >\n      <AlertMessage\n      closeFunc={window.location.reload}\n        notify={props.notify}\n        setNotify={props.setNotify}\n      />\n      <CCol md={4}>\n        <CFormLabel>\n          Family ID\n        </CFormLabel>\n        <CFormInput\n          style={{ width: 300, marginRight: 15 }}\n          name=\"familyid\"\n          value={data.FamilyID}\n          margin=\"dense\"\n          variant=\"outlined\"\n          onChange={(event) => {\n            props.setData({ ...data, FamilyID: event.target.value.toUpperCase() })\n          }}\n          placeholder=\"Family ID\"\n          label=\"Family ID\"\n          required\n          invalid={data.FamilyID ? false : true}\n        />\n        <CFormFeedback\n          invalid\n        >Field is required</CFormFeedback>\n      </CCol>\n      <CCol md={4} >\n        <CFormLabel>\n          Self ID\n        </CFormLabel>\n        <CFormInput\n          name=\"selfid\"\n          style={{ width: 300, marginRight: 15 }}\n          value={data.SelfID}\n          margin=\"dense\"\n          variant=\"outlined\"\n          onFocus={() => props.setData({ ...data, SelfID: data.FamilyID.slice(3) })}\n          placeholder=\"Self ID\"\n          label=\"Self ID\"\n          required\n          readOnly\n          invalid={data.SelfID ? false : true}\n        />\n        <CFormFeedback\n          invalid\n        >\n          Field is required\n        </CFormFeedback>\n      </CCol>\n\n      <CCol>\n        <CFormLabel>\n          Name\n        </CFormLabel>\n        <CFormInput\n          name=\"name\"\n          value={data.Name}\n          style={{ width: 300, marginRight: 15 }}\n          margin=\"dense\"\n          variant=\"outlined\"\n          onChange={(event) => {\n            const str = event.target.value.split(' ')\n            for (let i = 0; i < str.length; i++) {\n              str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1)\n            }\n            const patt = /[^a-zA-Z ]/g;\n            const Name1 = str.join(' ').replace(patt, '');\n            props.setData({ ...data, Name: Name1 })\n          }}\n          placeholder=\"Enter Name\"\n          label=\"Enter Name\"\n          // invalid={data.name ? false : true}\n          required\n        />\n        <CFormFeedback\n          invalid\n        >\n          Please fill this field\n        </CFormFeedback>\n      </CCol>\n      <CCol md={4} >\n        <CFormLabel>\n          Date Of Birth\n        </CFormLabel>\n        <CFormInput\n          type={'date'}\n          style={{ width: 300, marginRight: 15 }}\n          value={data.DOB}\n          onChange={(event) => props.setData({ ...data, DOB: event.target.value })}\n          label=\"Enter DOB\"\n          required\n          invalid={data.DOB ? false : true}\n        />\n        <CFormFeedback\n          invalid\n        >\n          Field is required\n        </CFormFeedback>\n      </CCol>\n      <CCol md={4} >\n        <CFormLabel>\n          Gender\n        </CFormLabel>\n        <RadioGroup\n          row\n          value={data.Gender}\n          aria-label=\"gender\"\n          name=\"row-radio-buttons-group\"\n          style={{\n            width: 300,\n            justifyContent: 'space-evenly',\n          }}\n        >\n          <FormControlLabel\n            value=\"male\"\n            name=\"gender\"\n            label={'Male'}\n            control={<Radio />}\n            onChange={(event) => props.setData({ ...data, Gender: event.target.value })}\n          />\n          <FormControlLabel\n            value=\"female\"\n            name=\"gender\"\n            label={'Female'}\n            control={<Radio />}\n            onChange={(event) => props.setData({ ...data, Gender: event.target.value })}\n          />\n        </RadioGroup>\n      </CCol>\n      <CCol md={4} >\n        <CFormLabel>\n          Martial status\n        </CFormLabel>\n        <RadioGroup\n          row\n          aria-label=\"martial-status\"\n          name=\"row-radio-buttons-group\"\n          value={data.Married}\n          style={{\n            width: 300,\n            justifyContent: 'space-evenly',\n          }}\n        >\n          <FormControlLabel\n            value={true}\n            label={'Married'}\n            control={<Radio />}\n            onChange={(event) => {\n              props.setData({ ...data, Married: event.target.value == 'true' ? true : false })\n            }}\n          />\n          <FormControlLabel\n            value={false}\n            control={<Radio />}\n            label={'Unmarried'}\n            onChange={(event) => {\n              props.setData({ ...data, Married: event.target.value == 'true' ? true : false })\n            }}\n          />\n        </RadioGroup>\n      </CCol>\n      <CCol md={4}\n        style={{\n          display: data.Married === true ? 'block' : 'none',\n          width: 300,\n          marginRight: 15,\n        }}\n      >\n        <CFormLabel>\n          Wedding Date\n        </CFormLabel>\n        <CFormInput\n          type=\"date\"\n          label=\"Wedding Date\"\n          margin=\"dense\"\n          variant=\"outlined\"\n          value={data.WeddingDate}\n          onChange={(event) => props.setData({ ...data, WeddingDate:event.target.value })}\n        />\n      </CCol>\n\n      <CCol>\n        <CFormLabel>\n          Email\n        </CFormLabel>\n        <CFormInput\n          name=\"emailid\"\n          placeholder='Enter Emailid'\n          margin=\"dense\"\n          label=\"Email ID\"\n          style={{ width: 300, marginRight: 15 }}\n          variant=\"outlined\"\n          onChange={(event) => props.setData({ ...data, EmailID: event.target.value })}\n          value={data.EmailID}\n          invalid={(!data.EmailID || (data.EmailID.includes('@') && data.EmailID.includes('.com'))) ? false : true}\n        />\n        <CFormFeedback\n          invalid\n        >\n          Please input valid email address\n        </CFormFeedback>\n      </CCol>\n      <CCol>\n        <CFormLabel>\n          Mobile\n        </CFormLabel>\n        <CFormInput\n          name=\"mobile\"\n          style={{ width: 300, marginRight: 15 }}\n          label=\"Mobile\"\n          placeholder='Enter mobile number'\n          margin=\"dense\"\n          variant=\"outlined\"\n          value={data.Mobile}\n          onChange={(event) => {\n            let patt = /[^0-9]/g\n            const ph = event.target.value.replace(patt, '')\n            props.setData({ ...data, Mobile: ph.slice(0, 10) })\n          }}\n          required\n          invalid={(data.Mobile.length === 10) ? false : true}\n        />\n        <CFormFeedback invalid>\n          Enter valid number\n        </CFormFeedback>\n      </CCol>\n\n\n\n      <CCol>\n        <CFormLabel>\n          Address\n        </CFormLabel>\n        <CFormTextarea\n          name=\"address\"\n          label=\"Address\"\n          placeholder='Enter address'\n          style={{ width: 300, marginRight: 15 }}\n          margin=\"dense\"\n          variant=\"outlined\"\n          value={data.Address}\n          onChange={(event) => {\n            const str = event.target.value.split(',')\n            for (let i = 0; i < str.length; i++) {\n              str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1)\n            }\n            const address = str.join(',')\n            props.setData({ ...data, Address: address })\n          }}\n          required\n          invalid={data.Address ? false : true}\n        />\n        <CFormFeedback\n          invalid\n        >\n          Field is required\n        </CFormFeedback>\n      </CCol>\n      <CCol md={4}>\n        <CFormLabel>\n          Family head\n        </CFormLabel>\n        <CFormInput\n          name=\"familyhead\"\n          value={data.FamilyHead}\n          margin=\"dense\"\n          placeholder='Enter family head'\n          variant=\"outlined\"\n          label=\"Family Head\"\n          onChange={(event) => {\n            const str = event.target.value.split(' ')\n            for (let i = 0; i < str.length; i++) {\n              str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1)\n            }\n            const familyheadname = str.join(' ')\n            props.setData({ ...data, FamilyHead: familyheadname })\n          }}\n          required\n          invalid={data.FamilyHead ? false : true}\n          list='listforfamilyheads'\n        />\n        <datalist id='listforfamilyheads'>\n          {familyheads.map((f, key) => {\n            return (\n              <option key={key} >{f}</option>\n            )\n          })}\n        </datalist>\n        <CFormFeedback invalid>\n          Field is required\n        </CFormFeedback>\n      </CCol>\n      <CCol md={4}>\n        <CFormLabel>\n          Baptism\n        </CFormLabel>\n        <RadioGroup\n          row\n          aria-label=\"Baptizm\"\n          value={data.Baptized==\"true\"||data.Baptized==1?true:false}\n          name=\"row-radio-buttons-group\"\n          style={{\n            width: 300,\n            justifyContent: 'space-evenly',\n          }}\n        >\n          <FormControlLabel\n            control={<Radio />}\n            value={true}\n            label={'Baptized'}\n            onChange={(event) =>\n              props.setData({ ...data, Baptized: event.target.value == 'true' ? true : false })\n            }\n          />\n          <FormControlLabel\n            value={false}\n            control={<Radio />}\n            label={'Not Baptized'}\n            onChange={(event) =>\n              props.setData({ ...data, Baptized: event.target.value == 'true' ? true : false })\n            }\n          />\n        </RadioGroup>\n      </CCol>\n      <CCol md={4}>\n        <CFormLabel>\n          Mobile type\n        </CFormLabel>\n        <RadioGroup\n          row\n          value={data.Android}\n          aria-label=\"mobile-type\"\n          name=\"row-radio-buttons-group\"\n          style={{\n            width: 300,\n            justifyContent: 'space-evenly',\n          }}\n        >\n          <FormControlLabel\n            label={'Android'}\n            value={true}\n            control={<Radio />}\n            onChange={(event) =>\n              props.setData({ ...data, Android: event.target.value == 'true' ? true : false })\n            }\n          />\n          <FormControlLabel\n            label={'Normal'}\n            value={false}\n            control={<Radio />}\n            onChange={(event) =>\n              props.setData({ ...data, Android: event.target.value == 'true' ? true : false })\n            }\n          />\n        </RadioGroup>\n      </CCol>\n\n      <CButton onClick={props.handleSubmit} >\n        Add to records\n      </CButton>\n    </CForm>\n    )\n} "]},"metadata":{},"sourceType":"module"}