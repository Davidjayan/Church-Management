{"ast":null,"code":"var _jsxFileName = \"/home/david/Desktop/mydev/coreui-free-react-admin-template/src/views/Components/EditData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { url } from '../Constants';\nimport { Button, Grid, MenuItem, Select, TextField, Typography } from '@mui/material';\nimport { CAlert, CFormSelect, CFormText, CTable, CTableBody, CTableDataCell, CTableHead, CTableHeaderCell, CTableRow } from '@coreui/react';\nimport { AlertMessage } from './Support/AlertMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditData = () => {\n  _s();\n\n  const [data, setdata] = useState([]);\n  const [pageno, setPageno] = useState([]);\n  const items = 10;\n  const [familyheads, setFamilyheads] = useState([]);\n  const [addresses, setAddresses] = useState([]);\n  useEffect(() => {\n    fetch(\"\".concat(url, \"/data-fetch.php?page_no=\").concat(pageno, \"&items=\").concat(items), {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(result => {\n      setdata(result); // result.map((x, key) => {\n      //     setdata((currentPeople) => currentPeople.map((p, l) => l === key ? {\n      //         ...p,\n      //         InitialSID: p.SelfID,\n      //     } : p));\n      // })\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [pageno]);\n\n  const searchfamilyhead = () => {\n    fetch(\"\".concat(url, \"/searchfamilyhead.php\"), {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(result => {\n      let filteredresult = [...new Set(result)];\n      setFamilyheads(filteredresult);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  const searchaddress = () => {\n    fetch(\"\".concat(url, \"/searchaddress.php\"), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(result => {\n      let filteredresult = [...new Set(result)];\n      setAddresses(filteredresult);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  const [display2, setdisplay2] = useState(\"none\");\n  const [row, setrow] = useState(0);\n  const [focus, isFocused] = useState({\n    'familyid': data[row] !== undefined ? data[row]['FamilyID'] !== '' ? true : false : true,\n    'selfid': data[row] !== undefined ? data[row]['SelfID'] !== '' ? true : false : true,\n    'name': data[row] !== undefined ? data[row]['Name'] !== '' ? true : false : true,\n    'email': data[row] !== undefined ? data[row]['EmailID'] !== '' ? true : false : true,\n    'mobile': data[row] !== undefined ? data[row]['Mobile'] !== '' ? true : false : true,\n    'address': data[row] !== undefined ? data[row]['Address'] !== '' ? true : false : true,\n    'familyhead': data[row] !== undefined ? data[row]['FamilyHead'] !== '' ? true : false : true\n  });\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: '',\n    variant: 'filled',\n    severity: 'error'\n  });\n\n  const makechanges = () => {\n    fetch(\"\".concat(url, \"/data-edit.php\"), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        data: data[row]\n      })\n    }).then(res => res.json()).then(result => {\n      setNotify({ ...notify,\n        isOpen: true,\n        message: result\n      });\n      window.location.reload();\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const deleteRecord = () => {\n    fetch(\"\".concat(url, \"/data-delete.php\"), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        selfid: data[row]['SelfID']\n      })\n    }).then(res => res.json()).then(result => {\n      setNotify({ ...notify,\n        isOpen: true,\n        message: result\n      });\n      window.location.reload();\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const Typograph = props => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: [\" \", props.children, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this);\n  };\n\n  const [searchby, setsearchby] = useState(\"id\");\n  const [value, setvalue] = useState();\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    className: \"editform\",\n    children: [/*#__PURE__*/_jsxDEV(AlertMessage, {\n      notify: notify,\n      setNotify: setNotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      style: {\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typograph, {\n        children: \"Search by\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        width: 100,\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          name: \"searchby\",\n          defaultValue: \"name\",\n          onChange: event => setsearchby(event.target.value),\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"id\",\n            children: \"Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        onChange: event => {\n          const func = k => {\n            const str = k.split(' ');\n\n            for (let i = 0; i < str.length; i++) {\n              str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n            }\n\n            return str.join(' ');\n          };\n\n          let val = searchby === \"id\" ? event.target.value.toUpperCase() : func(event.target.value);\n          setvalue(searchby === \"id\" ? event.target.value.toUpperCase() : func(event.target.value));\n\n          if (searchby === \"id\") {\n            data.map((l, index) => {\n              if (l.FamilyID === val) {\n                setrow(index);\n                setdisplay2(\"block\");\n              }\n            });\n          } else if (searchby === \"name\") {\n            data.map((l, index) => {\n              if (l.Name === val) {\n                setrow(index);\n                setdisplay2(\"block\");\n              }\n            });\n          }\n        },\n        style: {\n          width: 250,\n          marginTop: 30,\n          marginBottom: 30\n        },\n        value: value,\n        placeholder: \"Enter \".concat(searchby),\n        list: searchby === \"id\" ? \"idsearch\" : \"namesearch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n        id: \"idsearch\",\n        children: data.map((k, key) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            children: k.FamilyID\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n        id: \"namesearch\",\n        children: data.map((k, key) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            children: k.Name\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CTable, {\n      children: [/*#__PURE__*/_jsxDEV(CTableHead, {\n        children: [/*#__PURE__*/_jsxDEV(CTableHeaderCell, {\n          children: \"SELF ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CTableHeaderCell, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CTableHeaderCell, {\n          children: \"Father or Husband Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CTableBody, {\n        children: data.map((k, index) => {\n          return /*#__PURE__*/_jsxDEV(CTableRow, {\n            children: [/*#__PURE__*/_jsxDEV(CTableDataCell, {\n              children: k.SelfID\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CTableDataCell, {\n              children: k.Name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CTableDataCell, {\n              children: k.FamilyHead\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CTableDataCell, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  setrow(index);\n                  setdisplay2(\"block\");\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditData, \"K3D5xu3nMM5PRMv45Md7icE4B9s=\");\n\n_c = EditData;\nexport default EditData;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditData\");","map":{"version":3,"sources":["/home/david/Desktop/mydev/coreui-free-react-admin-template/src/views/Components/EditData.js"],"names":["React","useEffect","useState","url","Button","Grid","MenuItem","Select","TextField","Typography","CAlert","CFormSelect","CFormText","CTable","CTableBody","CTableDataCell","CTableHead","CTableHeaderCell","CTableRow","AlertMessage","EditData","data","setdata","pageno","setPageno","items","familyheads","setFamilyheads","addresses","setAddresses","fetch","method","headers","then","res","json","result","catch","error","console","log","searchfamilyhead","filteredresult","Set","searchaddress","display2","setdisplay2","row","setrow","focus","isFocused","undefined","notify","setNotify","isOpen","message","variant","severity","makechanges","body","JSON","stringify","window","location","reload","deleteRecord","selfid","Typograph","props","children","searchby","setsearchby","value","setvalue","display","flexDirection","event","target","func","k","str","split","i","length","charAt","toUpperCase","substring","join","val","map","l","index","FamilyID","Name","width","marginTop","marginBottom","key","SelfID","FamilyHead"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { url } from '../Constants';\nimport { Button, Grid, MenuItem, Select, TextField, Typography } from '@mui/material';\nimport { CAlert, CFormSelect, CFormText, CTable, CTableBody, CTableDataCell, CTableHead, CTableHeaderCell, CTableRow } from '@coreui/react';\nimport { AlertMessage } from './Support/AlertMessage';\n\nconst EditData = () => {\n    const [data, setdata] = useState([]);\n    const [pageno,setPageno]=useState([]);\n    const items = 10;\n    const [familyheads, setFamilyheads] = useState([]);\n    const [addresses, setAddresses] = useState([]);\n\n\n\n    useEffect(() => {\n        fetch(`${url}/data-fetch.php?page_no=${pageno}&items=${items}`, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n\n        }).then((res) => res.json())\n            .then((result) => {\n                setdata(result);\n                // result.map((x, key) => {\n                //     setdata((currentPeople) => currentPeople.map((p, l) => l === key ? {\n                //         ...p,\n                //         InitialSID: p.SelfID,\n                //     } : p));\n                // })\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    }, [pageno]);\n\n\n    const searchfamilyhead = () => {\n        fetch(`${url}/searchfamilyhead.php`, {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n\n        })\n            .then(res => res.json())\n            .then((result) => {\n                let filteredresult = [...new Set(result)];\n                setFamilyheads(filteredresult);\n            }).catch((error) => {\n                console.error(error);\n            });\n    }\n    const searchaddress = () => {\n        fetch(`${url}/searchaddress.php`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n\n        })\n            .then(res => res.json())\n            .then((result) => {\n                let filteredresult = [...new Set(result)];\n                setAddresses(filteredresult);\n            }).catch((error) => {\n                console.error(error);\n            });\n    }\n\n    const [display2, setdisplay2] = useState(\"none\");\n    const [row, setrow] = useState(0);\n    const [focus, isFocused] = useState({ 'familyid': data[row] !== undefined ? data[row]['FamilyID'] !== '' ? true : false : true, 'selfid': data[row] !== undefined ? data[row]['SelfID'] !== '' ? true : false : true, 'name': data[row] !== undefined ? data[row]['Name'] !== '' ? true : false : true, 'email': data[row] !== undefined ? data[row]['EmailID'] !== '' ? true : false : true, 'mobile': data[row] !== undefined ? data[row]['Mobile'] !== '' ? true : false : true, 'address': data[row] !== undefined ? data[row]['Address'] !== '' ? true : false : true, 'familyhead': data[row] !== undefined ? data[row]['FamilyHead'] !== '' ? true : false : true })\n    const [notify, setNotify] = useState({ isOpen: false, message: '', variant: 'filled', severity: 'error' });\n\n    const makechanges = () => {\n        fetch(`${url}/data-edit.php`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                data: data[row]\n            })\n\n        }).then((res) => res.json())\n            .then((result) => {\n                setNotify({\n                    ...notify,\n                    isOpen:true,\n                    message:result\n                })\n                window.location.reload();\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    }\n    const deleteRecord = () => {\n\n\n        fetch(`${url}/data-delete.php`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                selfid: data[row]['SelfID']\n            })\n\n        }).then((res) => res.json())\n            .then((result) => {\n                setNotify({\n                    ...notify,\n                    isOpen:true,\n                    message:result\n                })\n                window.location.reload();\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n\n    }\n\n    const Typograph = (props) => {\n        return (\n            <p className='lead' > {props.children} </p>\n        )\n    }\n    const [searchby, setsearchby] = useState(\"id\");\n    const [value, setvalue] = useState();\n    return (\n        <Grid className=\"editform\" >\n            <AlertMessage\n                notify={notify}\n                setNotify={setNotify}\n            />\n            <Grid style={{ display: 'flex', flexDirection: 'column' }}>\n                <Typograph >\n                    Search by\n                </Typograph>\n                <Grid\n                    width={100}\n                >\n                    <Select\n                        name=\"searchby\"\n                        defaultValue={\"name\"}\n                        onChange={(event) => setsearchby(event.target.value)}\n                    >\n                        <MenuItem value=\"id\">Id</MenuItem>\n                        <MenuItem value=\"name\">Name</MenuItem>\n                    </Select>\n                </Grid>\n                <TextField\n                    onChange={(event) => {\n                        const func = (k) => {\n                            const str = k.split(' ');\n                            for (let i = 0; i < str.length; i++) {\n\n                                str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n                            }\n\n                            return str.join(' ');\n                        }\n                        let val = searchby === \"id\" ? event.target.value.toUpperCase() : func(event.target.value);\n                        setvalue(searchby === \"id\" ? event.target.value.toUpperCase() : func(event.target.value));\n\n                        if (searchby === \"id\") {\n                            data.map((l, index) => {\n                                if (l.FamilyID === val) {\n                                    setrow(index);\n                                    setdisplay2(\"block\");\n                                }\n                            })\n                        } else if (searchby === \"name\") {\n                            data.map((l, index) => {\n                                if (l.Name === val) {\n                                    setrow(index);\n                                    setdisplay2(\"block\");\n                                }\n                            })\n\n                        }\n                    }}\n                    style={{ width: 250, marginTop: 30, marginBottom: 30 }}\n                    value={value}\n                    placeholder={`Enter ${searchby}`}\n                    list={searchby === \"id\" ? \"idsearch\" : \"namesearch\"}\n                />\n\n                <datalist id=\"idsearch\" >\n                    {data.map((k, key) => {\n                        return (\n                            <option key={key}>{k.FamilyID}</option>\n                        )\n                    })}\n                </datalist>\n\n                <datalist id=\"namesearch\" >\n                    {data.map((k, key) => {\n                        return (\n                            <option key={key} >{k.Name}</option>\n                        )\n                    })}\n                </datalist>\n            </Grid>\n\n\n\n\n            <CTable>\n                <CTableHead>\n                    <CTableHeaderCell>SELF ID</CTableHeaderCell>\n                    <CTableHeaderCell>Name</CTableHeaderCell>\n                    <CTableHeaderCell>Father or Husband Name</CTableHeaderCell>\n\n                </CTableHead>\n                <CTableBody>\n                    {data.map((k, index) => {\n                        return (\n                            <CTableRow key={index}>\n                                <CTableDataCell>{k.SelfID}</CTableDataCell>\n                                <CTableDataCell>{k.Name}</CTableDataCell>\n                                <CTableDataCell>{k.FamilyHead}</CTableDataCell>\n                                <CTableDataCell><Button\n                                    onClick={() => {\n                                        setrow(index);\n                                        setdisplay2(\"block\");\n                                    }}\n                                >Edit</Button></CTableDataCell>\n\n                            </CTableRow>\n                        )\n                    })}\n                </CTableBody>\n            </CTable>\n\n\n\n\n        </Grid>\n    )\n}\nexport default EditData;"]},"metadata":{},"sourceType":"module"}