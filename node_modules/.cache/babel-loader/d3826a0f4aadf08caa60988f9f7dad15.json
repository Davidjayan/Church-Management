{"ast":null,"code":"var _jsxFileName = \"/home/david/Desktop/mydev/coreui-free-react-admin-template/src/views/Components/Dataentry.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { url } from '../Constants';\nimport { Grid, Button, FormControlLabel, RadioGroup, Radio, Autocomplete } from '@mui/material';\nimport { CButton, CForm, CFormFeedback, CFormInput, CFormSwitch } from '@coreui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dataentry = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [dob, setDob] = useState('');\n  const [familyheads, setFamilyheads] = useState([]);\n  const [validity, setvalidity] = useState(true);\n  const [data, setData] = useState({\n    name: '',\n    dob: new Date(),\n    gender: '',\n    weddingdate: new Date().toLocaleDateString(),\n    emailid: '',\n    mobile: '',\n    address: '',\n    familyhead: '',\n    familyid: '',\n    selfid: '',\n    android: false,\n    baptized: false,\n    married: false\n  });\n  const str = dob.split('-');\n  const today = new Date();\n  const mon = today.getMonth();\n  const year = today.getFullYear();\n  let age;\n  let k = year - 1;\n\n  if (mon >= str[1]) {\n    age = year - str[0];\n  } else {\n    age = k - str[0];\n  }\n\n  const [validated, setValidated] = useState(false);\n\n  const handleSubmit = event => {\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n  };\n\n  const validation = () => {\n    if ((data.familyid && data.familyhead && data.address && data.selfid && data.name && data.gender && !data.mobile.length < 10) !== '') {\n      setvalidity(true);\n      return true;\n    } else {\n      setvalidity(false);\n      return false;\n    }\n  };\n\n  const addrecords = () => {\n    if (validity) {\n      let Familyid = data.familyid;\n      let Selfid = data.selfid;\n      let Name = data.name;\n      let Dob = data.dob;\n      let Age = age;\n      let Gender = data.gender;\n      let Married = data.married;\n      let Weddingdate = data.weddingdate;\n      let Emailid = data.emailid;\n      let Mobile = data.mobile;\n      let Address = data.address;\n      let Familyhead = data.familyhead;\n      let Baptized = data.baptized;\n      let Android = data.android;\n      fetch(\"\".concat(url, \"/jehovanissi/api/member_details.php\"), {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: Name,\n          dob: Dob,\n          age: Age,\n          gender: Gender,\n          married: Married,\n          weddingdate: Weddingdate,\n          emailid: Emailid,\n          mobile: Mobile,\n          address: Address,\n          familyhead: Familyhead,\n          baptized: Baptized,\n          android: Android,\n          familyid: Familyid,\n          selfid: Selfid\n        })\n      }).then(res => res.json()).then(result => {\n        alert(result);\n        console.log(result);\n      }).catch(error => {\n        console.error(error);\n      });\n    } else {\n      alert('Input All required');\n    }\n  };\n\n  const searchfamilyhead = () => {\n    fetch(\"\".concat(url, \"/jehovanissi/api/searchfamilyhead.php\"), {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(result => {\n      let filteredresult = [...new Set(result)];\n      setFamilyheads(filteredresult);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  useEffect(() => {\n    searchfamilyhead();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CForm, {\n    direction: 'column',\n    alignItems: 'center',\n    justifyItems: 'stretch',\n    container: true,\n    item: true,\n    validated: validated,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(CFormInput, {\n        style: {\n          width: 300,\n          marginRight: 15\n        },\n        name: \"familyid\",\n        value: data.familyid,\n        margin: \"dense\",\n        variant: \"outlined\",\n        onChange: event => {\n          setData({ ...data,\n            familyid: event.target.value.toUpperCase()\n          });\n        },\n        placeholder: \"Family ID\",\n        label: \"Family ID\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CFormFeedback, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CFormInput, {\n        name: \"selfid\",\n        style: {\n          width: 300,\n          marginRight: 15\n        },\n        value: data.selfid,\n        margin: \"dense\",\n        variant: \"outlined\",\n        onFocus: () => setData({ ...data,\n          selfid: data.familyid.slice(3)\n        }),\n        placeholder: \"Self ID\",\n        label: \"Self ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(CFormInput, {\n        name: \"name\",\n        value: data.name,\n        style: {\n          width: 300,\n          marginRight: 15\n        },\n        margin: \"dense\",\n        variant: \"outlined\",\n        onChange: event => {\n          const str = event.target.value.split(' ');\n\n          for (let i = 0; i < str.length; i++) {\n            str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n          }\n\n          const Nameoff = str.join(' ');\n          setData({ ...data,\n            name: Nameoff\n          });\n        },\n        placeholder: \"Enter Name\",\n        label: \"Enter Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CFormInput, {\n        type: 'date',\n        style: {\n          width: 300,\n          marginRight: 15\n        },\n        value: data.dob,\n        onChange: event => setData({ ...data,\n          dob: event.target.value\n        }),\n        label: \"Enter DOB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n      row: true,\n      \"aria-label\": \"gender\",\n      name: \"row-radio-buttons-group\",\n      style: {\n        width: 300,\n        justifyContent: 'space-evenly'\n      },\n      children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n        value: \"male\",\n        name: \"gender\",\n        label: 'Male',\n        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 20\n        }, this),\n        onChange: event => setData({ ...data,\n          gender: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        value: \"female\",\n        name: \"gender\",\n        label: 'Female',\n        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 20\n        }, this),\n        onChange: event => setData({ ...data,\n          gender: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n      row: true,\n      \"aria-label\": \"martial-status\",\n      name: \"row-radio-buttons-group\",\n      style: {\n        width: 300,\n        justifyContent: 'space-evenly'\n      },\n      children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n        value: true,\n        label: 'Married',\n        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 20\n        }, this),\n        onChange: event => {\n          setData({ ...data,\n            married: event.target.value == 'true' ? true : false\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        value: false,\n        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 20\n        }, this),\n        label: 'Unmarried',\n        onChange: event => {\n          setData({ ...data,\n            married: event.target.value == 'true' ? true : false\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CFormInput, {\n      type: \"date\",\n      label: \"Wedding Date\",\n      style: {\n        display: data.married === true ? 'inline-block' : 'none',\n        width: 300,\n        marginRight: 15\n      },\n      margin: \"dense\",\n      variant: \"outlined\",\n      value: data.weddingdate,\n      onChange: event => setData({ ...data,\n        weddingdate: event.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(CFormInput, {\n        name: \"emailid\",\n        margin: \"dense\",\n        label: \"Email ID\",\n        style: {\n          width: 300,\n          marginRight: 15\n        },\n        variant: \"outlined\",\n        onChange: event => setData({ ...data,\n          emailid: event.target.value\n        }),\n        value: data.emailid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CFormInput, {\n        name: \"mobile\",\n        style: {\n          width: 300,\n          marginRight: 15\n        },\n        label: \"Mobile\",\n        margin: \"dense\",\n        variant: \"outlined\",\n        value: data.mobile,\n        onChange: event => {\n          let patt = /[^0-9]/g;\n          const ph = event.target.value.replace(patt, '');\n          setData({ ...data,\n            mobile: ph.slice(0, 10)\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(CFormInput, {\n        name: \"address\",\n        label: \"Address\",\n        style: {\n          width: 300,\n          marginRight: 15\n        },\n        margin: \"dense\",\n        variant: \"outlined\",\n        value: data.address,\n        onChange: event => {\n          const str = event.target.value.split(',');\n\n          for (let i = 0; i < str.length; i++) {\n            str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n          }\n\n          const address = str.join(',');\n          setData({ ...data,\n            address: address\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n        options: familyheads,\n        renderInput: params => /*#__PURE__*/_jsxDEV(CFormInput, { ...params,\n          name: \"familyhead\",\n          value: data.familyhead,\n          margin: \"dense\",\n          variant: \"outlined\",\n          label: \"Family Head\",\n          onChange: event => {\n            const str = event.target.value.split(' ');\n\n            for (let i = 0; i < str.length; i++) {\n              str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n            }\n\n            const familyheadname = str.join(' ');\n            setData({ ...data,\n              familyhead: familyheadname\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n      row: true,\n      \"aria-label\": \"Baptizm\",\n      name: \"row-radio-buttons-group\",\n      style: {\n        width: 300,\n        justifyContent: 'space-evenly'\n      },\n      children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 20\n        }, this),\n        value: true,\n        label: 'Baptized',\n        onChange: event => setData({ ...data,\n          baptized: event.target.value == 'true' ? true : false\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        value: false,\n        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 20\n        }, this),\n        label: 'Not Baptized',\n        onChange: event => setData({ ...data,\n          baptized: event.target.value == 'true' ? true : false\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n      row: true,\n      \"aria-label\": \"mobile-type\",\n      name: \"row-radio-buttons-group\",\n      style: {\n        width: 300,\n        justifyContent: 'space-evenly'\n      },\n      children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n        label: 'Android',\n        value: true,\n        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 20\n        }, this),\n        onChange: event => setData({ ...data,\n          android: event.target.value == 'true' ? true : false\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        label: 'Normal',\n        value: false,\n        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 20\n        }, this),\n        onChange: event => setData({ ...data,\n          android: event.target.value == 'true' ? true : false\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CButton, {\n      type: \"submit\",\n      children: \"Add to records\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this) //========================\n  // <Grid>\n  //     <Grid\n  //         direction=\"column\"\n  //         alignItems={\"stretch\"}\n  //         justifyItems={\"stretch\"}\n  //         container\n  //     >\n  //         <Grid\n  //             direction={\"column\"}\n  //             alignItems={\"center\"}\n  //             justifyItems={\"stretch\"}\n  //             container\n  //             item\n  //         >\n  //             <Grid>\n  //                 <CFormInput\n  //                     style={{ width: 300, marginRight: 15 }}\n  //                     name=\"familyid\"\n  //                     // value={data.familyid}\n  //                     margin=\"dense\"\n  //                     variant=\"outlined\"\n  //                     placeholder=\"Family ID\"\n  //                     label=\"Family ID\"\n  //                 />\n  //                 <CFormInput\n  //                     name=\"selfid\"\n  //                     style={{ width: 300, marginRight: 15 }}\n  //                     // value={data.selfid}\n  //                     margin=\"dense\"\n  //                     variant=\"outlined\"\n  //                     placeholder=\"Self ID\"\n  //                     label=\"Self ID\"\n  //                 />\n  //             </Grid>\n  //             <Grid>\n  //                 <CFormInput\n  //                     name=\"name\"\n  //                     // value={data.name}\n  //                     style={{ width: 300, marginRight: 15 }}\n  //                     margin=\"dense\"\n  //                     variant=\"outlined\"\n  //                     // onChange={(event) => {\n  //                     //     const str = event.target.value.split(' ');\n  //                     //     for (let i = 0; i < str.length; i++) {\n  //                     //         str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n  //                     //     }\n  //                     //     const Nameoff = str.join(' ');\n  //                     //     setData({ ...data, name: Nameoff })\n  //                     // }}\n  //                     placeholder=\"Enter Name\"\n  //                     label=\"Enter Name\"\n  //                 />\n  //                 {/* <DatePicker\n  //       style={{ width: 300, marginRight: 15 }}\n  //       // value={data.dob}\n  //       // onChange={(event) => setData({ ...data, dob: event.target.value })}\n  //       label=\"Enter DOB\"\n  //     /> */}\n  //             </Grid>\n  //             <RadioGroup\n  //                 row\n  //                 aria-label=\"gender\"\n  //                 name=\"row-radio-buttons-group\"\n  //                 style={{\n  //                     width: 300,\n  //                     justifyContent: \"space-evenly\"\n  //                 }}\n  //             >\n  //                 <FormControlLabel\n  //                     value=\"male\"\n  //                     name=\"gender\"\n  //                     label={\"Male\"}\n  //                     control={<Radio />}\n  //                 // onChange={(event) => setData({ ...data, gender: event.target.value })}\n  //                 />\n  //                 <FormControlLabel\n  //                     value=\"female\"\n  //                     name=\"gender\"\n  //                     label={\"Female\"}\n  //                     control={<Radio />}\n  //                 // onChange={(event) => setData({ ...data, gender: event.target.value })}\n  //                 />\n  //             </RadioGroup>\n  //             <RadioGroup\n  //                 row\n  //                 aria-label=\"martial-status\"\n  //                 name=\"row-radio-buttons-group\"\n  //                 style={{\n  //                     width: 300,\n  //                     justifyContent: \"space-evenly\"\n  //                 }}\n  //             >\n  //                 <FormControlLabel\n  //                     value={true}\n  //                     label={\"Married\"}\n  //                     control={<Radio />}\n  //                 // onChange={(event) => { setData({ ...data, married: event.target.value == \"true\" ? true : false }) }}\n  //                 />\n  //                 <FormControlLabel\n  //                     value={false}\n  //                     control={<Radio />}\n  //                     label={\"Unmarried\"}\n  //                 // onChange={(event) => { setData({ ...data, married: event.target.value == \"true\" ? true : false }) }}\n  //                 />\n  //             </RadioGroup>\n  //             <CFormInput\n  //                 type=\"date\"\n  //                 label=\"Wedding Date\"\n  //                 // style={{ display: data.married === true ? \"inline-block\" : \"none\", width: 300, marginRight: 15 }}\n  //                 margin=\"dense\"\n  //                 variant=\"outlined\"\n  //             // value={data.weddingdate}\n  //             // onChange={(event) => setData({ ...data, weddingdate: event.target.value })}\n  //             />\n  //             <Grid>\n  //                 <CFormInput\n  //                     name=\"emailid\"\n  //                     margin=\"dense\"\n  //                     label=\"Email ID\"\n  //                     style={{ width: 300, marginRight: 15 }}\n  //                     variant=\"outlined\"\n  //                 // onChange={(event) => setData({ ...data, emailid: event.target.value })}\n  //                 // value={data.emailid}\n  //                 />\n  //                 <CFormInput\n  //                     name=\"mobile\"\n  //                     style={{ width: 300, marginRight: 15 }}\n  //                     label=\"Mobile\"\n  //                     margin=\"dense\"\n  //                     variant=\"outlined\"\n  //                 // value={data.mobile}\n  //                 // onChange={(event) => {\n  //                 //   let patt = /[^0-9]/g;\n  //                 //   const ph = event.target.value.replace(patt, '');\n  //                 //   setData({ ...data, mobile: ph.slice(0, 10) });\n  //                 // }}\n  //                 />\n  //             </Grid>\n  //             <Grid>\n  //                 <CFormInput\n  //                     name=\"address\"\n  //                     label=\"Address\"\n  //                     style={{ width: 300, marginRight: 15 }}\n  //                     margin=\"dense\"\n  //                     variant=\"outlined\"\n  //                 // value={data.address}\n  //                 // onChange={(event) => {\n  //                 //   const str = event.target.value.split(',');\n  //                 //   for (let i = 0; i < str.length; i++) {\n  //                 //     str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n  //                 //   }\n  //                 //   const address = str.join(',');\n  //                 //   setData({ ...data, address: address })\n  //                 // }}\n  //                 />\n  //                 {/* <Autocomplete\n  //       options={familyheads}\n  //       renderInput={(params) =>\n  //         <CFormInput\n  //           {...params}\n  //           name=\"familyhead\"\n  //           value={data.familyhead}\n  //           margin=\"dense\"\n  //           variant=\"outlined\"\n  //           label=\"Family Head\"\n  //           onChange={(event) => {\n  //             const str = event.target.value.split(' ');\n  //             for (let i = 0; i < str.length; i++) {\n  //               str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n  //             }\n  //             const familyheadname = str.join(' ');\n  //             setData({ ...data, familyhead: familyheadname })\n  //           }}\n  //         />\n  //       }\n  //     /> */}\n  //             </Grid>\n  //             <RadioGroup\n  //                 row\n  //                 aria-label=\"Baptizm\"\n  //                 name=\"row-radio-buttons-group\"\n  //                 style={{\n  //                     width: 300,\n  //                     justifyContent: \"space-evenly\"\n  //                 }}\n  //             >\n  //                 <FormControlLabel\n  //                     control={<Radio />}\n  //                     value={true}\n  //                     label={\"Baptized\"}\n  //                 // onChange={(event) => setData({ ...data, baptized: event.target.value == \"true\" ? true : false })}\n  //                 />\n  //                 <FormControlLabel\n  //                     value={false}\n  //                     control={<Radio />}\n  //                     label={\"Not Baptized\"}\n  //                 // onChange={(event) => setData({ ...data, baptized: event.target.value == \"true\" ? true : false })}\n  //                 />\n  //             </RadioGroup>\n  //                 <CFormSwitch\n  //                     size=\"xl\"\n  //                     onChange={(event)=>{\n  //                         if(event.target.value===\"on\"){\n  //                             alert(event.target.value)\n  //                         }\n  //                     }}\n  //                 />\n  //             <RadioGroup\n  //                 row\n  //                 aria-label=\"mobile-type\"\n  //                 name=\"row-radio-buttons-group\"\n  //                 style={{\n  //                     width: 300,\n  //                     justifyContent: \"space-evenly\"\n  //                 }}\n  //             >\n  //                 <FormControlLabel\n  //                     label={\"Android\"}\n  //                     value={true}\n  //                     control={<Radio />}\n  //                 // onChange={(event) => setData({ ...data, android: event.target.value == \"true\" ? true : false })}\n  //                 />\n  //                 <FormControlLabel\n  //                     label={\"Normal\"}\n  //                     value={false}\n  //                     control={<Radio />}\n  //                 // onChange={(event) => setData({ ...data, android: event.target.value == \"true\" ? true : false })}\n  //                 />\n  //             </RadioGroup>\n  //             <Button\n  //                 variant=\"contained\"\n  //             // onClick={addrecords}\n  //             >\n  //                 Add to records</Button>\n  //         </Grid>\n  //     </Grid>\n  // </Grid>\n  ;\n};\n\n_s(Dataentry, \"Z/25ri3WhVrsIDy4iybf4hWP9SE=\");\n\n_c = Dataentry;\nexport default Dataentry;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dataentry\");","map":{"version":3,"sources":["/home/david/Desktop/mydev/coreui-free-react-admin-template/src/views/Components/Dataentry.js"],"names":["React","useEffect","useState","url","Grid","Button","FormControlLabel","RadioGroup","Radio","Autocomplete","CButton","CForm","CFormFeedback","CFormInput","CFormSwitch","Dataentry","name","setName","dob","setDob","familyheads","setFamilyheads","validity","setvalidity","data","setData","Date","gender","weddingdate","toLocaleDateString","emailid","mobile","address","familyhead","familyid","selfid","android","baptized","married","str","split","today","mon","getMonth","year","getFullYear","age","k","validated","setValidated","handleSubmit","event","form","currentTarget","checkValidity","preventDefault","stopPropagation","validation","length","addrecords","Familyid","Selfid","Name","Dob","Age","Gender","Married","Weddingdate","Emailid","Mobile","Address","Familyhead","Baptized","Android","fetch","method","headers","Accept","body","JSON","stringify","then","res","json","result","alert","console","log","catch","error","searchfamilyhead","filteredresult","Set","width","marginRight","target","value","toUpperCase","slice","i","charAt","substring","Nameoff","join","justifyContent","display","patt","ph","replace","params","familyheadname"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { url } from '../Constants'\nimport { Grid, Button, FormControlLabel, RadioGroup, Radio, Autocomplete } from '@mui/material'\nimport { CButton, CForm, CFormFeedback, CFormInput, CFormSwitch } from '@coreui/react'\n\nconst Dataentry = () => {\n  const [name, setName] = useState('')\n  const [dob, setDob] = useState('')\n  const [familyheads, setFamilyheads] = useState([])\n  const [validity, setvalidity] = useState(true)\n\n  const [data, setData] = useState({\n    name: '',\n    dob: new Date(),\n    gender: '',\n    weddingdate: new Date().toLocaleDateString(),\n    emailid: '',\n    mobile: '',\n    address: '',\n    familyhead: '',\n    familyid: '',\n    selfid: '',\n    android: false,\n    baptized: false,\n    married: false,\n  })\n\n  const str = dob.split('-')\n  const today = new Date()\n  const mon = today.getMonth()\n  const year = today.getFullYear()\n  let age\n\n  let k = year - 1\n\n  if (mon >= str[1]) {\n    age = year - str[0]\n  } else {\n    age = k - str[0]\n  }\n\n  const [validated, setValidated] = useState(false)\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget\n\n    if (form.checkValidity() === false) {\n      event.preventDefault()\n\n      event.stopPropagation()\n    }\n\n    setValidated(true)\n  }\n  const validation = () => {\n    if (\n      (data.familyid &&\n        data.familyhead &&\n        data.address &&\n        data.selfid &&\n        data.name &&\n        data.gender &&\n        !data.mobile.length < 10) !== ''\n    ) {\n      setvalidity(true)\n      return true\n    } else {\n      setvalidity(false)\n      return false\n    }\n  }\n\n  const addrecords = () => {\n    if (validity) {\n      let Familyid = data.familyid\n      let Selfid = data.selfid\n      let Name = data.name\n      let Dob = data.dob\n      let Age = age\n      let Gender = data.gender\n      let Married = data.married\n      let Weddingdate = data.weddingdate\n      let Emailid = data.emailid\n      let Mobile = data.mobile\n      let Address = data.address\n      let Familyhead = data.familyhead\n      let Baptized = data.baptized\n      let Android = data.android\n\n      fetch(`${url}/jehovanissi/api/member_details.php`, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          name: Name,\n          dob: Dob,\n          age: Age,\n          gender: Gender,\n          married: Married,\n          weddingdate: Weddingdate,\n          emailid: Emailid,\n          mobile: Mobile,\n          address: Address,\n          familyhead: Familyhead,\n          baptized: Baptized,\n          android: Android,\n          familyid: Familyid,\n          selfid: Selfid,\n        }),\n      })\n        .then((res) => res.json())\n        .then((result) => {\n          alert(result)\n          console.log(result)\n        })\n        .catch((error) => {\n          console.error(error)\n        })\n    } else {\n      alert('Input All required')\n    }\n  }\n\n  const searchfamilyhead = () => {\n    fetch(`${url}/jehovanissi/api/searchfamilyhead.php`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        let filteredresult = [...new Set(result)]\n        setFamilyheads(filteredresult)\n      })\n      .catch((error) => {\n        console.error(error)\n      })\n  }\n  useEffect(() => {\n    searchfamilyhead()\n  }, [])\n\n  return (\n    <CForm direction={'column'} alignItems={'center'} justifyItems={'stretch'} container item validated={validated} onSubmit={handleSubmit} >\n      <Grid>\n        <CFormInput\n          style={{ width: 300, marginRight: 15 }}\n          name=\"familyid\"\n          value={data.familyid}\n          margin=\"dense\"\n          variant=\"outlined\"\n          onChange={(event) => {\n            setData({ ...data, familyid: event.target.value.toUpperCase() })\n          }}\n          placeholder=\"Family ID\"\n          label=\"Family ID\"\n          required\n        />\n        <CFormFeedback\n          \n        />\n        <CFormInput\n          name=\"selfid\"\n          style={{ width: 300, marginRight: 15 }}\n          value={data.selfid}\n          margin=\"dense\"\n          variant=\"outlined\"\n          onFocus={() => setData({ ...data, selfid: data.familyid.slice(3) })}\n          placeholder=\"Self ID\"\n          label=\"Self ID\"\n        />\n      </Grid>\n      <Grid>\n        <CFormInput\n          name=\"name\"\n          value={data.name}\n          style={{ width: 300, marginRight: 15 }}\n          margin=\"dense\"\n          variant=\"outlined\"\n          onChange={(event) => {\n            const str = event.target.value.split(' ')\n            for (let i = 0; i < str.length; i++) {\n              str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1)\n            }\n            const Nameoff = str.join(' ')\n            setData({ ...data, name: Nameoff })\n          }}\n          placeholder=\"Enter Name\"\n          label=\"Enter Name\"\n        />\n        <CFormInput\n          type={'date'}\n          style={{ width: 300, marginRight: 15 }}\n          value={data.dob}\n          onChange={(event) => setData({ ...data, dob: event.target.value })}\n          label=\"Enter DOB\"\n        />\n      </Grid>\n      <RadioGroup\n        row\n        aria-label=\"gender\"\n        name=\"row-radio-buttons-group\"\n        style={{\n          width: 300,\n          justifyContent: 'space-evenly',\n        }}\n      >\n        <FormControlLabel\n          value=\"male\"\n          name=\"gender\"\n          label={'Male'}\n          control={<Radio />}\n          onChange={(event) => setData({ ...data, gender: event.target.value })}\n        />\n        <FormControlLabel\n          value=\"female\"\n          name=\"gender\"\n          label={'Female'}\n          control={<Radio />}\n          onChange={(event) => setData({ ...data, gender: event.target.value })}\n        />\n      </RadioGroup>\n      <RadioGroup\n        row\n        aria-label=\"martial-status\"\n        name=\"row-radio-buttons-group\"\n        style={{\n          width: 300,\n          justifyContent: 'space-evenly',\n        }}\n      >\n        <FormControlLabel\n          value={true}\n          label={'Married'}\n          control={<Radio />}\n          onChange={(event) => {\n            setData({ ...data, married: event.target.value == 'true' ? true : false })\n          }}\n        />\n        <FormControlLabel\n          value={false}\n          control={<Radio />}\n          label={'Unmarried'}\n          onChange={(event) => {\n            setData({ ...data, married: event.target.value == 'true' ? true : false })\n          }}\n        />\n      </RadioGroup>\n\n      <CFormInput\n        type=\"date\"\n        label=\"Wedding Date\"\n        style={{\n          display: data.married === true ? 'inline-block' : 'none',\n          width: 300,\n          marginRight: 15,\n        }}\n        margin=\"dense\"\n        variant=\"outlined\"\n        value={data.weddingdate}\n        onChange={(event) => setData({ ...data, weddingdate: event.target.value })}\n      />\n      <Grid>\n        <CFormInput\n          name=\"emailid\"\n          margin=\"dense\"\n          label=\"Email ID\"\n          style={{ width: 300, marginRight: 15 }}\n          variant=\"outlined\"\n          onChange={(event) => setData({ ...data, emailid: event.target.value })}\n          value={data.emailid}\n        />\n\n        <CFormInput\n          name=\"mobile\"\n          style={{ width: 300, marginRight: 15 }}\n          label=\"Mobile\"\n          margin=\"dense\"\n          variant=\"outlined\"\n          value={data.mobile}\n          onChange={(event) => {\n            let patt = /[^0-9]/g\n            const ph = event.target.value.replace(patt, '')\n            setData({ ...data, mobile: ph.slice(0, 10) })\n          }}\n        />\n      </Grid>\n\n      <Grid>\n        <CFormInput\n          name=\"address\"\n          label=\"Address\"\n          style={{ width: 300, marginRight: 15 }}\n          margin=\"dense\"\n          variant=\"outlined\"\n          value={data.address}\n          onChange={(event) => {\n            const str = event.target.value.split(',')\n            for (let i = 0; i < str.length; i++) {\n              str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1)\n            }\n            const address = str.join(',')\n            setData({ ...data, address: address })\n          }}\n        />\n        <Autocomplete\n          options={familyheads}\n          renderInput={(params) => (\n            <CFormInput\n              {...params}\n              name=\"familyhead\"\n              value={data.familyhead}\n              margin=\"dense\"\n              variant=\"outlined\"\n              label=\"Family Head\"\n              onChange={(event) => {\n                const str = event.target.value.split(' ')\n                for (let i = 0; i < str.length; i++) {\n                  str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1)\n                }\n                const familyheadname = str.join(' ')\n                setData({ ...data, familyhead: familyheadname })\n              }}\n            />\n          )}\n        />\n      </Grid>\n      <RadioGroup\n        row\n        aria-label=\"Baptizm\"\n        name=\"row-radio-buttons-group\"\n        style={{\n          width: 300,\n          justifyContent: 'space-evenly',\n        }}\n      >\n        <FormControlLabel\n          control={<Radio />}\n          value={true}\n          label={'Baptized'}\n          onChange={(event) =>\n            setData({ ...data, baptized: event.target.value == 'true' ? true : false })\n          }\n        />\n        <FormControlLabel\n          value={false}\n          control={<Radio />}\n          label={'Not Baptized'}\n          onChange={(event) =>\n            setData({ ...data, baptized: event.target.value == 'true' ? true : false })\n          }\n        />\n      </RadioGroup>\n\n      <RadioGroup\n        row\n        aria-label=\"mobile-type\"\n        name=\"row-radio-buttons-group\"\n        style={{\n          width: 300,\n          justifyContent: 'space-evenly',\n        }}\n      >\n        <FormControlLabel\n          label={'Android'}\n          value={true}\n          control={<Radio />}\n          onChange={(event) =>\n            setData({ ...data, android: event.target.value == 'true' ? true : false })\n          }\n        />\n        <FormControlLabel\n          label={'Normal'}\n          value={false}\n          control={<Radio />}\n          onChange={(event) =>\n            setData({ ...data, android: event.target.value == 'true' ? true : false })\n          }\n        />\n      </RadioGroup>\n\n      <CButton type='submit' >\n        Add to records\n      </CButton>\n    </CForm>\n\n    //========================\n\n    // <Grid>\n    //     <Grid\n    //         direction=\"column\"\n    //         alignItems={\"stretch\"}\n    //         justifyItems={\"stretch\"}\n    //         container\n    //     >\n    //         <Grid\n    //             direction={\"column\"}\n    //             alignItems={\"center\"}\n    //             justifyItems={\"stretch\"}\n    //             container\n    //             item\n    //         >\n    //             <Grid>\n    //                 <CFormInput\n    //                     style={{ width: 300, marginRight: 15 }}\n    //                     name=\"familyid\"\n    //                     // value={data.familyid}\n    //                     margin=\"dense\"\n    //                     variant=\"outlined\"\n    //                     placeholder=\"Family ID\"\n    //                     label=\"Family ID\"\n    //                 />\n    //                 <CFormInput\n    //                     name=\"selfid\"\n    //                     style={{ width: 300, marginRight: 15 }}\n    //                     // value={data.selfid}\n    //                     margin=\"dense\"\n    //                     variant=\"outlined\"\n    //                     placeholder=\"Self ID\"\n    //                     label=\"Self ID\"\n    //                 />\n    //             </Grid>\n    //             <Grid>\n    //                 <CFormInput\n    //                     name=\"name\"\n    //                     // value={data.name}\n    //                     style={{ width: 300, marginRight: 15 }}\n    //                     margin=\"dense\"\n    //                     variant=\"outlined\"\n    //                     // onChange={(event) => {\n    //                     //     const str = event.target.value.split(' ');\n    //                     //     for (let i = 0; i < str.length; i++) {\n\n    //                     //         str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n    //                     //     }\n    //                     //     const Nameoff = str.join(' ');\n    //                     //     setData({ ...data, name: Nameoff })\n    //                     // }}\n    //                     placeholder=\"Enter Name\"\n    //                     label=\"Enter Name\"\n    //                 />\n    //                 {/* <DatePicker\n    //       style={{ width: 300, marginRight: 15 }}\n    //       // value={data.dob}\n    //       // onChange={(event) => setData({ ...data, dob: event.target.value })}\n    //       label=\"Enter DOB\"\n    //     /> */}\n    //             </Grid>\n    //             <RadioGroup\n    //                 row\n    //                 aria-label=\"gender\"\n    //                 name=\"row-radio-buttons-group\"\n    //                 style={{\n    //                     width: 300,\n    //                     justifyContent: \"space-evenly\"\n    //                 }}\n    //             >\n    //                 <FormControlLabel\n    //                     value=\"male\"\n    //                     name=\"gender\"\n    //                     label={\"Male\"}\n    //                     control={<Radio />}\n    //                 // onChange={(event) => setData({ ...data, gender: event.target.value })}\n    //                 />\n    //                 <FormControlLabel\n    //                     value=\"female\"\n    //                     name=\"gender\"\n    //                     label={\"Female\"}\n    //                     control={<Radio />}\n    //                 // onChange={(event) => setData({ ...data, gender: event.target.value })}\n    //                 />\n    //             </RadioGroup>\n    //             <RadioGroup\n    //                 row\n    //                 aria-label=\"martial-status\"\n    //                 name=\"row-radio-buttons-group\"\n    //                 style={{\n    //                     width: 300,\n    //                     justifyContent: \"space-evenly\"\n    //                 }}\n    //             >\n    //                 <FormControlLabel\n    //                     value={true}\n    //                     label={\"Married\"}\n    //                     control={<Radio />}\n    //                 // onChange={(event) => { setData({ ...data, married: event.target.value == \"true\" ? true : false }) }}\n    //                 />\n    //                 <FormControlLabel\n    //                     value={false}\n    //                     control={<Radio />}\n    //                     label={\"Unmarried\"}\n    //                 // onChange={(event) => { setData({ ...data, married: event.target.value == \"true\" ? true : false }) }}\n    //                 />\n    //             </RadioGroup>\n\n    //             <CFormInput\n    //                 type=\"date\"\n    //                 label=\"Wedding Date\"\n    //                 // style={{ display: data.married === true ? \"inline-block\" : \"none\", width: 300, marginRight: 15 }}\n    //                 margin=\"dense\"\n    //                 variant=\"outlined\"\n    //             // value={data.weddingdate}\n    //             // onChange={(event) => setData({ ...data, weddingdate: event.target.value })}\n    //             />\n    //             <Grid>\n    //                 <CFormInput\n    //                     name=\"emailid\"\n    //                     margin=\"dense\"\n    //                     label=\"Email ID\"\n    //                     style={{ width: 300, marginRight: 15 }}\n    //                     variant=\"outlined\"\n    //                 // onChange={(event) => setData({ ...data, emailid: event.target.value })}\n    //                 // value={data.emailid}\n    //                 />\n\n    //                 <CFormInput\n    //                     name=\"mobile\"\n    //                     style={{ width: 300, marginRight: 15 }}\n    //                     label=\"Mobile\"\n    //                     margin=\"dense\"\n    //                     variant=\"outlined\"\n    //                 // value={data.mobile}\n    //                 // onChange={(event) => {\n    //                 //   let patt = /[^0-9]/g;\n    //                 //   const ph = event.target.value.replace(patt, '');\n    //                 //   setData({ ...data, mobile: ph.slice(0, 10) });\n    //                 // }}\n    //                 />\n    //             </Grid>\n\n    //             <Grid>\n    //                 <CFormInput\n    //                     name=\"address\"\n    //                     label=\"Address\"\n    //                     style={{ width: 300, marginRight: 15 }}\n    //                     margin=\"dense\"\n    //                     variant=\"outlined\"\n    //                 // value={data.address}\n    //                 // onChange={(event) => {\n    //                 //   const str = event.target.value.split(',');\n    //                 //   for (let i = 0; i < str.length; i++) {\n    //                 //     str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n    //                 //   }\n    //                 //   const address = str.join(',');\n    //                 //   setData({ ...data, address: address })\n    //                 // }}\n    //                 />\n    //                 {/* <Autocomplete\n    //       options={familyheads}\n    //       renderInput={(params) =>\n    //         <CFormInput\n    //           {...params}\n    //           name=\"familyhead\"\n    //           value={data.familyhead}\n    //           margin=\"dense\"\n    //           variant=\"outlined\"\n    //           label=\"Family Head\"\n    //           onChange={(event) => {\n    //             const str = event.target.value.split(' ');\n    //             for (let i = 0; i < str.length; i++) {\n    //               str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n    //             }\n    //             const familyheadname = str.join(' ');\n    //             setData({ ...data, familyhead: familyheadname })\n    //           }}\n    //         />\n    //       }\n    //     /> */}\n    //             </Grid>\n    //             <RadioGroup\n    //                 row\n    //                 aria-label=\"Baptizm\"\n    //                 name=\"row-radio-buttons-group\"\n    //                 style={{\n    //                     width: 300,\n    //                     justifyContent: \"space-evenly\"\n    //                 }}\n    //             >\n    //                 <FormControlLabel\n    //                     control={<Radio />}\n    //                     value={true}\n    //                     label={\"Baptized\"}\n    //                 // onChange={(event) => setData({ ...data, baptized: event.target.value == \"true\" ? true : false })}\n    //                 />\n    //                 <FormControlLabel\n    //                     value={false}\n    //                     control={<Radio />}\n    //                     label={\"Not Baptized\"}\n    //                 // onChange={(event) => setData({ ...data, baptized: event.target.value == \"true\" ? true : false })}\n    //                 />\n    //             </RadioGroup>\n    //                 <CFormSwitch\n    //                     size=\"xl\"\n    //                     onChange={(event)=>{\n    //                         if(event.target.value===\"on\"){\n    //                             alert(event.target.value)\n    //                         }\n    //                     }}\n    //                 />\n    //             <RadioGroup\n    //                 row\n    //                 aria-label=\"mobile-type\"\n    //                 name=\"row-radio-buttons-group\"\n    //                 style={{\n    //                     width: 300,\n    //                     justifyContent: \"space-evenly\"\n    //                 }}\n    //             >\n    //                 <FormControlLabel\n    //                     label={\"Android\"}\n    //                     value={true}\n    //                     control={<Radio />}\n    //                 // onChange={(event) => setData({ ...data, android: event.target.value == \"true\" ? true : false })}\n    //                 />\n    //                 <FormControlLabel\n    //                     label={\"Normal\"}\n    //                     value={false}\n    //                     control={<Radio />}\n    //                 // onChange={(event) => setData({ ...data, android: event.target.value == \"true\" ? true : false })}\n    //                 />\n    //             </RadioGroup>\n\n    //             <Button\n    //                 variant=\"contained\"\n    //             // onClick={addrecords}\n    //             >\n    //                 Add to records</Button>\n    //         </Grid>\n    //     </Grid>\n    // </Grid>\n  )\n}\n\nexport default Dataentry\n"]},"metadata":{},"sourceType":"module"}