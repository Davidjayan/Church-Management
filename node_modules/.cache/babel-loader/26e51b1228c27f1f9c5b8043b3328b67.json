{"ast":null,"code":"import _objectSpread from\"/home/david/Desktop/mydev/Church-Management/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/david/Desktop/mydev/Church-Management/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{TextField}from\"@mui/material\";import React,{useState}from\"react\";import{url}from\"../../Constants\";import{AlertMessage}from\"../Support/AlertMessage\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Newstudententry=function Newstudententry(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),newname=_useState2[0],setnewname=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),names=_useState4[0],setnames=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),searchterm=_useState6[0],setsearchterm=_useState6[1];var results=!searchterm?names:names.filter(function(person){return person.toLowerCase().includes(searchterm.toLocaleLowerCase());});var _useState7=useState({isOpen:false,message:'',variant:'filled',severity:'error'}),_useState8=_slicedToArray(_useState7,2),notify=_useState8[0],setNotify=_useState8[1];var submit=function submit(){if(newname){fetch(\"\".concat(url,\"/insertstudentname.php\"),{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({newname:newname})}).then(function(res){return res.json();}).then(function(result){setNotify(_objectSpread(_objectSpread({},notify),{},{isOpen:true,message:result}));window.location.reload();}).catch(function(error){console.error(error);});}else{setNotify(_objectSpread(_objectSpread({},notify),{},{isOpen:true,message:'Input All Requried'}));}};var searchapi=function searchapi(){fetch(\"\".concat(url,\"/searchname.php\"),{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'}}).then(function(res){return res.json();}).then(function(result){setnames(result);}).catch(function(error){console.error(error);});};return/*#__PURE__*/_jsxs(\"div\",{className:\"newentry\",children:[/*#__PURE__*/_jsx(AlertMessage,{notify:notify,setNotify:setNotify}),/*#__PURE__*/_jsx(TextField,{className:\"newentry-in\",required:true,placeholder:\"New Student\",value:newname,onChange:function onChange(event){searchapi();var str1=event.target.value.split(' ');for(var j=0;j<str1.length;j++){str1[j]=str1[j].charAt(0).toUpperCase()+str1[j].substring(1);}var newstr=str1.join(' ');setsearchterm(newstr);setnewname(newstr);},list:\"namelist\"}),/*#__PURE__*/_jsx(\"datalist\",{id:\"namelist\",children:results.map(function(k,key){return/*#__PURE__*/_jsx(\"option\",{children:k},key);})}),/*#__PURE__*/_jsx(\"button\",{className:\"btn\",onClick:function onClick(){submit();},children:\"+Add\"})]});};export default Newstudententry;","map":{"version":3,"sources":["/home/david/Desktop/mydev/Church-Management/src/views/Components/Sub Components/newstudententry.js"],"names":["TextField","React","useState","url","AlertMessage","Newstudententry","newname","setnewname","names","setnames","searchterm","setsearchterm","results","filter","person","toLowerCase","includes","toLocaleLowerCase","isOpen","message","variant","severity","notify","setNotify","submit","fetch","method","headers","body","JSON","stringify","then","res","json","result","window","location","reload","catch","error","console","searchapi","event","str1","target","value","split","j","length","charAt","toUpperCase","substring","newstr","join","map","k","key"],"mappings":"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","sourcesContent":["import { TextField } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { url } from \"../../Constants\";\nimport { AlertMessage } from \"../Support/AlertMessage\";\n\nconst Newstudententry = () => {\n  const [newname, setnewname] = useState('');\n  const [names, setnames] = useState([]);\n  const [searchterm, setsearchterm] = useState();\n  const results = !searchterm ? names : names.filter(person => person.toLowerCase().includes(searchterm.toLocaleLowerCase()));\n  const [notify, setNotify] = useState({ isOpen: false, message: '', variant: 'filled', severity: 'error' });\n\n\n  const submit = () => {\n    if (newname) {\n      fetch(`${url}/insertstudentname.php`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n\n        },\n        body: JSON.stringify({\n          newname: newname\n\n        })\n      })\n        .then(res => res.json())\n        .then((result) => {\n          setNotify({\n            ...notify,\n            isOpen:true,\n            message:result\n          })\n          window.location.reload();\n        }).catch((error) => {\n          console.error(error);\n        });\n\n\n\n    }\n    else {\n     setNotify({\n       ...notify,\n       isOpen:true,\n       message:'Input All Requried'\n     })\n    }\n  }\n  const searchapi = () => {\n    fetch(`${url}/searchname.php`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n\n      },\n    })\n      .then(res => res.json())\n      .then((result) => {\n        setnames(result);\n      }).catch((error) => {\n        console.error(error);\n      });\n  }\n\n  return (\n    <div className=\"newentry\">\n      <AlertMessage\n        notify={notify}\n        setNotify={setNotify}\n      />\n      <TextField className=\"newentry-in\"\n        required\n        placeholder=\"New Student\"\n        value={newname}\n        onChange={(event) => {\n          searchapi();\n          const str1 = event.target.value.split(' ');\n          for (let j = 0; j < str1.length; j++) {\n\n            str1[j] = str1[j].charAt(0).toUpperCase() + str1[j].substring(1);\n          }\n          const newstr = str1.join(' ');\n          setsearchterm(newstr);\n          setnewname(newstr);\n\n        }}\n        list=\"namelist\"\n      ></TextField>\n      <datalist id=\"namelist\">\n        {results.map((k, key) => {\n          return (\n            <option key={key} >{k}</option>\n          )\n        })}\n      </datalist>\n\n\n      <button className=\"btn\" onClick={() => { submit() }}>+Add</button>\n    </div>\n  )\n}\n\nexport default Newstudententry;"]},"metadata":{},"sourceType":"module"}