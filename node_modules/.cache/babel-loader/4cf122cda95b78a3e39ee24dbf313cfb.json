{"ast":null,"code":"var _jsxFileName = \"/home/david/Desktop/mydev/coreui-free-react-admin-template/src/views/Components/Dataentry.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { url } from '../Constants';\nimport { Grid, Button, FormControlLabel, RadioGroup, Radio, Autocomplete, formLabelClasses } from '@mui/material';\nimport { CAlert, CButton, CCol, CForm, CFormFeedback, CFormInput, CFormLabel, CFormSwitch, CFormTextarea } from '@coreui/react';\nimport { AlertMessage } from './Support/AlertMessage';\nimport { AppFooter } from 'src/components';\nimport { DataEntryForms } from './DataEntryForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dataentry = () => {\n  _s();\n\n  const [familyheads, setFamilyheads] = useState([]);\n  const [validity, setvalidity] = useState(true);\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: '',\n    variant: 'filled',\n    severity: 'error'\n  });\n  const [data, setData] = useState({\n    name: '',\n    dob: '',\n    gender: 'male',\n    weddingdate: '',\n    emailid: '',\n    mobile: '',\n    address: '',\n    familyhead: '',\n    familyid: '',\n    selfid: '',\n    android: false,\n    baptized: false,\n    married: false\n  });\n  let age;\n  useEffect(() => {\n    let yearDifference = 31536000000;\n    age = parseInt((new Date().getTime() - new Date(data.dob).getTime()) / yearDifference).toString().replace(\"-\", \"\");\n    console.log(age);\n  }, [data.dob]);\n  const [validated, setValidated] = useState(false);\n\n  const handleSubmit = event => {\n    const form = event.currentTarget;\n\n    if (form.checkValidity() == false) {\n      event.preventDefault();\n      event.stopPropagation();\n    } else {\n      setValidated(true);\n      addrecords();\n    }\n  };\n\n  const addrecords = () => {\n    if (validity) {\n      let Familyid = data.familyid;\n      let Selfid = data.selfid;\n      let Name = data.name;\n      let Dob = data.dob;\n      let Age = age;\n      let Gender = data.gender;\n      let Married = data.married == false ? 0 : data.married;\n      let Weddingdate = data.weddingdate;\n      let Emailid = data.emailid;\n      let Mobile = data.mobile;\n      let Address = data.address;\n      let Familyhead = data.familyhead;\n      let Baptized = data.baptized == false ? 0 : data.baptized;\n      let Android = data.android == false ? 0 : data.android;\n      fetch(\"\".concat(url, \"/member_details.php\"), {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: Name,\n          dob: Dob,\n          age: Age,\n          gender: Gender,\n          married: Married,\n          weddingdate: Weddingdate,\n          emailid: Emailid,\n          mobile: Mobile,\n          address: Address,\n          familyhead: Familyhead,\n          baptized: Baptized,\n          android: Android,\n          familyid: Familyid,\n          selfid: Selfid\n        })\n      }).then(res => res.json()).then(result => {\n        setNotify({ ...notify,\n          isOpen: true,\n          severity: result['status'] == 1 ? \"success\" : \"error\",\n          message: String(result['message'])\n        });\n        setData({\n          name: '',\n          dob: new Date(),\n          gender: 'male',\n          weddingdate: '',\n          emailid: '',\n          mobile: '',\n          address: '',\n          familyhead: '',\n          familyid: '',\n          selfid: '',\n          android: false,\n          baptized: false,\n          married: false\n        });\n      }).catch(error => {\n        console.error(error);\n      });\n    } else {\n      setNotify({ ...notify,\n        isOpen: true,\n        message: \"Input all required\"\n      });\n    }\n  };\n\n  const searchfamilyhead = () => {\n    fetch(\"\".concat(url, \"/searchfamilyhead.php\"), {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(result => {\n      let filteredresult = [...new Set(result)];\n      setFamilyheads(filteredresult);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  useEffect(() => {\n    searchfamilyhead();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(DataEntryForms, {\n    familyheads: familyheads,\n    data: data,\n    notify: notify,\n    setNotify: setNotify,\n    setData: setData,\n    validated: validated,\n    handleSubmit: handleSubmit\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dataentry, \"JKKtlu6hDxq7Tjre8WnyDTbgHPY=\");\n\n_c = Dataentry;\nexport default Dataentry;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dataentry\");","map":{"version":3,"sources":["/home/david/Desktop/mydev/coreui-free-react-admin-template/src/views/Components/Dataentry.js"],"names":["React","useEffect","useState","url","Grid","Button","FormControlLabel","RadioGroup","Radio","Autocomplete","formLabelClasses","CAlert","CButton","CCol","CForm","CFormFeedback","CFormInput","CFormLabel","CFormSwitch","CFormTextarea","AlertMessage","AppFooter","DataEntryForms","Dataentry","familyheads","setFamilyheads","validity","setvalidity","notify","setNotify","isOpen","message","variant","severity","data","setData","name","dob","gender","weddingdate","emailid","mobile","address","familyhead","familyid","selfid","android","baptized","married","age","yearDifference","parseInt","Date","getTime","toString","replace","console","log","validated","setValidated","handleSubmit","event","form","currentTarget","checkValidity","preventDefault","stopPropagation","addrecords","Familyid","Selfid","Name","Dob","Age","Gender","Married","Weddingdate","Emailid","Mobile","Address","Familyhead","Baptized","Android","fetch","method","headers","Accept","body","JSON","stringify","then","res","json","result","String","catch","error","searchfamilyhead","filteredresult","Set"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { url } from '../Constants'\nimport { Grid, Button, FormControlLabel, RadioGroup, Radio, Autocomplete, formLabelClasses } from '@mui/material'\nimport { CAlert, CButton, CCol, CForm, CFormFeedback, CFormInput, CFormLabel, CFormSwitch, CFormTextarea } from '@coreui/react'\nimport { AlertMessage } from './Support/AlertMessage'\nimport { AppFooter } from 'src/components'\nimport { DataEntryForms } from './DataEntryForm'\n\n\nconst Dataentry = () => {\n  const [familyheads, setFamilyheads] = useState([])\n  const [validity, setvalidity] = useState(true);\n  const [notify, setNotify] = useState({ isOpen: false, message: '', variant: 'filled', severity: 'error' });\n\n  const [data, setData] = useState({\n    name: '',\n    dob: '',\n    gender: 'male',\n    weddingdate: '',\n    emailid: '',\n    mobile: '',\n    address: '',\n    familyhead: '',\n    familyid: '',\n    selfid: '',\n    android: false,\n    baptized: false,\n    married: false,\n  })\n\n  let age\n  useEffect(() => {\n\n\n    let yearDifference = 31536000000;\n    age = parseInt((new Date().getTime()-new Date(data.dob).getTime())/yearDifference).toString().replace(\"-\",\"\");\n\n\n    console.log(age);\n  }, [data.dob])\n  \n\n\n  const [validated, setValidated] = useState(false)\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget\n\n    if (form.checkValidity() == false) {\n      event.preventDefault()\n\n      event.stopPropagation()\n    }\n    else {\n      setValidated(true)\n      addrecords();\n    }\n\n  }\n  \n\n  const addrecords = () => {\n    if (validity) {\n      let Familyid = data.familyid\n      let Selfid = data.selfid\n      let Name = data.name\n      let Dob = data.dob\n      let Age = age\n      let Gender = data.gender\n      let Married = data.married==false?0:data.married;\n      let Weddingdate = data.weddingdate\n      let Emailid = data.emailid\n      let Mobile = data.mobile\n      let Address = data.address\n      let Familyhead = data.familyhead\n      let Baptized = data.baptized==false?0:data.baptized\n      let Android = data.android==false?0:data.android\n\n      fetch(`${url}/member_details.php`, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: Name,\n          dob: Dob,\n          age: Age,\n          gender: Gender,\n          married: Married,\n          weddingdate: Weddingdate,\n          emailid: Emailid,\n          mobile: Mobile,\n          address: Address,\n          familyhead: Familyhead,\n          baptized: Baptized,\n          android: Android,\n          familyid: Familyid,\n          selfid: Selfid,\n        }),\n      })\n        .then((res) => res.json())\n        .then((result) => {\n          setNotify({\n            ...notify,\n            isOpen:true,\n            severity:result['status']==1?\"success\":\"error\",\n            message:String(result['message'])\n          });\n          setData({\n            name: '',\n            dob: new Date(),\n            gender: 'male',\n            weddingdate: '',\n            emailid: '',\n            mobile: '',\n            address: '',\n            familyhead: '',\n            familyid: '',\n            selfid: '',\n            android: false,\n            baptized: false,\n            married: false,\n          });\n        })\n        .catch((error) => {\n          console.error(error)\n        })\n    } else {\n      setNotify({\n        ...notify,\n        isOpen:true,\n        message:\"Input all required\"\n      })\n    }\n  }\n\n  const searchfamilyhead = () => {\n    fetch(`${url}/searchfamilyhead.php`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        let filteredresult = [...new Set(result)]\n        setFamilyheads(filteredresult)\n      })\n      .catch((error) => {\n        console.error(error)\n      })\n  }\n  useEffect(() => {\n    searchfamilyhead()\n  }, [])\n\n  return (\n    <DataEntryForms\n    familyheads={familyheads}\n    data={data}\n    notify={notify}\n    setNotify={setNotify}\n    setData={setData}\n    validated={validated}\n    handleSubmit={handleSubmit}\n    />\n  )\n}\n\nexport default Dataentry\n"]},"metadata":{},"sourceType":"module"}