{"ast":null,"code":"var _jsxFileName = \"/home/david/Desktop/mydev/coreui-free-react-admin-template/src/views/Components/Dataentry.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { url } from '../Constants';\nimport { Grid, Button, FormControlLabel, RadioGroup, Radio, Autocomplete, formLabelClasses } from '@mui/material';\nimport { CAlert, CButton, CCol, CForm, CFormFeedback, CFormInput, CFormLabel, CFormSwitch, CFormTextarea } from '@coreui/react';\nimport { AlertMessage } from './Support/AlertMessage';\nimport { AppFooter } from 'src/components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dataentry = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [dob, setDob] = useState('');\n  const [familyheads, setFamilyheads] = useState([]);\n  const [validity, setvalidity] = useState(true);\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: '',\n    variant: 'filled',\n    severity: 'error'\n  });\n  const [data, setData] = useState({\n    name: '',\n    dob: new Date(),\n    gender: 'male',\n    weddingdate: '',\n    emailid: '',\n    mobile: '',\n    address: '',\n    familyhead: '',\n    familyid: '',\n    selfid: '',\n    android: false,\n    baptized: false,\n    married: false\n  });\n  const str = dob.split('-');\n  const today = new Date();\n  const mon = today.getMonth();\n  const year = today.getFullYear();\n  let age;\n  let k = year - 1;\n\n  if (mon >= str[1]) {\n    age = year - str[0];\n  } else {\n    age = k - str[0];\n  }\n\n  const [validated, setValidated] = useState(false);\n\n  const handleSubmit = event => {\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    } else {\n      addrecords();\n    }\n\n    setValidated(true);\n  };\n\n  const addrecords = () => {\n    if (validity) {\n      let Familyid = data.familyid;\n      let Selfid = data.selfid;\n      let Name = data.name;\n      let Dob = data.dob;\n      let Age = age;\n      let Gender = data.gender;\n      let Married = data.married == false ? 0 : data.married;\n      let Weddingdate = data.weddingdate;\n      let Emailid = data.emailid;\n      let Mobile = data.mobile;\n      let Address = data.address;\n      let Familyhead = data.familyhead;\n      let Baptized = data.baptized == false ? 0 : data.baptized;\n      let Android = data.android == false ? 0 : data.android;\n      fetch(\"\".concat(url, \"/member_details.php\"), {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: Name,\n          dob: Dob,\n          age: Age,\n          gender: Gender,\n          married: Married,\n          weddingdate: Weddingdate,\n          emailid: Emailid,\n          mobile: Mobile,\n          address: Address,\n          familyhead: Familyhead,\n          baptized: Baptized,\n          android: Android,\n          familyid: Familyid,\n          selfid: Selfid\n        })\n      }).then(res => res.json()).then(result => {\n        setNotify({ ...notify,\n          isOpen: true,\n          severity: result['status'] == 1 ? \"sucess\" : \"error\",\n          message: String(result['message'])\n        });\n      }).catch(error => {\n        console.error(error);\n      });\n    } else {\n      setNotify({ ...notify,\n        isOpen: true,\n        message: \"Input all required\"\n      });\n    }\n  };\n\n  const searchfamilyhead = () => {\n    fetch(\"\".concat(url, \"/searchfamilyhead.php\"), {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(result => {\n      let filteredresult = [...new Set(result)];\n      setFamilyheads(filteredresult);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  useEffect(() => {\n    searchfamilyhead();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CForm, {\n    direction: 'column',\n    alignItems: 'center',\n    justifyItems: 'stretch',\n    container: true,\n    item: true,\n    validated: validated,\n    children: [/*#__PURE__*/_jsxDEV(AlertMessage, {\n      notify: notify,\n      setNotify: setNotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CCol, {\n      md: 4,\n      children: [/*#__PURE__*/_jsxDEV(CFormLabel, {\n        children: \"Family ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CFormInput, {\n        style: {\n          width: 300,\n          marginRight: 15\n        },\n        name: \"familyid\",\n        value: data.familyid,\n        margin: \"dense\",\n        variant: \"outlined\",\n        onChange: event => {\n          setData({ ...data,\n            familyid: event.target.value.toUpperCase()\n          });\n        },\n        placeholder: \"Family ID\",\n        label: \"Family ID\",\n        required: true,\n        invalid: data.familyid ? false : true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CFormFeedback, {\n        invalid: true,\n        children: \"Field is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CCol, {\n      md: 4,\n      children: [/*#__PURE__*/_jsxDEV(CFormLabel, {\n        children: \"Self ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CFormInput, {\n        name: \"selfid\",\n        style: {\n          width: 300,\n          marginRight: 15\n        },\n        value: data.selfid,\n        margin: \"dense\",\n        variant: \"outlined\",\n        onFocus: () => setData({ ...data,\n          selfid: data.familyid.slice(3)\n        }),\n        placeholder: \"Self ID\",\n        label: \"Self ID\",\n        required: true,\n        readOnly: true,\n        invalid: data.selfid ? false : true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CFormFeedback, {\n        invalid: true,\n        children: \"Field is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CCol, {\n      children: [/*#__PURE__*/_jsxDEV(CFormLabel, {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CFormInput, {\n        name: \"name\",\n        value: data.name,\n        style: {\n          width: 300,\n          marginRight: 15\n        },\n        margin: \"dense\",\n        variant: \"outlined\",\n        onChange: event => {\n          const str = event.target.value.split(' ');\n\n          for (let i = 0; i < str.length; i++) {\n            str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n          }\n\n          const patt = /[^a-zA-Z ]/g;\n          const Name1 = str.join(' ').replace(patt, '');\n          setData({ ...data,\n            name: Name1\n          });\n        },\n        placeholder: \"Enter Name\",\n        label: \"Enter Name\" // invalid={data.name ? false : true}\n        ,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CFormFeedback, {\n        invalid: true,\n        children: \"Please fill this field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CCol, {\n      md: 4,\n      children: [/*#__PURE__*/_jsxDEV(CFormLabel, {\n        children: \"Date Of Birth\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CFormInput, {\n        type: 'date',\n        style: {\n          width: 300,\n          marginRight: 15\n        },\n        value: data.dob,\n        onChange: event => setData({ ...data,\n          dob: event.target.value\n        }),\n        label: \"Enter DOB\",\n        required: true,\n        invalid: data.dob ? false : true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CFormFeedback, {\n        invalid: true,\n        children: \"Field is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CCol, {\n      md: 4,\n      children: [/*#__PURE__*/_jsxDEV(CFormLabel, {\n        children: \"Gender\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        row: true,\n        \"aria-label\": \"gender\",\n        name: \"row-radio-buttons-group\",\n        style: {\n          width: 300,\n          justifyContent: 'space-evenly'\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"male\",\n          name: \"gender\",\n          label: 'Male',\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 22\n          }, this),\n          onChange: event => setData({ ...data,\n            gender: event.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"female\",\n          name: \"gender\",\n          label: 'Female',\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 22\n          }, this),\n          onChange: event => setData({ ...data,\n            gender: event.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CCol, {\n      md: 4,\n      children: [/*#__PURE__*/_jsxDEV(CFormLabel, {\n        children: \"Martial status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        row: true,\n        \"aria-label\": \"martial-status\",\n        name: \"row-radio-buttons-group\",\n        style: {\n          width: 300,\n          justifyContent: 'space-evenly'\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: true,\n          label: 'Married',\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 22\n          }, this),\n          onChange: event => {\n            setData({ ...data,\n              married: event.target.value == 'true' ? true : false\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: false,\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 22\n          }, this),\n          label: 'Unmarried',\n          onChange: event => {\n            setData({ ...data,\n              married: event.target.value == 'true' ? true : false\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CCol, {\n      md: 4,\n      style: {\n        display: data.married === true ? 'block' : 'none',\n        width: 300,\n        marginRight: 15\n      },\n      children: [/*#__PURE__*/_jsxDEV(CFormLabel, {\n        children: \"Wedding Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CFormInput, {\n        type: \"date\",\n        label: \"Wedding Date\",\n        margin: \"dense\",\n        variant: \"outlined\",\n        value: data.weddingdate,\n        onChange: event => setData({ ...data,\n          weddingdate: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CCol, {\n      children: [/*#__PURE__*/_jsxDEV(CFormLabel, {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CFormInput, {\n        name: \"emailid\",\n        placeholder: \"Enter Emailid\",\n        margin: \"dense\",\n        label: \"Email ID\",\n        style: {\n          width: 300,\n          marginRight: 15\n        },\n        variant: \"outlined\",\n        onChange: event => setData({ ...data,\n          emailid: event.target.value\n        }),\n        value: data.emailid,\n        invalid: !data.emailid || data.emailid.includes('@') && data.emailid.includes('.com') ? false : true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CFormFeedback, {\n        invalid: true,\n        children: \"Please input valid email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CCol, {\n      children: [/*#__PURE__*/_jsxDEV(CFormLabel, {\n        children: \"Mobile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CFormInput, {\n        name: \"mobile\",\n        style: {\n          width: 300,\n          marginRight: 15\n        },\n        label: \"Mobile\",\n        placeholder: \"Enter mobile number\",\n        margin: \"dense\",\n        variant: \"outlined\",\n        value: data.mobile,\n        onChange: event => {\n          let patt = /[^0-9]/g;\n          const ph = event.target.value.replace(patt, '');\n          setData({ ...data,\n            mobile: ph.slice(0, 10)\n          });\n        },\n        required: true,\n        invalid: data.mobile.length === 10 ? false : true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CFormFeedback, {\n        invalid: true,\n        children: \"Enter valid number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CCol, {\n      children: [/*#__PURE__*/_jsxDEV(CFormLabel, {\n        children: \"Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CFormTextarea, {\n        name: \"address\",\n        label: \"Address\",\n        placeholder: \"Enter address\",\n        style: {\n          width: 300,\n          marginRight: 15\n        },\n        margin: \"dense\",\n        variant: \"outlined\",\n        value: data.address,\n        onChange: event => {\n          const str = event.target.value.split(',');\n\n          for (let i = 0; i < str.length; i++) {\n            str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n          }\n\n          const address = str.join(',');\n          setData({ ...data,\n            address: address\n          });\n        },\n        required: true,\n        invalid: data.address ? false : true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CFormFeedback, {\n        invalid: true,\n        children: \"Field is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CCol, {\n      md: 4,\n      children: [/*#__PURE__*/_jsxDEV(CFormLabel, {\n        children: \"Family head\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CFormInput, {\n        name: \"familyhead\",\n        value: data.familyhead,\n        margin: \"dense\",\n        placeholder: \"Enter family head\",\n        variant: \"outlined\",\n        label: \"Family Head\",\n        onChange: event => {\n          const str = event.target.value.split(' ');\n\n          for (let i = 0; i < str.length; i++) {\n            str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n          }\n\n          const familyheadname = str.join(' ');\n          setData({ ...data,\n            familyhead: familyheadname\n          });\n        },\n        required: true,\n        invalid: data.familyhead ? false : true,\n        list: \"listforfamilyheads\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n        id: \"listforfamilyheads\",\n        children: familyheads.map((f, key) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            children: f\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CFormFeedback, {\n        invalid: true,\n        children: \"Field is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CCol, {\n      md: 4,\n      children: [/*#__PURE__*/_jsxDEV(CFormLabel, {\n        children: \"Baptism\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        row: true,\n        \"aria-label\": \"Baptizm\",\n        name: \"row-radio-buttons-group\",\n        style: {\n          width: 300,\n          justifyContent: 'space-evenly'\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 22\n          }, this),\n          value: true,\n          label: 'Baptized',\n          onChange: event => setData({ ...data,\n            baptized: event.target.value == 'true' ? true : false\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: false,\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 22\n          }, this),\n          label: 'Not Baptized',\n          onChange: event => setData({ ...data,\n            baptized: event.target.value == 'true' ? true : false\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CCol, {\n      md: 4,\n      children: [/*#__PURE__*/_jsxDEV(CFormLabel, {\n        children: \"Mobile type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        row: true,\n        \"aria-label\": \"mobile-type\",\n        name: \"row-radio-buttons-group\",\n        style: {\n          width: 300,\n          justifyContent: 'space-evenly'\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          label: 'Android',\n          value: true,\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 22\n          }, this),\n          onChange: event => setData({ ...data,\n            android: event.target.value == 'true' ? true : false\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          label: 'Normal',\n          value: false,\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 22\n          }, this),\n          onChange: event => setData({ ...data,\n            android: event.target.value == 'true' ? true : false\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CButton, {\n      onClick: handleSubmit,\n      children: \"Add to records\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dataentry, \"WoKv+DMGQo1n/5LXHfPXh9gx/w4=\");\n\n_c = Dataentry;\nexport default Dataentry;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dataentry\");","map":{"version":3,"sources":["/home/david/Desktop/mydev/coreui-free-react-admin-template/src/views/Components/Dataentry.js"],"names":["React","useEffect","useState","url","Grid","Button","FormControlLabel","RadioGroup","Radio","Autocomplete","formLabelClasses","CAlert","CButton","CCol","CForm","CFormFeedback","CFormInput","CFormLabel","CFormSwitch","CFormTextarea","AlertMessage","AppFooter","Dataentry","name","setName","dob","setDob","familyheads","setFamilyheads","validity","setvalidity","notify","setNotify","isOpen","message","variant","severity","data","setData","Date","gender","weddingdate","emailid","mobile","address","familyhead","familyid","selfid","android","baptized","married","str","split","today","mon","getMonth","year","getFullYear","age","k","validated","setValidated","handleSubmit","event","form","currentTarget","checkValidity","preventDefault","stopPropagation","addrecords","Familyid","Selfid","Name","Dob","Age","Gender","Married","Weddingdate","Emailid","Mobile","Address","Familyhead","Baptized","Android","fetch","method","headers","Accept","body","JSON","stringify","then","res","json","result","String","catch","error","console","searchfamilyhead","filteredresult","Set","width","marginRight","target","value","toUpperCase","slice","i","length","charAt","substring","patt","Name1","join","replace","justifyContent","display","includes","ph","familyheadname","map","f","key"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { url } from '../Constants'\nimport { Grid, Button, FormControlLabel, RadioGroup, Radio, Autocomplete, formLabelClasses } from '@mui/material'\nimport { CAlert, CButton, CCol, CForm, CFormFeedback, CFormInput, CFormLabel, CFormSwitch, CFormTextarea } from '@coreui/react'\nimport { AlertMessage } from './Support/AlertMessage'\nimport { AppFooter } from 'src/components'\n\n\nconst Dataentry = () => {\n  const [name, setName] = useState('')\n  const [dob, setDob] = useState('')\n  const [familyheads, setFamilyheads] = useState([])\n  const [validity, setvalidity] = useState(true);\n  const [notify, setNotify] = useState({ isOpen: false, message: '', variant: 'filled', severity: 'error' });\n\n  const [data, setData] = useState({\n    name: '',\n    dob: new Date(),\n    gender: 'male',\n    weddingdate: '',\n    emailid: '',\n    mobile: '',\n    address: '',\n    familyhead: '',\n    familyid: '',\n    selfid: '',\n    android: false,\n    baptized: false,\n    married: false,\n  })\n\n  const str = dob.split('-')\n  const today = new Date()\n  const mon = today.getMonth()\n  const year = today.getFullYear()\n  let age\n\n  let k = year - 1\n\n  if (mon >= str[1]) {\n    age = year - str[0]\n  } else {\n    age = k - str[0]\n  }\n\n  const [validated, setValidated] = useState(false)\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget\n\n    if (form.checkValidity() === false) {\n      event.preventDefault()\n\n      event.stopPropagation()\n    }\n    else {\n      addrecords();\n    }\n\n    setValidated(true)\n  }\n  \n\n  const addrecords = () => {\n    if (validity) {\n      let Familyid = data.familyid\n      let Selfid = data.selfid\n      let Name = data.name\n      let Dob = data.dob\n      let Age = age\n      let Gender = data.gender\n      let Married = data.married==false?0:data.married;\n      let Weddingdate = data.weddingdate\n      let Emailid = data.emailid\n      let Mobile = data.mobile\n      let Address = data.address\n      let Familyhead = data.familyhead\n      let Baptized = data.baptized==false?0:data.baptized\n      let Android = data.android==false?0:data.android\n\n      fetch(`${url}/member_details.php`, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: Name,\n          dob: Dob,\n          age: Age,\n          gender: Gender,\n          married: Married,\n          weddingdate: Weddingdate,\n          emailid: Emailid,\n          mobile: Mobile,\n          address: Address,\n          familyhead: Familyhead,\n          baptized: Baptized,\n          android: Android,\n          familyid: Familyid,\n          selfid: Selfid,\n        }),\n      })\n        .then((res) => res.json())\n        .then((result) => {\n          setNotify({\n            ...notify,\n            isOpen:true,\n            severity:result['status']==1?\"sucess\":\"error\",\n            message:String(result['message'])\n          })\n        })\n        .catch((error) => {\n          console.error(error)\n        })\n    } else {\n      setNotify({\n        ...notify,\n        isOpen:true,\n        message:\"Input all required\"\n      })\n    }\n  }\n\n  const searchfamilyhead = () => {\n    fetch(`${url}/searchfamilyhead.php`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        let filteredresult = [...new Set(result)]\n        setFamilyheads(filteredresult)\n      })\n      .catch((error) => {\n        console.error(error)\n      })\n  }\n  useEffect(() => {\n    searchfamilyhead()\n  }, [])\n\n  return (\n    <CForm direction={'column'} alignItems={'center'} justifyItems={'stretch'} container item validated={validated}  >\n      <AlertMessage\n        notify={notify}\n        setNotify={setNotify}\n      />\n      <CCol md={4}>\n        <CFormLabel>\n          Family ID\n        </CFormLabel>\n        <CFormInput\n          style={{ width: 300, marginRight: 15 }}\n          name=\"familyid\"\n          value={data.familyid}\n          margin=\"dense\"\n          variant=\"outlined\"\n          onChange={(event) => {\n            setData({ ...data, familyid: event.target.value.toUpperCase() })\n          }}\n          placeholder=\"Family ID\"\n          label=\"Family ID\"\n          required\n          invalid={data.familyid ? false : true}\n        />\n        <CFormFeedback\n          invalid\n        >Field is required</CFormFeedback>\n      </CCol>\n      <CCol md={4} >\n        <CFormLabel>\n          Self ID\n        </CFormLabel>\n        <CFormInput\n          name=\"selfid\"\n          style={{ width: 300, marginRight: 15 }}\n          value={data.selfid}\n          margin=\"dense\"\n          variant=\"outlined\"\n          onFocus={() => setData({ ...data, selfid: data.familyid.slice(3) })}\n          placeholder=\"Self ID\"\n          label=\"Self ID\"\n          required\n          readOnly\n          invalid={data.selfid ? false : true}\n        />\n        <CFormFeedback\n          invalid\n        >\n          Field is required\n        </CFormFeedback>\n      </CCol>\n\n      <CCol>\n        <CFormLabel>\n          Name\n        </CFormLabel>\n        <CFormInput\n          name=\"name\"\n          value={data.name}\n          style={{ width: 300, marginRight: 15 }}\n          margin=\"dense\"\n          variant=\"outlined\"\n          onChange={(event) => {\n            const str = event.target.value.split(' ')\n            for (let i = 0; i < str.length; i++) {\n              str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1)\n            }\n            const patt = /[^a-zA-Z ]/g;\n            const Name1 = str.join(' ').replace(patt, '');\n            setData({ ...data, name: Name1 })\n          }}\n          placeholder=\"Enter Name\"\n          label=\"Enter Name\"\n          // invalid={data.name ? false : true}\n          required\n        />\n        <CFormFeedback\n          invalid\n        >\n          Please fill this field\n        </CFormFeedback>\n      </CCol>\n      <CCol md={4} >\n        <CFormLabel>\n          Date Of Birth\n        </CFormLabel>\n        <CFormInput\n          type={'date'}\n          style={{ width: 300, marginRight: 15 }}\n          value={data.dob}\n          onChange={(event) => setData({ ...data, dob: event.target.value })}\n          label=\"Enter DOB\"\n          required\n          invalid={data.dob ? false : true}\n        />\n        <CFormFeedback\n          invalid\n        >\n          Field is required\n        </CFormFeedback>\n      </CCol>\n      <CCol md={4} >\n        <CFormLabel>\n          Gender\n        </CFormLabel>\n        <RadioGroup\n          row\n          aria-label=\"gender\"\n          name=\"row-radio-buttons-group\"\n          style={{\n            width: 300,\n            justifyContent: 'space-evenly',\n          }}\n        >\n          <FormControlLabel\n            value=\"male\"\n            name=\"gender\"\n            label={'Male'}\n            control={<Radio />}\n            onChange={(event) => setData({ ...data, gender: event.target.value })}\n          />\n          <FormControlLabel\n            value=\"female\"\n            name=\"gender\"\n            label={'Female'}\n            control={<Radio />}\n            onChange={(event) => setData({ ...data, gender: event.target.value })}\n          />\n        </RadioGroup>\n      </CCol>\n      <CCol md={4} >\n        <CFormLabel>\n          Martial status\n        </CFormLabel>\n        <RadioGroup\n          row\n          aria-label=\"martial-status\"\n          name=\"row-radio-buttons-group\"\n          style={{\n            width: 300,\n            justifyContent: 'space-evenly',\n          }}\n        >\n          <FormControlLabel\n            value={true}\n            label={'Married'}\n            control={<Radio />}\n            onChange={(event) => {\n              setData({ ...data, married: event.target.value == 'true' ? true : false })\n            }}\n          />\n          <FormControlLabel\n            value={false}\n            control={<Radio />}\n            label={'Unmarried'}\n            onChange={(event) => {\n              setData({ ...data, married: event.target.value == 'true' ? true : false })\n            }}\n          />\n        </RadioGroup>\n      </CCol>\n      <CCol md={4}\n        style={{\n          display: data.married === true ? 'block' : 'none',\n          width: 300,\n          marginRight: 15,\n        }}\n      >\n        <CFormLabel>\n          Wedding Date\n        </CFormLabel>\n        <CFormInput\n          type=\"date\"\n          label=\"Wedding Date\"\n          margin=\"dense\"\n          variant=\"outlined\"\n          value={data.weddingdate}\n          onChange={(event) => setData({ ...data, weddingdate:event.target.value })}\n        />\n      </CCol>\n\n      <CCol>\n        <CFormLabel>\n          Email\n        </CFormLabel>\n        <CFormInput\n          name=\"emailid\"\n          placeholder='Enter Emailid'\n          margin=\"dense\"\n          label=\"Email ID\"\n          style={{ width: 300, marginRight: 15 }}\n          variant=\"outlined\"\n          onChange={(event) => setData({ ...data, emailid: event.target.value })}\n          value={data.emailid}\n          invalid={(!data.emailid || (data.emailid.includes('@') && data.emailid.includes('.com'))) ? false : true}\n        />\n        <CFormFeedback\n          invalid\n        >\n          Please input valid email address\n        </CFormFeedback>\n      </CCol>\n      <CCol>\n        <CFormLabel>\n          Mobile\n        </CFormLabel>\n        <CFormInput\n          name=\"mobile\"\n          style={{ width: 300, marginRight: 15 }}\n          label=\"Mobile\"\n          placeholder='Enter mobile number'\n          margin=\"dense\"\n          variant=\"outlined\"\n          value={data.mobile}\n          onChange={(event) => {\n            let patt = /[^0-9]/g\n            const ph = event.target.value.replace(patt, '')\n            setData({ ...data, mobile: ph.slice(0, 10) })\n          }}\n          required\n          invalid={(data.mobile.length === 10) ? false : true}\n        />\n        <CFormFeedback invalid>\n          Enter valid number\n        </CFormFeedback>\n      </CCol>\n\n\n\n      <CCol>\n        <CFormLabel>\n          Address\n        </CFormLabel>\n        <CFormTextarea\n          name=\"address\"\n          label=\"Address\"\n          placeholder='Enter address'\n          style={{ width: 300, marginRight: 15 }}\n          margin=\"dense\"\n          variant=\"outlined\"\n          value={data.address}\n          onChange={(event) => {\n            const str = event.target.value.split(',')\n            for (let i = 0; i < str.length; i++) {\n              str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1)\n            }\n            const address = str.join(',')\n            setData({ ...data, address: address })\n          }}\n          required\n          invalid={data.address ? false : true}\n        />\n        <CFormFeedback\n          invalid\n        >\n          Field is required\n        </CFormFeedback>\n      </CCol>\n      <CCol md={4}>\n        <CFormLabel>\n          Family head\n        </CFormLabel>\n        <CFormInput\n          name=\"familyhead\"\n          value={data.familyhead}\n          margin=\"dense\"\n          placeholder='Enter family head'\n          variant=\"outlined\"\n          label=\"Family Head\"\n          onChange={(event) => {\n            const str = event.target.value.split(' ')\n            for (let i = 0; i < str.length; i++) {\n              str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1)\n            }\n            const familyheadname = str.join(' ')\n            setData({ ...data, familyhead: familyheadname })\n          }}\n          required\n          invalid={data.familyhead ? false : true}\n          list='listforfamilyheads'\n        />\n        <datalist id='listforfamilyheads'>\n          {familyheads.map((f, key) => {\n            return (\n              <option key={key} >{f}</option>\n            )\n          })}\n        </datalist>\n        <CFormFeedback invalid>\n          Field is required\n        </CFormFeedback>\n      </CCol>\n      <CCol md={4}>\n        <CFormLabel>\n          Baptism\n        </CFormLabel>\n        <RadioGroup\n          row\n          aria-label=\"Baptizm\"\n          name=\"row-radio-buttons-group\"\n          style={{\n            width: 300,\n            justifyContent: 'space-evenly',\n          }}\n        >\n          <FormControlLabel\n            control={<Radio />}\n            value={true}\n            label={'Baptized'}\n            onChange={(event) =>\n              setData({ ...data, baptized: event.target.value == 'true' ? true : false })\n            }\n          />\n          <FormControlLabel\n            value={false}\n            control={<Radio />}\n            label={'Not Baptized'}\n            onChange={(event) =>\n              setData({ ...data, baptized: event.target.value == 'true' ? true : false })\n            }\n          />\n        </RadioGroup>\n      </CCol>\n      <CCol md={4}>\n        <CFormLabel>\n          Mobile type\n        </CFormLabel>\n        <RadioGroup\n          row\n          aria-label=\"mobile-type\"\n          name=\"row-radio-buttons-group\"\n          style={{\n            width: 300,\n            justifyContent: 'space-evenly',\n          }}\n        >\n          <FormControlLabel\n            label={'Android'}\n            value={true}\n            control={<Radio />}\n            onChange={(event) =>\n              setData({ ...data, android: event.target.value == 'true' ? true : false })\n            }\n          />\n          <FormControlLabel\n            label={'Normal'}\n            value={false}\n            control={<Radio />}\n            onChange={(event) =>\n              setData({ ...data, android: event.target.value == 'true' ? true : false })\n            }\n          />\n        </RadioGroup>\n      </CCol>\n\n      <CButton onClick={handleSubmit} >\n        Add to records\n      </CButton>\n    </CForm>\n  )\n}\n\nexport default Dataentry\n"]},"metadata":{},"sourceType":"module"}