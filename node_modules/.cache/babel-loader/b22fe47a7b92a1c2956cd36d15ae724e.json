{"ast":null,"code":"import _toConsumableArray from\"/home/david/Desktop/mydev/Church-Management/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/david/Desktop/mydev/Church-Management/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/david/Desktop/mydev/Church-Management/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from'react';import{url}from'../Constants';import{DataEntryForms}from'./DataEntryForm';import{jsx as _jsx}from\"react/jsx-runtime\";var Dataentry=function Dataentry(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),familyheads=_useState2[0],setFamilyheads=_useState2[1];var _useState3=useState({isOpen:false,message:'',variant:'filled',severity:'error'}),_useState4=_slicedToArray(_useState3,2),notify=_useState4[0],setNotify=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),validity=_useState6[0],setValidity=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),age=_useState8[0],setAge=_useState8[1];var _useState9=useState({Name:'',DOB:new Date(),Gender:'male',WeddingDate:'',EmailID:'',Mobile:'',Address:'',FamilyHead:'',FamilyID:'',SelfID:'',Android:false,Baptized:false,Married:false}),_useState10=_slicedToArray(_useState9,2),data=_useState10[0],setData=_useState10[1];useEffect(function(){var yearDifference=31536000000;setAge(String(parseInt((new Date().getTime()-new Date(data.DOB).getTime())/yearDifference).toString().replace(\"-\",\"\")));},[data.DOB]);var _useState11=useState(),_useState12=_slicedToArray(_useState11,2),validated=_useState12[0],setValidated=_useState12[1];var handleSubmit=function handleSubmit(event){var form=event.currentTarget;if(form.checkValidity()==false){// event.preventDefault()\nevent.stopPropagation();}else{setValidated(true);}};var addrecords=function addrecords(){if(validated){fetch(\"\".concat(url,\"/member_details.php\"),{method:'POST',headers:{Accept:'application/json','Content-Type':'application/json'},body:JSON.stringify({name:data.Name,dob:data.DOB,age:age,gender:data.Gender,married:data.Married==false?0:data.Married,weddingdate:data.WeddingDate,emailid:data.EmailID,mobile:data.Mobile,address:data.Address,familyhead:data.FamilyHead,baptized:data.Baptized==false?0:data.Baptized,android:data.Android==false?0:data.Android,familyid:data.FamilyID,selfid:data.SelfID})}).then(function(res){return res.json();}).then(function(result){setNotify(_objectSpread(_objectSpread({},notify),{},{isOpen:true,severity:result['status']==1?\"success\":\"error\",message:String(result['message'])}));setData({Name:'',DOB:new Date(),Gender:'male',WeddingDate:'',EmailID:'',Mobile:'',Address:'',FamilyHead:'',FamilyID:'',SelfID:'',Android:false,Baptized:false,Married:false});}).catch(function(error){console.error(error);});}else{setNotify(_objectSpread(_objectSpread({},notify),{},{isOpen:true,message:\"Input all required\"}));}};useEffect(function(){addrecords();setValidated(false);},[validated]);var searchfamilyhead=function searchfamilyhead(){fetch(\"\".concat(url,\"/searchfamilyhead.php\"),{method:'POST',headers:{Accept:'application/json','Content-Type':'application/json'}}).then(function(res){return res.json();}).then(function(result){var filteredresult=_toConsumableArray(new Set(result));setFamilyheads(filteredresult);}).catch(function(error){console.error(error);});};useEffect(function(){searchfamilyhead();},[validated]);return/*#__PURE__*/_jsx(DataEntryForms,{familyheads:familyheads,data:data,notify:notify,setNotify:setNotify,setData:setData,validated:validated,handleSubmit:handleSubmit});};export default Dataentry;","map":{"version":3,"sources":["/home/david/Desktop/mydev/Church-Management/src/views/Components/Dataentry.js"],"names":["useEffect","useState","url","DataEntryForms","Dataentry","familyheads","setFamilyheads","isOpen","message","variant","severity","notify","setNotify","validity","setValidity","age","setAge","Name","DOB","Date","Gender","WeddingDate","EmailID","Mobile","Address","FamilyHead","FamilyID","SelfID","Android","Baptized","Married","data","setData","yearDifference","String","parseInt","getTime","toString","replace","validated","setValidated","handleSubmit","event","form","currentTarget","checkValidity","stopPropagation","addrecords","fetch","method","headers","Accept","body","JSON","stringify","name","dob","gender","married","weddingdate","emailid","mobile","address","familyhead","baptized","android","familyid","selfid","then","res","json","result","catch","error","console","searchfamilyhead","filteredresult","Set"],"mappings":"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","sourcesContent":["\nimport { useEffect, useState } from 'react'\nimport { url } from '../Constants'\nimport { DataEntryForms } from './DataEntryForm'\n\n\nconst Dataentry = () => {\n  const [familyheads, setFamilyheads] = useState([]);\n  const [notify, setNotify] = useState({ isOpen: false, message: '', variant: 'filled', severity: 'error' });\n  const [validity, setValidity] = useState(true);\n  const [age, setAge] = useState();\n\n\n  const [data, setData] = useState({\n    Name: '',\n    DOB: new Date(),\n    Gender: 'male',\n    WeddingDate: '',\n    EmailID: '',\n    Mobile: '',\n    Address: '',\n    FamilyHead: '',\n    FamilyID: '',\n    SelfID: '',\n    Android: false,\n    Baptized: false,\n    Married: false,\n  })\n\n  useEffect(() => {\n\n\n    let yearDifference = 31536000000;\n    setAge(String(parseInt((new Date().getTime() - new Date(data.DOB).getTime()) / yearDifference).toString().replace(\"-\", \"\")));\n\n\n  }, [data.DOB])\n\n\n\n  const [validated, setValidated] = useState();\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget\n\n    if (form.checkValidity() == false) {\n      // event.preventDefault()\n\n      event.stopPropagation()\n\n    }\n    else {\n      setValidated(true);\n    }\n  }\n\n\n\n\n  const addrecords = () => {\n    if (validated) {\n\n      fetch(`${url}/member_details.php`, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: data.Name,\n          dob: data.DOB,\n          age: age,\n          gender: data.Gender,\n          married: data.Married==false?0:data.Married,\n          weddingdate: data.WeddingDate,\n          emailid: data.EmailID,\n          mobile: data.Mobile,\n          address: data.Address,\n          familyhead: data.FamilyHead,\n          baptized: data.Baptized==false?0:data.Baptized,\n          android: data.Android==false?0:data.Android,\n          familyid: data.FamilyID,\n          selfid: data.SelfID,\n        }),\n      })\n        .then((res) => res.json())\n        .then((result) => {\n          setNotify({\n            ...notify,\n            isOpen: true,\n            severity: result['status'] == 1 ? \"success\" : \"error\",\n            message: String(result['message'])\n          });\n          setData({\n            Name: '',\n            DOB: new Date(),\n            Gender: 'male',\n            WeddingDate: '',\n            EmailID: '',\n            Mobile: '',\n            Address: '',\n            FamilyHead: '',\n            FamilyID: '',\n            SelfID: '',\n            Android: false,\n            Baptized: false,\n            Married: false,\n          });\n\n        })\n        .catch((error) => {\n          console.error(error)\n        })\n    } else {\n      setNotify({\n        ...notify,\n        isOpen: true,\n        message: \"Input all required\"\n      })\n    }\n  }\n\n  useEffect(() => {\n    addrecords();\n    setValidated(false);\n  }, [validated])\n\n  const searchfamilyhead = () => {\n    fetch(`${url}/searchfamilyhead.php`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        let filteredresult = [...new Set(result)]\n        setFamilyheads(filteredresult)\n      })\n      .catch((error) => {\n        console.error(error)\n      })\n  }\n  useEffect(() => {\n    searchfamilyhead()\n  }, [validated])\n\n  return (\n    <DataEntryForms\n      familyheads={familyheads}\n      data={data}\n      notify={notify}\n      setNotify={setNotify}\n      setData={setData}\n      validated={validated}\n      handleSubmit={handleSubmit}\n    />\n  )\n}\n\nexport default Dataentry\n"]},"metadata":{},"sourceType":"module"}