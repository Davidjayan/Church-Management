{"ast":null,"code":"var _jsxFileName = \"/home/david/Desktop/mydev/coreui-free-react-admin-template/src/views/Components/Sub Components/Editaccounting.js\",\n    _s = $RefreshSig$();\n\nimport { CSpinner } from \"@coreui/react\";\nimport AddCircleOutline from \"@mui/icons-material/AddCircleOutline\";\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport { Autocomplete, Button, Grid, IconButton, MenuItem, Select, Table, TableCell, TableHead, TableRow, TextField, Typography } from \"@mui/material\";\nimport { string } from \"prop-types\";\nimport React, { useEffect, useState } from \"react\";\nimport { url } from \"../../Constants\";\nimport { AlertMessage } from \"../Support/AlertMessage\";\nimport { Datepicker } from \"../Support/Datepicker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Editaccounting = () => {\n  _s();\n\n  const [isLoading, Load] = useState(true);\n  const [click, setclick] = useState(0);\n  const [tempname, settempname] = useState('');\n  const [temptype, settemptype] = useState('');\n  const [tempamount, settempamount] = useState(0);\n  const [dateValue, setdateValue] = useState();\n  const [dateset, isDateset] = useState(false);\n  const [report, setOfferingReport] = useState([]);\n  const [denominationsAndTotals, setDenominationsandTotals] = useState([{\n    \"Date\": \"2021-10-18\",\n    \"ChurchOffering\": \"1680\",\n    \"TitheTotal\": \"720\",\n    \"OfferingTotal\": \"0\",\n    \"SpecialOfferingTotal\": \"0\",\n    \"BaptismofferingTotal\": \"0\",\n    \"BirthdayofferingTotal\": \"0\",\n    \"WeddingofferingTotal\": \"300\",\n    \"ChilddedicationofferingTotal\": \"0\",\n    \"CommittedofferingTotal\": \"0\",\n    \"MissionaryTotal\": \"500\",\n    \"BuildingFundTotal\": \"0\",\n    \"GrandTotal\": \"3200\",\n    \"TwoThousands\": \"1\",\n    \"FiveHundreds\": \"1\",\n    \"TwoHundreds\": \"3\",\n    \"Hundreds\": \"1\",\n    \"Fifty\": \"0\",\n    \"Twenty\": \"0\",\n    \"Ten\": \"0\",\n    \"Five\": \"0\",\n    \"Two\": \"0\",\n    \"One\": \"0\"\n  }]);\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: '',\n    variant: 'filled',\n    severity: 'error'\n  });\n  const arrOfferingTypes = [{\n    \"name\": \"Select\",\n    \"value\": \"\"\n  }, {\n    \"name\": \"Tithe\",\n    \"value\": \"Tithe\"\n  }, {\n    \"name\": \"Offering\",\n    \"value\": \"Offering\"\n  }, {\n    \"name\": \"Missionary\",\n    \"value\": \"Missionary\"\n  }, {\n    \"name\": \"Special Offering\",\n    \"value\": \"Special Offering\"\n  }, {\n    \"name\": \"Baptism Offering\",\n    \"value\": \"Baptism Offering\"\n  }, {\n    \"name\": \"Birthday Offering\",\n    \"value\": \"Birthday Offering\"\n  }, {\n    \"name\": \"Wedding Offering\",\n    \"value\": \"Wedding Offering\"\n  }, {\n    \"name\": \"Child Dedication Offering\",\n    \"value\": \"Child Dedication Offering\"\n  }, {\n    \"name\": \"Committed Offering\",\n    \"value\": \"Committed Offering\"\n  }, {\n    \"name\": \"Building Fund\",\n    \"value\": \"Building Fund\"\n  }];\n  const denoTypes = [{\n    \"name\": \"TwoThousands\",\n    \"value\": 2000\n  }, {\n    \"name\": \"FiveHundreds\",\n    \"value\": 500\n  }, {\n    \"name\": \"TwoHundreds\",\n    \"value\": 200\n  }, {\n    \"name\": \"Hundreds\",\n    \"value\": 100\n  }, {\n    \"name\": \"Fifty\",\n    \"value\": 50\n  }, {\n    \"name\": \"Twenty\",\n    \"value\": 20\n  }, {\n    \"name\": \"Ten\",\n    \"value\": 10\n  }, {\n    \"name\": \"Five\",\n    \"value\": 5\n  }, {\n    \"name\": \"Two\",\n    \"value\": 2\n  }, {\n    \"name\": \"One\",\n    \"value\": 1\n  }];\n\n  const fetchOfferingAndDenominationsByDate = () => {\n    fetch(\"\".concat(url, \"/Church-management-api/api/accounting-fetch.php\"), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        date: dateValue\n      })\n    }).then(res => res.json()).then(result => {\n      if (result.status !== 0) {\n        setOfferingReport(result.message[0]);\n        setDenominationsandTotals([result.message[1]]);\n        isDateset(true);\n        report.map((x, key) => {\n          setOfferingReport(currentPeople => currentPeople.map((p, l) => l === key ? { ...p,\n            OldType: p.Type\n          } : p));\n        });\n      } else {\n        setNotify({ ...notify,\n          isOpen: true,\n          message: result.message\n        });\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  let Total = isNaN(report.reduce((accumulator, item) => isNaN(accumulator) ? 0 : accumulator + parseFloat(item.Amount), 0)) ? 0 : report.reduce((accumulator, item) => isNaN(accumulator) ? 0 : accumulator + parseFloat(item.Amount), 0);\n  let grandTotal = 1 * denominationsAndTotals[0]['One'] + 2 * denominationsAndTotals[0]['Two'] + 5 * denominationsAndTotals[0]['Five'] + 10 * denominationsAndTotals[0]['Ten'] + 20 * denominationsAndTotals[0]['Twenty'] + 50 * denominationsAndTotals[0]['Fifty'] + 100 * denominationsAndTotals[0]['Hundreds'] + 200 * denominationsAndTotals[0]['TwoHundreds'] + 500 * denominationsAndTotals[0]['FiveHundreds'] + 2000 * denominationsAndTotals[0]['TwoThousands'];\n  let titheTotal = isNaN(report.reduce((accumulator, item) => item.Type === 'Tithe' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : report.reduce((accumulator, item) => item.Type === 'Tithe' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n  let offeringTotal = isNaN(report.reduce((accumulator, item) => item.Type === 'Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : report.reduce((accumulator, item) => item.Type === 'Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n  let missionaryTotal = isNaN(report.reduce((accumulator, item) => item.Type === 'Missionary' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : report.reduce((accumulator, item) => item.Type === 'Missionary' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n  let specialofferingTotal = isNaN(report.reduce((accumulator, item) => item.Type === 'Special Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : report.reduce((accumulator, item) => item.Type === 'Special Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n  let baptismofferingTotal = isNaN(report.reduce((accumulator, item) => item.Type === 'Baptism Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : report.reduce((accumulator, item) => item.Type === 'Baptism Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n  let birthdayofferingTotal = isNaN(report.reduce((accumulator, item) => item.Type === 'Birthday Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : report.reduce((accumulator, item) => item.Type === 'Birthday Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n  let weddingofferingTotal = isNaN(report.reduce((accumulator, item) => item.Type === 'Wedding Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : report.reduce((accumulator, item) => item.Type === 'Wedding Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n  let childdedicationofferingTotal = isNaN(report.reduce((accumulator, item) => item.Type === 'Child Dedication Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : report.reduce((accumulator, item) => item.Type === 'Child Dedication Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n  let committedofferingTotal = isNaN(report.reduce((accumulator, item) => item.Type === 'Committed Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : report.reduce((accumulator, item) => item.Type === 'Committed Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n  let buildingfundTotal = isNaN(report.reduce((accumulator, item) => item.Type === 'Building Fund' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : report.reduce((accumulator, item) => item.Type === 'Building Fund' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n  let churchOffering = grandTotal - Total;\n  let name = report.map(k => k.Name);\n  let type = report.map(k => k.Type);\n  let oldtype = report.map(k => k.OldType);\n  let amount = report.map(k => k.Amount);\n  const [names, setnames] = useState([]);\n  const [searchterm, setsearchterm] = useState();\n  const results = !searchterm ? names : names.filter(person => person.toLowerCase().includes(searchterm.toLocaleLowerCase()));\n\n  const searchapi = () => {\n    fetch(\"\".concat(url, \"/Church-management-api/api/searchname.php\"), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(result => {\n      setnames(result);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  useEffect(() => {\n    searchapi();\n  }, [1]);\n\n  const confirm = () => {\n    fetch(\"\".concat(url, \"/Church-management-api/api/edit-accounting.php\"), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        Name: name,\n        Type: type,\n        Amount: amount,\n        OldType: oldtype,\n        date: dateValue,\n        TwoThousands: denominationsAndTotals[0]['TwoThousands'],\n        FiveHundreds: denominationsAndTotals[0]['FiveHundreds'],\n        TwoHundreds: denominationsAndTotals[0]['TwoHundreds'],\n        Hundreds: denominationsAndTotals[0]['Hundreds'],\n        Fifty: denominationsAndTotals[0]['Fifty'],\n        Twenty: denominationsAndTotals[0]['Twenty'],\n        Ten: denominationsAndTotals[0]['Ten'],\n        Five: denominationsAndTotals[0]['Five'],\n        Two: denominationsAndTotals[0]['Two'],\n        One: denominationsAndTotals[0]['One'],\n        ChurchOffering: churchOffering,\n        TitheTotal: titheTotal,\n        OfferingTotal: offeringTotal,\n        SpecialOfferingTotal: specialofferingTotal,\n        BaptismofferingTotal: baptismofferingTotal,\n        BirthdayofferingTotal: birthdayofferingTotal,\n        WeddingofferingTotal: weddingofferingTotal,\n        ChilddedicationofferingTotal: childdedicationofferingTotal,\n        CommittedofferingTotal: committedofferingTotal,\n        MissionaryTotal: missionaryTotal,\n        BuildingFundTotal: buildingfundTotal,\n        GrandTotal: grandTotal\n      })\n    }).then(res => res.json()).then(result => {\n      setNotify({ ...notify,\n        severity: result.status == 0 ? \"error\" : \"success\",\n        isOpen: true,\n        message: result.message\n      });\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  const deleteRow = (delName, delType, key) => {\n    fetch(\"\".concat(url, \"/Church-management-api/api/accounting-delete-row.php\"), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        date: dateValue,\n        name: delName,\n        type: delType\n      })\n    }).then(res => res.json()).then(result => {\n      setNotify({ ...notify,\n        isOpen: true,\n        severity: result.status == 0 ? \"error\" : \"success\",\n        message: result.message\n      });\n\n      if (result.status == 1) {\n        setOfferingReport(currentPeople => currentPeople.filter((x, id) => id !== key));\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  const addnew = () => {\n    fetch(\"\".concat(url, \"/Church-management-api/api/accounting-add-new.php\"), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"Name\": tempname,\n        \"date\": dateValue,\n        \"Type\": temptype,\n        \"Amount\": tempamount\n      })\n    }).then(res => res.json()).then(result => {\n      setNotify({ ...notify,\n        isOpen: true,\n        severity: result.status == 0 ? \"error\" : \"success\",\n        message: result.message\n      });\n\n      if (result.status == 1) {\n        setOfferingReport(currentPeople => [...currentPeople, {\n          Name: tempname,\n          Type: temptype,\n          Amount: tempamount\n        }]);\n      }\n    }).catch(error => {\n      console.error(error);\n    }).then(() => {\n      settempamount('');\n      settempamount('');\n      settemptype('');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    style: {\n      display: \"grid\",\n      justifyContent: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(CSpinner, {\n      color: \"primary\",\n      variant: \"grow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(AlertMessage, {\n      notify: notify,\n      setNotify: setNotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(Datepicker, {\n        setValue: setdateValue,\n        value: dateValue,\n        label: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn2\",\n        onClick: () => {\n          fetchOfferingAndDenominationsByDate();\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      style: {\n        display: dateset ? \"block\" : \"none\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableRow, {\n          children: /*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: [\"REPORT ON \", new Date(dateValue).toLocaleDateString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 21\n        }, this), report.map((p, key) => {\n          return /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: p.Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                value: p.Type,\n                onChange: event => {\n                  const Type = event.target.value;\n                  setOfferingReport(currentPeople => currentPeople.map((x, l) => l === key ? { ...x,\n                    Type\n                  } : x));\n                },\n                children: arrOfferingTypes.map((val, key) => {\n                  return /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: val.value,\n                    children: val.name\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 356,\n                    columnNumber: 49\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                onChange: event => {\n                  const Am = event.target.value;\n                  let patt = /[^0-9]/g;\n                  const Amount = parseFloat(Am.replace(patt, ''));\n                  setOfferingReport(currentPeople => currentPeople.map((x, l) => l === key ? { ...x,\n                    Amount\n                  } : x));\n                },\n                value: p.Amount,\n                type: \"number\",\n                placeholder: \"Enter Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                style: {\n                  border: \"none\",\n                  cursor: \"pointer\"\n                },\n                onClick: () => {\n                  deleteRow(p.Name, p.Type, key);\n                },\n                children: /*#__PURE__*/_jsxDEV(DeleteOutlineIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 33\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 29\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(TableRow, {\n          children: /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              style: {\n                border: \"none\",\n                cursor: \"pointer\"\n              },\n              onClick: () => {\n                setclick(click + 1);\n              },\n              children: /*#__PURE__*/_jsxDEV(AddCircleOutline, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n          style: {\n            display: click === 0 ? \"none\" : \"\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              options: names,\n              value: tempname,\n              onChange: (e, v) => {\n                settempname(v);\n              },\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                placeholder: \"Enter Name\",\n                onChange: _ref => {\n                  let {\n                    target\n                  } = _ref;\n                  settempname(target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              value: temptype,\n              onChange: event => {\n                const Type = event.target.value;\n                settemptype(Type);\n              },\n              children: arrOfferingTypes.map((val, key) => {\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: val.value,\n                  children: val.name\n                }, key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 41\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              onChange: event => {\n                const Am = event.target.value;\n                let patt = /[^0-9]/g;\n                const Amount = parseFloat(Am.replace(patt, ''));\n                settempamount(Amount);\n              },\n              value: tempamount,\n              type: \"number\",\n              placeholder: \"Enter Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                if (tempname !== '' && temptype !== '') {\n                  addnew();\n                } else {\n                  setNotify({ ...notify,\n                    isOpen: true,\n                    message: \"Input all required\"\n                  });\n                }\n              },\n              children: \"Confirm Adding\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Church Offering\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: churchOffering\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: Total\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Grand Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: grandTotal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        children: [denoTypes.map((val, key) => {\n          let name = val.name;\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            container: true,\n            direction: \"row\",\n            alignItems: \"center\",\n            margin: 2,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              children: [val.value, \" x\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              value: denominationsAndTotals[0][val.name],\n              onChange: e => {\n                setDenominationsandTotals([...denominationsAndTotals], denominationsAndTotals[0][name] = e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"=\", val.value * parseFloat(denominationsAndTotals[0][name])]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 37\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 33\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            confirm();\n          },\n          variant: \"contained\",\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 305,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Editaccounting, \"topa5Kv/LfAqEYGqSc2beuFsybY=\");\n\n_c = Editaccounting;\nexport default Editaccounting;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editaccounting\");","map":{"version":3,"sources":["/home/david/Desktop/mydev/coreui-free-react-admin-template/src/views/Components/Sub Components/Editaccounting.js"],"names":["CSpinner","AddCircleOutline","DeleteOutlineIcon","Autocomplete","Button","Grid","IconButton","MenuItem","Select","Table","TableCell","TableHead","TableRow","TextField","Typography","string","React","useEffect","useState","url","AlertMessage","Datepicker","Editaccounting","isLoading","Load","click","setclick","tempname","settempname","temptype","settemptype","tempamount","settempamount","dateValue","setdateValue","dateset","isDateset","report","setOfferingReport","denominationsAndTotals","setDenominationsandTotals","notify","setNotify","isOpen","message","variant","severity","arrOfferingTypes","denoTypes","fetchOfferingAndDenominationsByDate","fetch","method","headers","body","JSON","stringify","date","then","res","json","result","status","map","x","key","currentPeople","p","l","OldType","Type","catch","error","console","Total","isNaN","reduce","accumulator","item","parseFloat","Amount","grandTotal","titheTotal","offeringTotal","missionaryTotal","specialofferingTotal","baptismofferingTotal","birthdayofferingTotal","weddingofferingTotal","childdedicationofferingTotal","committedofferingTotal","buildingfundTotal","churchOffering","name","k","Name","type","oldtype","amount","names","setnames","searchterm","setsearchterm","results","filter","person","toLowerCase","includes","toLocaleLowerCase","searchapi","confirm","TwoThousands","FiveHundreds","TwoHundreds","Hundreds","Fifty","Twenty","Ten","Five","Two","One","ChurchOffering","TitheTotal","OfferingTotal","SpecialOfferingTotal","BaptismofferingTotal","BirthdayofferingTotal","WeddingofferingTotal","ChilddedicationofferingTotal","CommittedofferingTotal","MissionaryTotal","BuildingFundTotal","GrandTotal","deleteRow","delName","delType","id","addnew","display","justifyContent","Date","toLocaleDateString","event","target","value","val","Am","patt","replace","border","cursor","e","v","params"],"mappings":"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","sourcesContent":["import { CSpinner } from \"@coreui/react\";\nimport AddCircleOutline from \"@mui/icons-material/AddCircleOutline\";\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport { Autocomplete, Button, Grid, IconButton, MenuItem, Select, Table, TableCell, TableHead, TableRow, TextField, Typography } from \"@mui/material\";\nimport { string } from \"prop-types\";\nimport React, { useEffect, useState } from \"react\";\nimport { url } from \"../../Constants\";\nimport { AlertMessage } from \"../Support/AlertMessage\";\nimport { Datepicker } from \"../Support/Datepicker\";\n\nconst Editaccounting = () => {\n    const [isLoading,Load]=useState(true);\n    const [click, setclick] = useState(0);\n    const [tempname, settempname] = useState('');\n    const [temptype, settemptype] = useState('');\n    const [tempamount, settempamount] = useState(0);\n    const [dateValue, setdateValue] = useState();\n    const [dateset, isDateset] = useState(false);\n    const [report, setOfferingReport] = useState([]);\n    const [denominationsAndTotals, setDenominationsandTotals] = useState(\n        [{\n            \"Date\": \"2021-10-18\",\n            \"ChurchOffering\": \"1680\",\n            \"TitheTotal\": \"720\",\n            \"OfferingTotal\": \"0\",\n            \"SpecialOfferingTotal\": \"0\",\n            \"BaptismofferingTotal\": \"0\",\n            \"BirthdayofferingTotal\": \"0\",\n            \"WeddingofferingTotal\": \"300\",\n            \"ChilddedicationofferingTotal\": \"0\",\n            \"CommittedofferingTotal\": \"0\",\n            \"MissionaryTotal\": \"500\",\n            \"BuildingFundTotal\": \"0\",\n            \"GrandTotal\": \"3200\",\n            \"TwoThousands\": \"1\",\n            \"FiveHundreds\": \"1\",\n            \"TwoHundreds\": \"3\",\n            \"Hundreds\": \"1\",\n            \"Fifty\": \"0\",\n            \"Twenty\": \"0\",\n            \"Ten\": \"0\",\n            \"Five\": \"0\",\n            \"Two\": \"0\",\n            \"One\": \"0\"\n        }]\n    );\n    const [notify, setNotify] = useState({ isOpen: false, message: '', variant: 'filled', severity: 'error' });\n    const arrOfferingTypes = [\n        { \"name\": \"Select\", \"value\": \"\" },\n        { \"name\": \"Tithe\", \"value\": \"Tithe\" },\n        { \"name\": \"Offering\", \"value\": \"Offering\" },\n        { \"name\": \"Missionary\", \"value\": \"Missionary\" },\n        { \"name\": \"Special Offering\", \"value\": \"Special Offering\" },\n        { \"name\": \"Baptism Offering\", \"value\": \"Baptism Offering\" },\n        { \"name\": \"Birthday Offering\", \"value\": \"Birthday Offering\" },\n        { \"name\": \"Wedding Offering\", \"value\": \"Wedding Offering\" },\n        { \"name\": \"Child Dedication Offering\", \"value\": \"Child Dedication Offering\" },\n        { \"name\": \"Committed Offering\", \"value\": \"Committed Offering\" },\n        { \"name\": \"Building Fund\", \"value\": \"Building Fund\" }\n    ]\n\n    const denoTypes = [\n        { \"name\": \"TwoThousands\", \"value\": 2000 },\n        { \"name\": \"FiveHundreds\", \"value\": 500 },\n        { \"name\": \"TwoHundreds\", \"value\": 200 },\n        { \"name\": \"Hundreds\", \"value\": 100 },\n        { \"name\": \"Fifty\", \"value\": 50 },\n        { \"name\": \"Twenty\", \"value\": 20 },\n        { \"name\": \"Ten\", \"value\": 10 },\n        { \"name\": \"Five\", \"value\": 5 },\n        { \"name\": \"Two\", \"value\": 2 },\n        { \"name\": \"One\", \"value\": 1 }\n    ]\n    const fetchOfferingAndDenominationsByDate = () => {\n        fetch(`${url}/Church-management-api/api/accounting-fetch.php`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n\n            },\n            body: JSON.stringify({\n                date: dateValue\n            })\n        })\n            .then(res => res.json())\n            .then((result) => {\n                if (result.status !== 0) {\n                    setOfferingReport(result.message[0]);\n                    setDenominationsandTotals([result.message[1]]);\n\n\n                    isDateset(true);\n                    report.map((x, key) => {\n                        setOfferingReport((currentPeople) => currentPeople.map((p, l) => l === key ? {\n                            ...p,\n                            OldType: p.Type,\n                        } : p));\n                    })\n                }\n                else {\n                    setNotify({\n                        ...notify,\n                        isOpen: true,\n                        message: result.message\n                    })\n                }\n\n\n            }).catch((error) => {\n                console.error(error);\n            })\n    }\n\n\n\n\n\n    let Total = isNaN(report.reduce((accumulator, item) => isNaN(accumulator) ? 0 : accumulator + parseFloat(item.Amount), 0)) ? 0 : report.reduce((accumulator, item) => isNaN(accumulator) ? 0 : accumulator + parseFloat(item.Amount), 0);\n\n    let grandTotal = (1 * denominationsAndTotals[0]['One']) + (2 * denominationsAndTotals[0]['Two']) + (5 * denominationsAndTotals[0]['Five']) + (10 * denominationsAndTotals[0]['Ten']) + (20 * denominationsAndTotals[0]['Twenty']) + (50 * denominationsAndTotals[0]['Fifty']) + (100 * denominationsAndTotals[0]['Hundreds']) + (200 * denominationsAndTotals[0]['TwoHundreds']) + (500 * denominationsAndTotals[0]['FiveHundreds']) + (2000 * denominationsAndTotals[0]['TwoThousands']);\n\n    let titheTotal = isNaN(report.reduce((accumulator, item) => item.Type === 'Tithe' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : report.reduce((accumulator, item) => item.Type === 'Tithe' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n    let offeringTotal = isNaN(report.reduce((accumulator, item) => item.Type === 'Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : report.reduce((accumulator, item) => item.Type === 'Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n    let missionaryTotal = isNaN(report.reduce((accumulator, item) => item.Type === 'Missionary' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : report.reduce((accumulator, item) => item.Type === 'Missionary' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n    let specialofferingTotal = isNaN(report.reduce((accumulator, item) => item.Type === 'Special Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : report.reduce((accumulator, item) => item.Type === 'Special Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n    let baptismofferingTotal = isNaN(report.reduce((accumulator, item) => item.Type === 'Baptism Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : report.reduce((accumulator, item) => item.Type === 'Baptism Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n    let birthdayofferingTotal = isNaN(report.reduce((accumulator, item) => item.Type === 'Birthday Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : report.reduce((accumulator, item) => item.Type === 'Birthday Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n    let weddingofferingTotal = isNaN(report.reduce((accumulator, item) => item.Type === 'Wedding Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : report.reduce((accumulator, item) => item.Type === 'Wedding Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n    let childdedicationofferingTotal = isNaN(report.reduce((accumulator, item) => item.Type === 'Child Dedication Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : report.reduce((accumulator, item) => item.Type === 'Child Dedication Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n    let committedofferingTotal = isNaN(report.reduce((accumulator, item) => item.Type === 'Committed Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : report.reduce((accumulator, item) => item.Type === 'Committed Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n    let buildingfundTotal = isNaN(report.reduce((accumulator, item) => item.Type === 'Building Fund' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : report.reduce((accumulator, item) => item.Type === 'Building Fund' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n    let churchOffering = grandTotal - Total;\n\n    let name = report.map((k) => k.Name);\n\n    let type = report.map((k) => k.Type);\n\n    let oldtype = report.map((k) => k.OldType);\n\n    let amount = report.map((k) => k.Amount);\n    const [names, setnames] = useState([]);\n\n    const [searchterm, setsearchterm] = useState();\n\n    const results = !searchterm ? names : names.filter(person => person.toLowerCase().includes(searchterm.toLocaleLowerCase()));\n    const searchapi = () => {\n        fetch(`${url}/Church-management-api/api/searchname.php`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n\n            },\n        })\n            .then(res => res.json())\n            .then((result) => {\n                setnames(result);\n            }).catch((error) => {\n                console.error(error);\n            });\n    }\n    useEffect(() => {\n        searchapi();\n    }, [1])\n    const confirm = () => {\n\n\n        fetch(`${url}/Church-management-api/api/edit-accounting.php`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n\n            },\n            body: JSON.stringify({\n                Name: name,\n                Type: type,\n                Amount: amount,\n                OldType: oldtype,\n                date: dateValue,\n                TwoThousands: denominationsAndTotals[0]['TwoThousands'],\n                FiveHundreds: denominationsAndTotals[0]['FiveHundreds'],\n                TwoHundreds: denominationsAndTotals[0]['TwoHundreds'],\n                Hundreds: denominationsAndTotals[0]['Hundreds'],\n                Fifty: denominationsAndTotals[0]['Fifty'],\n                Twenty: denominationsAndTotals[0]['Twenty'],\n                Ten: denominationsAndTotals[0]['Ten'],\n                Five: denominationsAndTotals[0]['Five'],\n                Two: denominationsAndTotals[0]['Two'],\n                One: denominationsAndTotals[0]['One'],\n                ChurchOffering: churchOffering,\n                TitheTotal: titheTotal,\n                OfferingTotal: offeringTotal,\n                SpecialOfferingTotal: specialofferingTotal,\n                BaptismofferingTotal: baptismofferingTotal,\n                BirthdayofferingTotal: birthdayofferingTotal,\n                WeddingofferingTotal: weddingofferingTotal,\n                ChilddedicationofferingTotal: childdedicationofferingTotal,\n                CommittedofferingTotal: committedofferingTotal,\n                MissionaryTotal: missionaryTotal,\n                BuildingFundTotal: buildingfundTotal,\n                GrandTotal: grandTotal\n\n            })\n        })\n            .then(res => res.json())\n            .then((result) => {\n                    setNotify({\n                        ...notify,\n                        severity:result.status==0?\"error\":\"success\",\n                        isOpen: true,\n                        message: result.message\n                    })\n\n            }).catch((error) => {\n                console.error(error);\n            });\n\n    }\n    const deleteRow = (delName, delType,key) => {\n        fetch(`${url}/Church-management-api/api/accounting-delete-row.php`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n\n            },\n            body: JSON.stringify({\n                date: dateValue,\n                name: delName,\n                type: delType\n\n            })\n        })\n        .then(res => res.json())\n        .then((result)=>{\n            setNotify({\n                ...notify,\n                isOpen:true,\n                severity:result.status==0?\"error\":\"success\",\n                message:result.message\n            });\n            if(result.status==1){\n                setOfferingReport(currentPeople => currentPeople.filter((x, id) => id !== key));\n            }\n        })\n        .catch((error) => {\n            console.error(error);\n        })\n    }\n    const addnew = () => {\n        fetch(`${url}/Church-management-api/api/accounting-add-new.php`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n\n            },\n            body: JSON.stringify({\n                \"Name\": tempname,\n                \"date\": dateValue,\n                \"Type\": temptype,\n                \"Amount\": tempamount\n\n            })\n        })\n            .then(res => res.json())\n            .then((result) => {\n                    setNotify({\n                        ...notify,\n                        isOpen:true,\n                        severity:result.status==0?\"error\":\"success\",\n                        message: result.message\n                    });\n                    if(result.status==1){\n                        setOfferingReport(currentPeople => [...currentPeople, {\n                            Name: tempname,\n                            Type: temptype,\n                            Amount: tempamount,\n                        }]);\n                    }\n            })\n            .catch((error) => {\n                console.error(error);\n            }).then(()=>{\n                \n                settempamount('');\n                settempamount('');\n                settemptype('');\n            })\n    }\n\n    return (\n        <Grid style={{ display: \"grid\", justifyContent: \"center\" }} >\n           <CSpinner color=\"primary\" variant=\"grow\"/>\n            <AlertMessage\n                notify={notify}\n                setNotify={setNotify}\n            />\n            <Grid>\n                <Datepicker\n                    setValue={setdateValue}\n                    value={dateValue}\n                    label='Date'\n                />\n                <Button className=\"btn2\" onClick={() => {\n                    fetchOfferingAndDenominationsByDate();\n                }} >Submit</Button>\n            </Grid>\n            <Grid style={{ display: dateset ? \"block\" : \"none\" }} >\n\n                <Table>\n                    <TableRow>\n                        <TableHead>\n                            <TableCell>\n                                <Typography>\n                                    REPORT ON {new Date(dateValue).toLocaleDateString()}\n                                </Typography>\n                            </TableCell>\n                        </TableHead>\n                    </TableRow>\n\n\n\n                    {report.map((p, key) => {\n                        return (\n                            <TableRow key={key} >\n                                <TableCell>\n                                    <p>{p.Name}</p>\n                                </TableCell>\n\n\n                                <TableCell>\n                                    <Select value={p.Type}\n                                        onChange={(event) => {\n                                            const Type = event.target.value;\n                                            setOfferingReport((currentPeople) => currentPeople.map((x, l) => l === key ? {\n                                                ...x,\n                                                Type\n                                            } : x));\n\n                                        }} >\n                                        {arrOfferingTypes.map((val, key) => {\n                                            return (\n                                                <MenuItem\n                                                    value={val.value}\n                                                    key={key}\n                                                >\n                                                    {val.name}\n                                                </MenuItem>\n                                            )\n                                        })}\n                                    </Select>\n                                </TableCell>\n                                <TableCell><TextField onChange={(event) => {\n                                    const Am = event.target.value;\n                                    let patt = /[^0-9]/g;\n                                    const Amount = parseFloat(Am.replace(patt, ''));\n                                    setOfferingReport((currentPeople) => currentPeople.map((x, l) => l === key ? {\n                                        ...x,\n                                        Amount\n                                    } : x));\n                                }}\n                                    value={p.Amount}\n                                    type=\"number\"\n                                    placeholder=\"Enter Amount\" /></TableCell>\n                                <TableCell>\n                                    <IconButton\n                                        style={{ border: \"none\", cursor: \"pointer\" }}\n                                        onClick={\n                                            () => {\n                                                \n                                                deleteRow(p.Name, p.Type,key);\n\n                                            }\n                                        }>\n                                        <DeleteOutlineIcon />\n                                    </IconButton>\n                                </TableCell>\n\n                            </TableRow>\n                        )\n                    })}\n\n\n                    <TableRow>\n\n                        <TableCell>\n                            <IconButton\n                                style={{ border: \"none\", cursor: \"pointer\" }}\n                                onClick={() => {\n                                    setclick(click + 1);\n\n                                }}\n                            >\n                                <AddCircleOutline />\n                            </IconButton>\n                        </TableCell>\n\n                    </TableRow>\n                    <TableRow style={{ display: click === 0 ? \"none\" : \"\" }} >\n                        <TableCell>\n                            <Autocomplete\n                                options={names}\n                                value={tempname}\n                                onChange={(e,v)=>{\n                                    settempname(v)\n                                }}\n                                renderInput={(params) =>\n                                    <TextField\n                                        {...params}\n                                        placeholder=\"Enter Name\"\n                                        onChange={({target})=>{\n                                            settempname(target.value)\n                                        }}\n                                    />\n                                }\n                            />\n\n\n                        </TableCell>\n                        <TableCell>\n                            <Select\n                                value={temptype}\n                                onChange={(event) => {\n                                    const Type = event.target.value;\n                                    settemptype(Type);\n\n                                }} >\n                                {arrOfferingTypes.map((val, key) => {\n                                    return (\n                                        <MenuItem\n                                            key={key}\n                                            value={val.value}\n                                        >\n                                            {val.name}\n                                        </MenuItem>\n                                    )\n                                })}\n                            </Select>\n\n                        </TableCell>\n                        <TableCell>\n                            <TextField\n                                onChange={(event) => {\n                                    const Am = event.target.value;\n                                    let patt = /[^0-9]/g;\n                                    const Amount = parseFloat(Am.replace(patt, ''));\n                                    settempamount(Amount);\n                                }}\n                                value={tempamount}\n                                type=\"number\"\n                                placeholder=\"Enter Amount\" />\n                        </TableCell>\n                        <TableCell>\n                            <Button\n                                onClick={() => {\n                                    if(tempname!=='' && temptype!==''){\n                                        addnew();\n                                    }\n                                    else{\n                                        setNotify({\n                                            ...notify,\n                                            isOpen:true,\n                                            message:\"Input all required\"\n                                        })\n                                    }\n\n\n                                }}\n                            >\n                                Confirm Adding\n                            </Button>\n                        </TableCell>\n\n                    </TableRow>\n\n                    <TableRow>\n                        <TableCell></TableCell>\n                        <TableCell>\n                            <Typography>\n                                Church Offering\n                            </Typography>\n                        </TableCell>\n                        <TableCell>\n                            {churchOffering}\n                        </TableCell>\n\n                    </TableRow>\n\n\n                    <TableRow>\n                        <TableCell></TableCell>\n                        <TableCell>\n                            <Typography>\n                                Total\n                            </Typography>\n                        </TableCell>\n                        <TableCell>\n                            {Total}\n                        </TableCell>\n\n                    </TableRow>\n\n\n                    <TableRow>\n                        <TableCell></TableCell>\n                        <TableCell>\n                            Grand Total\n                        </TableCell>\n                        <TableCell>\n                            {grandTotal}\n                        </TableCell>\n\n                    </TableRow>\n\n\n\n                </Table>\n\n\n\n                <Grid>\n\n                    {\n                        denoTypes.map((val, key) => {\n                            let name = val.name\n                            return (\n                                <Grid\n                                    item\n                                    container\n                                    key={key}\n                                    direction={\"row\"}\n                                    alignItems={\"center\"}\n                                    margin={2}\n                                >\n                                    <Typography>\n                                        {val.value} x\n                                    </Typography>\n                                    <TextField\n                                        value={denominationsAndTotals[0][val.name]}\n                                        onChange={(e) => {\n                                            setDenominationsandTotals([...denominationsAndTotals],denominationsAndTotals[0][name]=e.target.value)\n                                        }}\n\n                                    />\n                                    <Typography>\n                                        ={val.value * (parseFloat(denominationsAndTotals[0][name]))}\n                                    </Typography>\n                                </Grid>\n                            )\n                        })\n                    }\n\n                    <Button\n                        onClick={() => { confirm() }}\n                        variant=\"contained\"\n                    >\n                        Confirm\n                    </Button>\n                </Grid>\n\n            </Grid>\n\n        </Grid>\n    )\n}\n\nexport default Editaccounting;"]},"metadata":{},"sourceType":"module"}