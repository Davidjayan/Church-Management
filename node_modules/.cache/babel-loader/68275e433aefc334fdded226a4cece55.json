{"ast":null,"code":"var _jsxFileName = \"/home/david/Desktop/mydev/Church-Management/src/Components/YoutubeID.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport '../assets/youtubeids.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst YoutubeID = () => {\n  _s();\n\n  const [links, setlinks] = useState([{\n    sno: 1,\n    id: ''\n  }]);\n  const [count, setcount] = useState(2);\n  let id = links.map(k => k.id);\n\n  const submit = () => {\n    fetch(`${url}/jehovanissi/backend/apis/youtubeid.php`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: id\n      })\n    }).then(res => res.json()).then(result => {\n      alert(result);\n      window.location.reload();\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"yout-body\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: () => {\n        setlinks(currentPeople => [...currentPeople, {\n          sno: count,\n          id: ''\n        }]);\n        setcount(count + 1);\n      },\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 20\n    }, this), links.map(k => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: event => {\n            const temp = event.target.value;\n            const id = temp.slice(17);\n            setlinks(currentPeople => currentPeople.map(x => x.sno === k.sno ? { ...x,\n              id\n            } : x));\n          },\n          placeholder: \"Enter the link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => {\n            setlinks(currentPeople => currentPeople.filter(x => x.sno !== k.sno));\n            setcount(count - 1);\n          },\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 33\n        }, this)]\n      }, k.sno, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 29\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => submit(),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 13\n  }, this);\n};\n\n_s(YoutubeID, \"XYU+7ZU6T87PDwexu2+SdIa0TQM=\");\n\n_c = YoutubeID;\nexport default YoutubeID;\n\nvar _c;\n\n$RefreshReg$(_c, \"YoutubeID\");","map":{"version":3,"sources":["/home/david/Desktop/mydev/Church-Management/src/Components/YoutubeID.js"],"names":["React","useState","YoutubeID","links","setlinks","sno","id","count","setcount","map","k","submit","fetch","url","method","headers","body","JSON","stringify","then","res","json","result","alert","window","location","reload","catch","error","console","currentPeople","event","temp","target","value","slice","x","filter"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport '../assets/youtubeids.css';\n\nconst YoutubeID = () =>{\n    const [links,setlinks]=useState([{sno:1,id:''}]);\n    const [count,setcount] =useState(2);\n\n    let id = links.map((k)=>k.id);\n\n    const submit = () =>{\n            fetch(`${url}/jehovanissi/backend/apis/youtubeid.php`,{\n            method:'POST',\n            headers:{\n              'Accept' : 'application/json', \n              'Content-Type' : 'application/json',\n              \n            },\n            body:JSON.stringify({\n                id:id\n              \n            })\n          })\n            .then(res => res.json())\n            .then((result) => {\n                  alert(result);\n                  window.location.reload();\n              }).catch((error)=>{\n                console.error(error);\n              });\n\n        }   \n            \n        \n     \n    \n    return(\n            <div className=\"yout-body\">\n                   \n                   <button className=\"btn\" onClick={()=>{\n                          setlinks(currentPeople=>[...currentPeople,{\n                              sno:count,\n                              id:''\n                          }]);setcount(count+1);\n                      }} >Add</button>\n                    {links.map((k)=>{\n                        return(\n                            <div key={k.sno}>\n                                <input onChange={(event)=>{\n                                const temp = event.target.value;\n                                const id = temp.slice(17);\n                                setlinks((currentPeople)=>currentPeople.map(x=>x.sno===k.sno?{\n                                    ...x,\n                                    id\n                                }:x));\n                            }}  placeholder=\"Enter the link\"></input> \n\n                                <button className=\"btn\" onClick={\n                        ()=>{\n                            setlinks(currentPeople=>currentPeople.filter(x=>x.sno!==k.sno));setcount(count-1)\n                        }\n                    }>Remove</button>\n\n                                </div>\n                        )\n                    })}\n                    \n        <div><button  className=\"btn\"onClick={()=>submit()}>Submit</button>\n                      \n\n        </div>\n        </div>\n    )\n}\n\nexport default YoutubeID;"]},"metadata":{},"sourceType":"module"}