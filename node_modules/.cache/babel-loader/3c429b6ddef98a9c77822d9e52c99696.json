{"ast":null,"code":"import _toConsumableArray from\"/home/david/Desktop/mydev/Church-Management/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/david/Desktop/mydev/Church-Management/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/david/Desktop/mydev/Church-Management/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import DeleteSweepIcon from'@mui/icons-material/DeleteSweep';import{Button,Grid,IconButton,TextField,Typography}from'@mui/material';import React,{useState}from'react';import{url}from'../Constants';import{AlertMessage}from'./Support/AlertMessage';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var YoutubeID=function YoutubeID(){var _useState=useState([{sno:1,id:''}]),_useState2=_slicedToArray(_useState,2),links=_useState2[0],setlinks=_useState2[1];var _useState3=useState(2),_useState4=_slicedToArray(_useState3,2),count=_useState4[0],setcount=_useState4[1];var _useState5=useState({isOpen:false,message:'',variant:'filled',severity:'error'}),_useState6=_slicedToArray(_useState5,2),notify=_useState6[0],setNotify=_useState6[1];var id=links.map(function(k){return k.id;});var submit=function submit(){fetch(\"\".concat(url,\"/youtubeid.php\"),{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({id:id})}).then(function(res){return res.json();}).then(function(result){setNotify(_objectSpread(_objectSpread({},notify),{},{isOpen:true,message:result}));window.location.reload();}).catch(function(error){console.error(error);});};return/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"column\",alignContent:\"flex-start\",children:[/*#__PURE__*/_jsx(AlertMessage,{notify:notify,setNotify:setNotify}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(){setlinks(function(currentPeople){return[].concat(_toConsumableArray(currentPeople),[{sno:count,id:''}]);});setcount(count+1);},children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Add New\"})}),links.map(function(k){return/*#__PURE__*/_jsxs(Grid,{item:true,container:true,justifyItems:\"center\",justifyContent:\"center\",children:[/*#__PURE__*/_jsx(TextField,{margin:\"dense\",onChange:function onChange(event){var temp=event.target.value;var id=temp.slice(17);setlinks(function(currentPeople){return currentPeople.map(function(x){return x.sno===k.sno?_objectSpread(_objectSpread({},x),{},{id:id}):x;});});},placeholder:\"Enter the link\"},k.sno),/*#__PURE__*/_jsx(IconButton,{variant:\"contained\",onClick:function onClick(){setlinks(function(currentPeople){return currentPeople.filter(function(x){return x.sno!==k.sno;});});setcount(count-1);},children:/*#__PURE__*/_jsx(DeleteSweepIcon,{})})]},k.sno);}),/*#__PURE__*/_jsx(Grid,{item:true,container:true,justifyContent:\"center\",justifyItems:\"center\",alignContent:\"center\",alignItems:\"center\",children:/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return submit();},children:\"Submit\"})})]});};export default YoutubeID;","map":{"version":3,"sources":["/home/david/Desktop/mydev/Church-Management/src/views/Components/YoutubeID.js"],"names":["DeleteSweepIcon","Button","Grid","IconButton","TextField","Typography","React","useState","url","AlertMessage","YoutubeID","sno","id","links","setlinks","count","setcount","isOpen","message","variant","severity","notify","setNotify","map","k","submit","fetch","method","headers","body","JSON","stringify","then","res","json","result","window","location","reload","catch","error","console","currentPeople","event","temp","target","value","slice","x","filter"],"mappings":"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","sourcesContent":["import DeleteSweepIcon from '@mui/icons-material/DeleteSweep';\nimport { Button, Grid, IconButton, TextField, Typography } from '@mui/material';\nimport React, { useState } from 'react';\nimport { url } from '../Constants';\nimport { AlertMessage } from './Support/AlertMessage';\n\n\nconst YoutubeID = () => {\n    const [links, setlinks] = useState([{ sno: 1, id: '' }]);\n    const [count, setcount] = useState(2);\n    const [notify, setNotify] = useState({ isOpen: false, message: '', variant: 'filled', severity: 'error' });\n\n    let id = links.map((k) => k.id);\n\n    const submit = () => {\n        fetch(`${url}/youtubeid.php`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n\n            },\n            body: JSON.stringify({\n                id: id\n\n            })\n        })\n            .then(res => res.json())\n            .then((result) => {\n                setNotify({\n                    ...notify,\n                    isOpen:true,\n                    message:result\n                })\n                window.location.reload();\n            }).catch((error) => {\n                console.error(error);\n            });\n\n    }\n\n\n\n\n    return (\n        <Grid\n            container\n            direction={\"column\"}\n            alignContent={\"flex-start\"}\n        >\n            <AlertMessage\n            notify={notify}\n            setNotify={setNotify}\n            />\n            <Button\n                onClick={() => {\n                    setlinks(currentPeople => [...currentPeople, {\n                        sno: count,\n                        id: ''\n                    }]); setcount(count + 1);\n                }} >\n                <Typography\n                    variant='h6'\n                >\n                    Add New\n                </Typography>\n            </Button>\n\n            {links.map((k) => {\n                return (\n                    <Grid\n                        key={k.sno}\n                        item\n                        container\n                        justifyItems={\"center\"}\n                        justifyContent={\"center\"}\n                    >\n                        <TextField\n                            margin=\"dense\"\n                            key={k.sno}\n                            onChange={(event) => {\n                                const temp = event.target.value;\n                                const id = temp.slice(17);\n                                setlinks((currentPeople) => currentPeople.map(x => x.sno === k.sno ? {\n                                    ...x,\n                                    id\n                                } : x));\n                            }} placeholder=\"Enter the link\" />\n\n                        <IconButton variant=\"contained\" onClick={\n                            () => {\n                                setlinks(currentPeople => currentPeople.filter(x => x.sno !== k.sno)); setcount(count - 1)\n                            }\n                        }><DeleteSweepIcon />\n                        </IconButton>\n                    </Grid>\n\n                )\n            })}\n            <Grid\n                item\n                container\n                justifyContent={\"center\"}\n                justifyItems={\"center\"}\n                alignContent={\"center\"}\n                alignItems={\"center\"}\n            >\n                <Button onClick={() => submit()}>Submit</Button>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default YoutubeID;"]},"metadata":{},"sourceType":"module"}