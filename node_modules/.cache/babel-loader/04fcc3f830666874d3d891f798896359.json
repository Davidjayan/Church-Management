{"ast":null,"code":"var _jsxFileName = \"/home/david/Desktop/mydev/coreui-free-react-admin-template/src/views/Components/Sub Components/Editaccounting.js\",\n    _s = $RefreshSig$();\n\nimport AddCircleOutline from \"@mui/icons-material/AddCircleOutline\";\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport { Autocomplete, Button, Grid, IconButton, MenuItem, Select, Table, TableCell, TableHead, TableRow, TextField, Typography } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { url } from \"../../Constants\";\nimport { AlertMessage } from \"../Support/AlertMessage\";\nimport { Datepicker } from \"../Support/Datepicker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Editaccounting = props => {\n  _s();\n\n  const {\n    setLoading\n  } = props;\n  const [Total, setTotal] = useState();\n  const [click, setclick] = useState(0);\n  const [tempname, settempname] = useState('');\n  const [temptype, settemptype] = useState('');\n  const [tempamount, settempamount] = useState(0);\n  const [dateValue, setdateValue] = useState('2021-18-10');\n  const [dateset, isDateset] = useState(false);\n  const [report, setOfferingReport] = useState([]);\n  let test = [];\n  const [denominationsAndTotals, setDenominationsandTotals] = useState([{\n    \"Date\": \"2021-10-18\",\n    \"ChurchOffering\": \"1680\",\n    \"TitheTotal\": \"720\",\n    \"OfferingTotal\": \"0\",\n    \"SpecialOfferingTotal\": \"0\",\n    \"BaptismofferingTotal\": \"0\",\n    \"BirthdayofferingTotal\": \"0\",\n    \"WeddingofferingTotal\": \"300\",\n    \"ChilddedicationofferingTotal\": \"0\",\n    \"CommittedofferingTotal\": \"0\",\n    \"MissionaryTotal\": \"500\",\n    \"BuildingFundTotal\": \"0\",\n    \"GrandTotal\": \"3200\",\n    \"TwoThousands\": \"1\",\n    \"FiveHundreds\": \"1\",\n    \"TwoHundreds\": \"3\",\n    \"Hundreds\": \"1\",\n    \"Fifty\": \"0\",\n    \"Twenty\": \"0\",\n    \"Ten\": \"0\",\n    \"Five\": \"0\",\n    \"Two\": \"0\",\n    \"One\": \"0\"\n  }]);\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: '',\n    variant: 'filled',\n    severity: 'error'\n  });\n  const arrOfferingTypes = [{\n    \"name\": \"Select\",\n    \"value\": \"\"\n  }, {\n    \"name\": \"Tithe\",\n    \"value\": \"Tithe\"\n  }, {\n    \"name\": \"Offering\",\n    \"value\": \"Offering\"\n  }, {\n    \"name\": \"Missionary\",\n    \"value\": \"Missionary\"\n  }, {\n    \"name\": \"Special Offering\",\n    \"value\": \"Special Offering\"\n  }, {\n    \"name\": \"Baptism Offering\",\n    \"value\": \"Baptism Offering\"\n  }, {\n    \"name\": \"Birthday Offering\",\n    \"value\": \"Birthday Offering\"\n  }, {\n    \"name\": \"Wedding Offering\",\n    \"value\": \"Wedding Offering\"\n  }, {\n    \"name\": \"Child Dedication Offering\",\n    \"value\": \"Child Dedication Offering\"\n  }, {\n    \"name\": \"Committed Offering\",\n    \"value\": \"Committed Offering\"\n  }, {\n    \"name\": \"Building Fund\",\n    \"value\": \"Building Fund\"\n  }];\n  const denoTypes = [{\n    \"name\": \"TwoThousands\",\n    \"value\": 2000\n  }, {\n    \"name\": \"FiveHundreds\",\n    \"value\": 500\n  }, {\n    \"name\": \"TwoHundreds\",\n    \"value\": 200\n  }, {\n    \"name\": \"Hundreds\",\n    \"value\": 100\n  }, {\n    \"name\": \"Fifty\",\n    \"value\": 50\n  }, {\n    \"name\": \"Twenty\",\n    \"value\": 20\n  }, {\n    \"name\": \"Ten\",\n    \"value\": 10\n  }, {\n    \"name\": \"Five\",\n    \"value\": 5\n  }, {\n    \"name\": \"Two\",\n    \"value\": 2\n  }, {\n    \"name\": \"One\",\n    \"value\": 1\n  }];\n\n  const fetchOfferingAndDenominationsByDate = async () => {\n    setLoading(true);\n    fetch(\"\".concat(url, \"/Church-management-api/api/accounting-fetch.php\"), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        date: dateValue\n      })\n    }).then(res => res.json()).then(result => {\n      setLoading(false);\n\n      if (result.status !== 0) {\n        console.log(\"the result is\", result.message[0]);\n        setOfferingReport(result.message[0]);\n        setDenominationsandTotals([result.message[1]]);\n        test.push(result.message[0]);\n        isDateset(true);\n      } else {\n        setNotify({ ...notify,\n          isOpen: true,\n          message: result.message\n        });\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  const setDeno = async (value, denoName) => {\n    setDenominationsandTotals([...denominationsAndTotals], denominationsAndTotals[0][denoName] = value);\n  };\n\n  useEffect(() => {\n    let total = isNaN(report.reduce((accumulator, item) => isNaN(accumulator) ? 0 : accumulator + parseFloat(item.Amount), 0)) ? 0 : report.reduce((accumulator, item) => isNaN(accumulator) ? 0 : accumulator + parseFloat(item.Amount), 0);\n    setTotal(total);\n    let churchOffering = denominationsAndTotals[0]['GrandTotal'] - total;\n    let titheTotal = isNaN(report.reduce((accumulator, item) => item.Type === 'Tithe' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : report.reduce((accumulator, item) => item.Type === 'Tithe' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n    let offeringTotal = isNaN(report.reduce((accumulator, item) => item.Type === 'Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : report.reduce((accumulator, item) => item.Type === 'Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n    let missionaryTotal = isNaN(report.reduce((accumulator, item) => item.Type === 'Missionary' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : report.reduce((accumulator, item) => item.Type === 'Missionary' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n    let specialofferingTotal = isNaN(report.reduce((accumulator, item) => item.Type === 'Special Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : report.reduce((accumulator, item) => item.Type === 'Special Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n    let baptismofferingTotal = isNaN(report.reduce((accumulator, item) => item.Type === 'Baptism Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : report.reduce((accumulator, item) => item.Type === 'Baptism Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n    let birthdayofferingTotal = isNaN(report.reduce((accumulator, item) => item.Type === 'Birthday Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : report.reduce((accumulator, item) => item.Type === 'Birthday Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n    let weddingofferingTotal = isNaN(report.reduce((accumulator, item) => item.Type === 'Wedding Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : report.reduce((accumulator, item) => item.Type === 'Wedding Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n    let childdedicationofferingTotal = isNaN(report.reduce((accumulator, item) => item.Type === 'Child Dedication Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : report.reduce((accumulator, item) => item.Type === 'Child Dedication Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n    let committedofferingTotal = isNaN(report.reduce((accumulator, item) => item.Type === 'Committed Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : report.reduce((accumulator, item) => item.Type === 'Committed Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n    let buildingfundTotal = isNaN(report.reduce((accumulator, item) => item.Type === 'Building Fund' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : report.reduce((accumulator, item) => item.Type === 'Building Fund' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n    setDenominationsandTotals([...denominationsAndTotals], denominationsAndTotals[0]['ChurchOffering'] = churchOffering, denominationsAndTotals[0]['TitheTotal'] = titheTotal, denominationsAndTotals[0]['BaptismofferingTotal'] = baptismofferingTotal, denominationsAndTotals[0]['OfferingTotal'] = offeringTotal, denominationsAndTotals[0]['MissionaryTotal'] = missionaryTotal, denominationsAndTotals[0]['SpecialOfferingTotal'] = specialofferingTotal, denominationsAndTotals[0]['BirthdayofferingTotal'] = birthdayofferingTotal, denominationsAndTotals[0]['WeddingofferingTotal'] = weddingofferingTotal, denominationsAndTotals[0]['ChilddedicationofferingTotal'] = childdedicationofferingTotal, denominationsAndTotals[0]['CommittedofferingTotal'] = committedofferingTotal, denominationsAndTotals[0]['BuildingFundTotal'] = buildingfundTotal);\n  }, [report, denominationsAndTotals[0].GrandTotal]);\n  const [names, setnames] = useState([]);\n  const [searchterm, setsearchterm] = useState();\n  const results = !searchterm ? names : names.filter(person => person.toLowerCase().includes(searchterm.toLocaleLowerCase()));\n\n  const searchapi = () => {\n    setLoading(true);\n    fetch(\"\".concat(url, \"/Church-management-api/api/searchname.php\"), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(result => {\n      setnames(result);\n      setLoading(false);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  useEffect(() => {\n    searchapi();\n  }, [1]);\n\n  const confirm = () => {\n    setLoading(true);\n    fetch(\"\".concat(url, \"/Church-management-api/api/edit-accounting.php\"), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        denominationsAndTotals: denominationsAndTotals[0],\n        report\n      })\n    }).then(res => res.json()).then(result => {\n      setLoading(false);\n      setNotify({ ...notify,\n        severity: result.status == 0 ? \"error\" : \"success\",\n        isOpen: true,\n        message: result.message\n      });\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  const deleteRow = (delName, delType, key) => {\n    setLoading(true);\n    fetch(\"\".concat(url, \"/Church-management-api/api/accounting-delete-row.php\"), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        date: dateValue,\n        name: delName,\n        type: delType\n      })\n    }).then(res => res.json()).then(result => {\n      setLoading(false);\n      setNotify({ ...notify,\n        isOpen: true,\n        severity: result.status == 0 ? \"error\" : \"success\",\n        message: result.message\n      });\n\n      if (result.status == 1) {\n        setOfferingReport(currentPeople => currentPeople.filter((x, id) => id !== key));\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  const addnew = () => {\n    setLoading(true);\n    fetch(\"\".concat(url, \"/Church-management-api/api/accounting-add-new.php\"), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"Name\": tempname,\n        \"date\": dateValue,\n        \"Type\": temptype,\n        \"Amount\": tempamount\n      })\n    }).then(res => res.json()).then(result => {\n      setLoading(false);\n      setNotify({ ...notify,\n        isOpen: true,\n        severity: result.status == 0 ? \"error\" : \"success\",\n        message: result.message\n      });\n\n      if (result.status == 1) {\n        setOfferingReport(currentPeople => [...currentPeople, {\n          Name: tempname,\n          Type: temptype,\n          Amount: tempamount\n        }]);\n      }\n    }).catch(error => {\n      console.error(error);\n    }).then(() => {\n      settempamount('');\n      settempamount('');\n      settemptype('');\n    });\n  };\n\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    style: {\n      display: \"grid\",\n      justifyContent: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(AlertMessage, {\n      notify: notify,\n      setNotify: setNotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(Datepicker, {\n        setValue: setdateValue,\n        value: dateValue,\n        label: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn2\",\n        onClick: () => {\n          fetchOfferingAndDenominationsByDate().then(() => {\n            console.log(report, 'report');\n          });\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      style: {\n        display: dateset ? \"block\" : \"none\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableRow, {\n          children: /*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: [\"REPORT ON \", new Date(dateValue).toLocaleDateString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 21\n        }, this), report.map((p, key) => {\n          return /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: p.Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                value: p.Type,\n                onChange: event => {\n                  const Type = event.target.value;\n                  setOfferingReport(currentPeople => currentPeople.map((x, l) => l === key ? { ...x,\n                    Type\n                  } : x));\n                  console.log(JSON.stringify(report), \"VAL\");\n                  console.log(JSON.stringify(denominationsAndTotals), \"VAL1\");\n                },\n                children: arrOfferingTypes.map((val, key) => {\n                  return /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: val.value,\n                    children: val.name\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 363,\n                    columnNumber: 49\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                onChange: event => {\n                  const Am = event.target.value;\n                  let patt = /[^0-9]/g;\n                  const Amount = parseFloat(Am.replace(patt, ''));\n                  setOfferingReport(currentPeople => currentPeople.map((x, l) => l === key ? { ...x,\n                    Amount\n                  } : x));\n                },\n                value: p.Amount,\n                type: \"number\",\n                placeholder: \"Enter Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                style: {\n                  border: \"none\",\n                  cursor: \"pointer\"\n                },\n                onClick: () => {\n                  deleteRow(p.Name, p.Type, key);\n                },\n                children: /*#__PURE__*/_jsxDEV(DeleteOutlineIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 33\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 29\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(TableRow, {\n          children: /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              style: {\n                border: \"none\",\n                cursor: \"pointer\"\n              },\n              onClick: () => {\n                setclick(click + 1);\n              },\n              children: /*#__PURE__*/_jsxDEV(AddCircleOutline, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n          style: {\n            display: click === 0 ? \"none\" : \"\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              options: names,\n              value: tempname,\n              onChange: (e, v) => {\n                settempname(v);\n              },\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                placeholder: \"Enter Name\",\n                onChange: _ref => {\n                  let {\n                    target\n                  } = _ref;\n                  settempname(target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              value: temptype,\n              onChange: event => {\n                const Type = event.target.value;\n                settemptype(Type);\n              },\n              children: arrOfferingTypes.map((val, key) => {\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: val.value,\n                  children: val.name\n                }, key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 41\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              onChange: event => {\n                const Am = event.target.value;\n                let patt = /[^0-9]/g;\n                const Amount = parseFloat(Am.replace(patt, ''));\n                settempamount(Amount);\n              },\n              value: tempamount,\n              type: \"number\",\n              placeholder: \"Enter Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                if (tempname !== '' && temptype !== '') {\n                  addnew();\n                } else {\n                  setNotify({ ...notify,\n                    isOpen: true,\n                    message: \"Input all required\"\n                  });\n                }\n              },\n              children: \"Confirm Adding\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Church Offering\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: denominationsAndTotals[0]['ChurchOffering']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: Total\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Grand Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: denominationsAndTotals[0]['GrandTotal']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        children: [denoTypes.map((val, key) => {\n          let name = val.name;\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            container: true,\n            direction: \"row\",\n            alignItems: \"center\",\n            margin: 2,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              children: [val.value, \" x\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              value: denominationsAndTotals[0][name],\n              onChange: e => {\n                setDeno(e.target.value, name).then(() => {\n                  let grandTotal = 1 * denominationsAndTotals[0]['One'] + 2 * denominationsAndTotals[0]['Two'] + 5 * denominationsAndTotals[0]['Five'] + 10 * denominationsAndTotals[0]['Ten'] + 20 * denominationsAndTotals[0]['Twenty'] + 50 * denominationsAndTotals[0]['Fifty'] + 100 * denominationsAndTotals[0]['Hundreds'] + 200 * denominationsAndTotals[0]['TwoHundreds'] + 500 * denominationsAndTotals[0]['FiveHundreds'] + 2000 * denominationsAndTotals[0]['TwoThousands']; // let grandTotal = (val.value*(isNaN(parseFloat(valueOfinput)?0:parseFloat(valueOfinput))))+parseFloat(denominationsAndTotals[0]['GrandTotal']);\n\n                  setDenominationsandTotals([...denominationsAndTotals], denominationsAndTotals[0]['GrandTotal'] = grandTotal);\n                }); // setDenominationsandTotals([...denominationsAndTotals,{GrandTotal:n}]);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"=\", val.value * (isNaN(parseFloat(denominationsAndTotals[0][name])) ? 0 : parseFloat(denominationsAndTotals[0][name]))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 37\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 33\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            confirm();\n          },\n          variant: \"contained\",\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 308,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Editaccounting, \"ngSw1yeE3EriFz2P1yj8Kur6tjA=\");\n\n_c = Editaccounting;\nexport default Editaccounting;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editaccounting\");","map":{"version":3,"sources":["/home/david/Desktop/mydev/coreui-free-react-admin-template/src/views/Components/Sub Components/Editaccounting.js"],"names":["AddCircleOutline","DeleteOutlineIcon","Autocomplete","Button","Grid","IconButton","MenuItem","Select","Table","TableCell","TableHead","TableRow","TextField","Typography","React","useEffect","useState","url","AlertMessage","Datepicker","Editaccounting","props","setLoading","Total","setTotal","click","setclick","tempname","settempname","temptype","settemptype","tempamount","settempamount","dateValue","setdateValue","dateset","isDateset","report","setOfferingReport","test","denominationsAndTotals","setDenominationsandTotals","notify","setNotify","isOpen","message","variant","severity","arrOfferingTypes","denoTypes","fetchOfferingAndDenominationsByDate","fetch","method","headers","body","JSON","stringify","date","then","res","json","result","status","console","log","push","catch","error","setDeno","value","denoName","total","isNaN","reduce","accumulator","item","parseFloat","Amount","churchOffering","titheTotal","Type","offeringTotal","missionaryTotal","specialofferingTotal","baptismofferingTotal","birthdayofferingTotal","weddingofferingTotal","childdedicationofferingTotal","committedofferingTotal","buildingfundTotal","GrandTotal","names","setnames","searchterm","setsearchterm","results","filter","person","toLowerCase","includes","toLocaleLowerCase","searchapi","confirm","deleteRow","delName","delType","key","name","type","currentPeople","x","id","addnew","Name","display","justifyContent","Date","toLocaleDateString","map","p","event","target","l","val","Am","patt","replace","border","cursor","e","v","params","grandTotal"],"mappings":"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","sourcesContent":["import AddCircleOutline from \"@mui/icons-material/AddCircleOutline\";\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport { Autocomplete, Button, Grid, IconButton, MenuItem, Select, Table, TableCell, TableHead, TableRow, TextField, Typography } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { url } from \"../../Constants\";\nimport { AlertMessage } from \"../Support/AlertMessage\";\nimport { Datepicker } from \"../Support/Datepicker\";\n\nconst Editaccounting = (props) => {\n    const { setLoading } = props;\n    const [Total, setTotal] = useState();\n    const [click, setclick] = useState(0);\n    const [tempname, settempname] = useState('');\n    const [temptype, settemptype] = useState('');\n    const [tempamount, settempamount] = useState(0);\n    const [dateValue, setdateValue] = useState('2021-18-10');\n    const [dateset, isDateset] = useState(false);\n    const [report, setOfferingReport] = useState([]);\n    let test = [];\n    const [denominationsAndTotals, setDenominationsandTotals] = useState(\n        [{\n            \"Date\": \"2021-10-18\",\n            \"ChurchOffering\": \"1680\",\n            \"TitheTotal\": \"720\",\n            \"OfferingTotal\": \"0\",\n            \"SpecialOfferingTotal\": \"0\",\n            \"BaptismofferingTotal\": \"0\",\n            \"BirthdayofferingTotal\": \"0\",\n            \"WeddingofferingTotal\": \"300\",\n            \"ChilddedicationofferingTotal\": \"0\",\n            \"CommittedofferingTotal\": \"0\",\n            \"MissionaryTotal\": \"500\",\n            \"BuildingFundTotal\": \"0\",\n            \"GrandTotal\": \"3200\",\n            \"TwoThousands\": \"1\",\n            \"FiveHundreds\": \"1\",\n            \"TwoHundreds\": \"3\",\n            \"Hundreds\": \"1\",\n            \"Fifty\": \"0\",\n            \"Twenty\": \"0\",\n            \"Ten\": \"0\",\n            \"Five\": \"0\",\n            \"Two\": \"0\",\n            \"One\": \"0\"\n        }]\n    );\n    const [notify, setNotify] = useState({ isOpen: false, message: '', variant: 'filled', severity: 'error' });\n    const arrOfferingTypes = [\n        { \"name\": \"Select\", \"value\": \"\" },\n        { \"name\": \"Tithe\", \"value\": \"Tithe\" },\n        { \"name\": \"Offering\", \"value\": \"Offering\" },\n        { \"name\": \"Missionary\", \"value\": \"Missionary\" },\n        { \"name\": \"Special Offering\", \"value\": \"Special Offering\" },\n        { \"name\": \"Baptism Offering\", \"value\": \"Baptism Offering\" },\n        { \"name\": \"Birthday Offering\", \"value\": \"Birthday Offering\" },\n        { \"name\": \"Wedding Offering\", \"value\": \"Wedding Offering\" },\n        { \"name\": \"Child Dedication Offering\", \"value\": \"Child Dedication Offering\" },\n        { \"name\": \"Committed Offering\", \"value\": \"Committed Offering\" },\n        { \"name\": \"Building Fund\", \"value\": \"Building Fund\" }\n    ]\n\n\n\n    const denoTypes = [\n        { \"name\": \"TwoThousands\", \"value\": 2000 },\n        { \"name\": \"FiveHundreds\", \"value\": 500 },\n        { \"name\": \"TwoHundreds\", \"value\": 200 },\n        { \"name\": \"Hundreds\", \"value\": 100 },\n        { \"name\": \"Fifty\", \"value\": 50 },\n        { \"name\": \"Twenty\", \"value\": 20 },\n        { \"name\": \"Ten\", \"value\": 10 },\n        { \"name\": \"Five\", \"value\": 5 },\n        { \"name\": \"Two\", \"value\": 2 },\n        { \"name\": \"One\", \"value\": 1 }\n    ]\n    const fetchOfferingAndDenominationsByDate = async () => {\n        setLoading(true);\n        fetch(`${url}/Church-management-api/api/accounting-fetch.php`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n\n            },\n            body: JSON.stringify({\n                date: dateValue\n            })\n        })\n            .then(res => res.json())\n            .then((result) => {\n                setLoading(false);\n                if (result.status !== 0) {\n                    console.log(\"the result is\", result.message[0]);\n                    setOfferingReport(result.message[0]);\n                    setDenominationsandTotals([result.message[1]]);\n                    test.push(result.message[0]);\n\n                    isDateset(true);\n\n                }\n                else {\n                    setNotify({\n                        ...notify,\n                        isOpen: true,\n                        message: result.message\n                    })\n                }\n\n\n            }).catch((error) => {\n                console.error(error);\n            })\n    }\n\n    const setDeno = async (value, denoName) => {\n        setDenominationsandTotals([...denominationsAndTotals], denominationsAndTotals[0][denoName] = value);\n    }\n\n\n\n    useEffect(() => {\n        let total = isNaN(report.reduce((accumulator, item) => isNaN(accumulator) ? 0 : accumulator + parseFloat(item.Amount), 0)) ? 0 : report.reduce((accumulator, item) => isNaN(accumulator) ? 0 : accumulator + parseFloat(item.Amount), 0);\n\n        setTotal(total);\n\n        let churchOffering = denominationsAndTotals[0]['GrandTotal'] - total;\n\n        let titheTotal = isNaN(report.reduce((accumulator, item) => item.Type === 'Tithe' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : report.reduce((accumulator, item) => item.Type === 'Tithe' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n        let offeringTotal = isNaN(report.reduce((accumulator, item) => item.Type === 'Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : report.reduce((accumulator, item) => item.Type === 'Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n        let missionaryTotal = isNaN(report.reduce((accumulator, item) => item.Type === 'Missionary' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : report.reduce((accumulator, item) => item.Type === 'Missionary' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n        let specialofferingTotal = isNaN(report.reduce((accumulator, item) => item.Type === 'Special Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : report.reduce((accumulator, item) => item.Type === 'Special Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n        let baptismofferingTotal = isNaN(report.reduce((accumulator, item) => item.Type === 'Baptism Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : report.reduce((accumulator, item) => item.Type === 'Baptism Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n        let birthdayofferingTotal = isNaN(report.reduce((accumulator, item) => item.Type === 'Birthday Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : report.reduce((accumulator, item) => item.Type === 'Birthday Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n        let weddingofferingTotal = isNaN(report.reduce((accumulator, item) => item.Type === 'Wedding Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : report.reduce((accumulator, item) => item.Type === 'Wedding Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n        let childdedicationofferingTotal = isNaN(report.reduce((accumulator, item) => item.Type === 'Child Dedication Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : report.reduce((accumulator, item) => item.Type === 'Child Dedication Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n        let committedofferingTotal = isNaN(report.reduce((accumulator, item) => item.Type === 'Committed Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : report.reduce((accumulator, item) => item.Type === 'Committed Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n        let buildingfundTotal = isNaN(report.reduce((accumulator, item) => item.Type === 'Building Fund' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : report.reduce((accumulator, item) => item.Type === 'Building Fund' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n\n        setDenominationsandTotals([...denominationsAndTotals],\n            denominationsAndTotals[0]['ChurchOffering'] = churchOffering,\n            denominationsAndTotals[0]['TitheTotal'] = titheTotal,\n            denominationsAndTotals[0]['BaptismofferingTotal'] = baptismofferingTotal,\n            denominationsAndTotals[0]['OfferingTotal'] = offeringTotal,\n            denominationsAndTotals[0]['MissionaryTotal'] = missionaryTotal,\n            denominationsAndTotals[0]['SpecialOfferingTotal'] = specialofferingTotal,\n            denominationsAndTotals[0]['BirthdayofferingTotal'] = birthdayofferingTotal,\n            denominationsAndTotals[0]['WeddingofferingTotal'] = weddingofferingTotal,\n            denominationsAndTotals[0]['ChilddedicationofferingTotal'] = childdedicationofferingTotal,\n            denominationsAndTotals[0]['CommittedofferingTotal'] = committedofferingTotal,\n            denominationsAndTotals[0]['BuildingFundTotal'] = buildingfundTotal,\n\n        );\n    }, [report, denominationsAndTotals[0].GrandTotal])\n\n\n\n\n    const [names, setnames] = useState([]);\n\n    const [searchterm, setsearchterm] = useState();\n\n    const results = !searchterm ? names : names.filter(person => person.toLowerCase().includes(searchterm.toLocaleLowerCase()));\n    const searchapi = () => {\n        setLoading(true);\n        fetch(`${url}/Church-management-api/api/searchname.php`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n\n            },\n        })\n            .then(res => res.json())\n            .then((result) => {\n                setnames(result);\n                setLoading(false);\n            }).catch((error) => {\n                console.error(error);\n            });\n    }\n    useEffect(() => {\n        searchapi();\n    }, [1])\n    const confirm = () => {\n        setLoading(true);\n\n        fetch(`${url}/Church-management-api/api/edit-accounting.php`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n\n            },\n            body: JSON.stringify({\n                denominationsAndTotals: denominationsAndTotals[0],\n                report\n\n            })\n        })\n            .then(res => res.json())\n            .then((result) => {\n                setLoading(false);\n                setNotify({\n                    ...notify,\n                    severity: result.status == 0 ? \"error\" : \"success\",\n                    isOpen: true,\n                    message: result.message\n                })\n\n            }).catch((error) => {\n                console.error(error);\n            });\n\n    }\n    const deleteRow = (delName, delType, key) => {\n        setLoading(true);\n        fetch(`${url}/Church-management-api/api/accounting-delete-row.php`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n\n            },\n            body: JSON.stringify({\n                date: dateValue,\n                name: delName,\n                type: delType\n\n            })\n        })\n            .then(res => res.json())\n            .then((result) => {\n                setLoading(false);\n                setNotify({\n                    ...notify,\n                    isOpen: true,\n                    severity: result.status == 0 ? \"error\" : \"success\",\n                    message: result.message\n                });\n                if (result.status == 1) {\n                    setOfferingReport(currentPeople => currentPeople.filter((x, id) => id !== key));\n                }\n            })\n            .catch((error) => {\n                console.error(error);\n            })\n    }\n\n    const addnew = () => {\n        setLoading(true);\n        fetch(`${url}/Church-management-api/api/accounting-add-new.php`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n\n            },\n            body: JSON.stringify({\n                \"Name\": tempname,\n                \"date\": dateValue,\n                \"Type\": temptype,\n                \"Amount\": tempamount\n\n            })\n        })\n            .then(res => res.json())\n            .then((result) => {\n                setLoading(false);\n                setNotify({\n                    ...notify,\n                    isOpen: true,\n                    severity: result.status == 0 ? \"error\" : \"success\",\n                    message: result.message\n                });\n                if (result.status == 1) {\n                    setOfferingReport(currentPeople => [...currentPeople, {\n                        Name: tempname,\n                        Type: temptype,\n                        Amount: tempamount,\n                    }]);\n                }\n            })\n            .catch((error) => {\n                console.error(error);\n            }).then(() => {\n\n                settempamount('');\n                settempamount('');\n                settemptype('');\n            })\n    }\n\n    useEffect(()=>{\n\n    },[])\n\n    return (\n        <Grid style={{ display: \"grid\", justifyContent: \"center\" }} >\n\n            <AlertMessage\n                notify={notify}\n                setNotify={setNotify}\n            />\n            <Grid>\n                <Datepicker\n                    setValue={setdateValue}\n                    value={dateValue}\n                    label='Date'\n                />\n                <Button className=\"btn2\" onClick={() => {   \n                    fetchOfferingAndDenominationsByDate().then(()=>{\n                        console.log(report,'report')\n                    })\n                }} >Submit</Button>\n            </Grid>\n            <Grid style={{ display: dateset ? \"block\" : \"none\" }} >\n\n                <Table>\n                    <TableRow>\n                        <TableHead>\n                            <TableCell>\n                                <Typography>\n                                    REPORT ON {new Date(dateValue).toLocaleDateString()}\n                                </Typography>\n                            </TableCell>\n                        </TableHead>\n                    </TableRow>\n\n\n\n                    {report.map((p, key) => {\n                        return (\n                            <TableRow key={key} >\n                                <TableCell>\n                                    <p>{p.Name}</p>\n                                </TableCell>\n\n\n                                <TableCell>\n                                    <Select value={p.Type}\n                                        onChange={(event) => {\n                                            const Type = event.target.value;\n                                            setOfferingReport((currentPeople) => currentPeople.map((x, l) => l === key ? {\n                                                ...x,\n                                                Type\n                                            } : x));\n                                            console.log(JSON.stringify(report), \"VAL\")\n                                            console.log(JSON.stringify(denominationsAndTotals), \"VAL1\")\n\n                                        }} >\n                                        {arrOfferingTypes.map((val, key) => {\n                                            return (\n                                                <MenuItem\n                                                    value={val.value}\n                                                    key={key}\n                                                >\n                                                    {val.name}\n                                                </MenuItem>\n                                            )\n                                        })}\n                                    </Select>\n                                </TableCell>\n                                <TableCell><TextField onChange={(event) => {\n                                    const Am = event.target.value;\n                                    let patt = /[^0-9]/g;\n                                    const Amount = parseFloat(Am.replace(patt, ''));\n                                    setOfferingReport((currentPeople) => currentPeople.map((x, l) => l === key ? {\n                                        ...x,\n                                        Amount\n                                    } : x));\n                                }}\n                                    value={p.Amount}\n                                    type=\"number\"\n                                    placeholder=\"Enter Amount\" /></TableCell>\n                                <TableCell>\n                                    <IconButton\n                                        style={{ border: \"none\", cursor: \"pointer\" }}\n                                        onClick={\n                                            () => {\n\n                                                deleteRow(p.Name, p.Type, key);\n\n                                            }\n                                        }>\n                                        <DeleteOutlineIcon />\n                                    </IconButton>\n                                </TableCell>\n\n                            </TableRow>\n                        )\n                    })}\n\n\n                    <TableRow>\n\n                        <TableCell>\n                            <IconButton\n                                style={{ border: \"none\", cursor: \"pointer\" }}\n                                onClick={() => {\n                                    setclick(click + 1);\n\n                                }}\n                            >\n                                <AddCircleOutline />\n                            </IconButton>\n                        </TableCell>\n\n                    </TableRow>\n                    <TableRow style={{ display: click === 0 ? \"none\" : \"\" }} >\n                        <TableCell>\n                            <Autocomplete\n                                options={names}\n                                value={tempname}\n                                onChange={(e, v) => {\n                                    settempname(v)\n                                }}\n                                renderInput={(params) =>\n                                    <TextField\n                                        {...params}\n                                        placeholder=\"Enter Name\"\n                                        onChange={({ target }) => {\n                                            settempname(target.value)\n                                        }}\n                                    />\n                                }\n                            />\n\n\n                        </TableCell>\n                        <TableCell>\n                            <Select\n                                value={temptype}\n                                onChange={(event) => {\n                                    const Type = event.target.value;\n                                    settemptype(Type);\n\n                                }} >\n                                {arrOfferingTypes.map((val, key) => {\n                                    return (\n                                        <MenuItem\n                                            key={key}\n                                            value={val.value}\n                                        >\n                                            {val.name}\n                                        </MenuItem>\n                                    )\n                                })}\n                            </Select>\n\n                        </TableCell>\n                        <TableCell>\n                            <TextField\n                                onChange={(event) => {\n                                    const Am = event.target.value;\n                                    let patt = /[^0-9]/g;\n                                    const Amount = parseFloat(Am.replace(patt, ''));\n                                    settempamount(Amount);\n                                }}\n                                value={tempamount}\n                                type=\"number\"\n                                placeholder=\"Enter Amount\" />\n                        </TableCell>\n                        <TableCell>\n                            <Button\n                                onClick={() => {\n                                    if (tempname !== '' && temptype !== '') {\n                                        addnew();\n                                    }\n                                    else {\n                                        setNotify({\n                                            ...notify,\n                                            isOpen: true,\n                                            message: \"Input all required\"\n                                        })\n                                    }\n\n\n                                }}\n                            >\n                                Confirm Adding\n                            </Button>\n                        </TableCell>\n\n                    </TableRow>\n\n                    <TableRow>\n                        <TableCell></TableCell>\n                        <TableCell>\n                            <Typography>\n                                Church Offering\n                            </Typography>\n                        </TableCell>\n                        <TableCell>\n                            {denominationsAndTotals[0]['ChurchOffering']}\n                        </TableCell>\n\n                    </TableRow>\n\n\n                    <TableRow>\n                        <TableCell></TableCell>\n                        <TableCell>\n                            <Typography>\n                                Total\n                            </Typography>\n                        </TableCell>\n                        <TableCell>\n                            {Total}\n                        </TableCell>\n\n                    </TableRow>\n\n\n                    <TableRow>\n                        <TableCell></TableCell>\n                        <TableCell>\n                            Grand Total\n                        </TableCell>\n                        <TableCell>\n                            {denominationsAndTotals[0]['GrandTotal']}\n                        </TableCell>\n\n                    </TableRow>\n\n\n\n                </Table>\n\n\n\n                <Grid>\n\n                    {\n                        denoTypes.map((val, key) => {\n                            let name = val.name\n                            return (\n                                <Grid\n                                    item\n                                    container\n                                    key={key}\n                                    direction={\"row\"}\n                                    alignItems={\"center\"}\n                                    margin={2}\n                                >\n                                    <Typography>\n                                        {val.value} x\n                                    </Typography>\n                                    <TextField\n                                        value={denominationsAndTotals[0][name]}\n                                        onChange={(e) => {\n                                            setDeno(e.target.value, name).then(() => {\n                                                let grandTotal = (1 * denominationsAndTotals[0]['One']) + (2 * denominationsAndTotals[0]['Two']) + (5 * denominationsAndTotals[0]['Five']) + (10 * denominationsAndTotals[0]['Ten']) + (20 * denominationsAndTotals[0]['Twenty']) + (50 * denominationsAndTotals[0]['Fifty']) + (100 * denominationsAndTotals[0]['Hundreds']) + (200 * denominationsAndTotals[0]['TwoHundreds']) + (500 * denominationsAndTotals[0]['FiveHundreds']) + (2000 * denominationsAndTotals[0]['TwoThousands']);\n                                                // let grandTotal = (val.value*(isNaN(parseFloat(valueOfinput)?0:parseFloat(valueOfinput))))+parseFloat(denominationsAndTotals[0]['GrandTotal']);\n\n                                                setDenominationsandTotals([...denominationsAndTotals], denominationsAndTotals[0]['GrandTotal'] = grandTotal);\n                                            })\n\n                                            // setDenominationsandTotals([...denominationsAndTotals,{GrandTotal:n}]);\n                                        }}\n                                    />\n                                    <Typography>\n                                        ={val.value * (isNaN(parseFloat(denominationsAndTotals[0][name])) ? 0 : parseFloat(denominationsAndTotals[0][name]))}\n                                    </Typography>\n                                </Grid>\n                            )\n                        })\n                    }\n\n                    <Button\n                        onClick={() => { confirm() }}\n                        variant=\"contained\"\n                    >\n                        Confirm\n                    </Button>\n                </Grid>\n\n            </Grid>\n\n        </Grid>\n    )\n}\n\nexport default Editaccounting;"]},"metadata":{},"sourceType":"module"}