{"ast":null,"code":"var _jsxFileName = \"/home/david/Desktop/mydev/coreui-free-react-admin-template/src/views/Components/YoutubeID.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { url } from '../Constants';\nimport { Grid, TextField, Button, IconButton } from '@mui/material';\nimport DeleteSweepIcon from '@mui/icons-material/DeleteSweep';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst YoutubeID = () => {\n  _s();\n\n  const [links, setlinks] = useState([{\n    sno: 1,\n    id: ''\n  }]);\n  const [count, setcount] = useState(2);\n  let id = links.map(k => k.id);\n\n  const submit = () => {\n    fetch(\"\".concat(url, \"/jehovanissi/backend/apis/youtubeid.php\"), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: id\n      })\n    }).then(res => res.json()).then(result => {\n      alert(result);\n      window.location.reload();\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"column\",\n    children: [\"   \", /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      direction: \"column\",\n      justifyContent: \"center\",\n      justifyItems: \"center\",\n      alignContent: \"center\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn\",\n        onClick: () => {\n          setlinks(currentPeople => [...currentPeople, {\n            sno: count,\n            id: ''\n          }]);\n          setcount(count + 1);\n        },\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), links.map(k => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"dense\",\n            onChange: event => {\n              const temp = event.target.value;\n              const id = temp.slice(17);\n              setlinks(currentPeople => currentPeople.map(x => x.sno === k.sno ? { ...x,\n                id\n              } : x));\n            },\n            placeholder: \"Enter the link\"\n          }, k.sno, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            className: \"btn\",\n            variant: \"contained\",\n            onClick: () => {\n              setlinks(currentPeople => currentPeople.filter(x => x.sno !== k.sno));\n              setcount(count - 1);\n            },\n            children: /*#__PURE__*/_jsxDEV(DeleteSweepIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      justifyContent: \"center\",\n      justifyItems: \"center\",\n      alignContent: \"center\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn\",\n        onClick: () => submit(),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(YoutubeID, \"RJJG9cbwMO9ht1v8idY/3gE5wJw=\");\n\n_c = YoutubeID;\nexport default YoutubeID;\n\nvar _c;\n\n$RefreshReg$(_c, \"YoutubeID\");","map":{"version":3,"sources":["/home/david/Desktop/mydev/coreui-free-react-admin-template/src/views/Components/YoutubeID.js"],"names":["React","useState","url","Grid","TextField","Button","IconButton","DeleteSweepIcon","YoutubeID","links","setlinks","sno","id","count","setcount","map","k","submit","fetch","method","headers","body","JSON","stringify","then","res","json","result","alert","window","location","reload","catch","error","console","currentPeople","event","temp","target","value","slice","x","filter"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { url } from '../Constants';\nimport { Grid, TextField, Button, IconButton } from '@mui/material';\nimport DeleteSweepIcon from '@mui/icons-material/DeleteSweep';\n\nconst YoutubeID = () => {\n    const [links, setlinks] = useState([{ sno: 1, id: '' }]);\n    const [count, setcount] = useState(2);\n\n    let id = links.map((k) => k.id);\n\n    const submit = () => {\n        fetch(`${url}/jehovanissi/backend/apis/youtubeid.php`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n\n            },\n            body: JSON.stringify({\n                id: id\n\n            })\n        })\n            .then(res => res.json())\n            .then((result) => {\n                alert(result);\n                window.location.reload();\n            }).catch((error) => {\n                console.error(error);\n            });\n\n    }\n\n\n\n\n    return (\n        <Grid\n            container\n            direction={\"column\"}\n        >   <Grid\n            item\n            direction={\"column\"}\n            justifyContent={\"center\"}\n            justifyItems={\"center\"}\n            alignContent={\"center\"}\n            alignItems={\"center\"}\n        >\n                <Button className=\"btn\" onClick={() => {\n                    setlinks(currentPeople => [...currentPeople, {\n                        sno: count,\n                        id: ''\n                    }]); setcount(count + 1);\n                }} >Add</Button>\n                {links.map((k) => {\n                    return (\n                        <>\n                            <TextField\n                                margin=\"dense\"\n                                key={k.sno}\n                                onChange={(event) => {\n                                    const temp = event.target.value;\n                                    const id = temp.slice(17);\n                                    setlinks((currentPeople) => currentPeople.map(x => x.sno === k.sno ? {\n                                        ...x,\n                                        id\n                                    } : x));\n                                }} placeholder=\"Enter the link\" />\n\n                            <IconButton className=\"btn\" variant=\"contained\" onClick={\n                                () => {\n                                    setlinks(currentPeople => currentPeople.filter(x => x.sno !== k.sno)); setcount(count - 1)\n                                }\n                            }><DeleteSweepIcon />\n                            </IconButton>\n                        </>\n\n                    )\n                })}\n            </Grid>\n            <Grid\n                item\n                justifyContent={\"center\"}\n                justifyItems={\"center\"}\n                alignContent={\"center\"}\n                alignItems={\"center\"}\n            >\n                <Button className=\"btn\" onClick={() => submit()}>Submit</Button>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default YoutubeID;"]},"metadata":{},"sourceType":"module"}