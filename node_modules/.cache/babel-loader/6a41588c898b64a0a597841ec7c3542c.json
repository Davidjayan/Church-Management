{"ast":null,"code":"var _jsxFileName = \"/home/david/Desktop/mydev/coreui-free-react-admin-template/src/views/Components/Accounting.js\",\n    _s = $RefreshSig$();\n\nimport { Grid, TextField, Select, MenuItem, Button, IconButton, Typography } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport { url } from \"../Constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Accounting = () => {\n  _s();\n\n  const [people, setPeople] = useState([{\n    id: 1,\n    Name: '',\n    type: '',\n    Amount: ''\n  }]);\n  const [count, setCount] = useState(2);\n  const [names, setnames] = useState([]);\n  const [searchterm, setsearchterm] = useState();\n  const results = !searchterm ? names : names.filter(person => person.toLowerCase().includes(searchterm.toLocaleLowerCase()));\n  const [ones, setones] = useState(0);\n  const [twos, settwos] = useState(0);\n  const [fives, setfives] = useState(0);\n  const [tens, settens] = useState(0);\n  const [twentys, settwentys] = useState(0);\n  const [fiftys, setfiftys] = useState(0);\n  const [hundreds, sethundreds] = useState(0);\n  const [twohundreds, settwohundreds] = useState(0);\n  const [fivehundreds, setfivehunndreds] = useState(0);\n  const [twothousands, settwothousands] = useState(0);\n  const [dateofofferings, setdateofofferings] = useState();\n  const [offeringsAsObject, setOfferings] = useState([{\n    \"price\": 2000,\n    \"cnt\": 0,\n    \"tot\": 0\n  }, {\n    \"price\": 500,\n    \"cnt\": 0,\n    \"tot\": 0\n  }, {\n    \"price\": 200,\n    \"cnt\": 0,\n    \"tot\": 0\n  }, {\n    \"price\": 100,\n    \"cnt\": 0,\n    \"tot\": 0\n  }, {\n    \"price\": 50,\n    \"cnt\": 0,\n    \"tot\": 0\n  }, {\n    \"price\": 20,\n    \"cnt\": 0,\n    \"tot\": 0\n  }, {\n    \"price\": 10,\n    \"cnt\": 0,\n    \"tot\": 0\n  }, {\n    \"price\": 5,\n    \"cnt\": 0,\n    \"tot\": 0\n  }, {\n    \"price\": 2,\n    \"cnt\": 0,\n    \"tot\": 0\n  }, {\n    \"price\": 1,\n    \"cnt\": 0,\n    \"tot\": 0\n  }]);\n  let name = people.map(k => k.Name);\n  let type = people.map(k => k.type);\n  let amount = people.map(k => k.Amount);\n  let today = new Date();\n  let dd = today.getDate();\n  dd = dd < 10 ? \"0\" + dd : dd;\n  let mm = today.getMonth() + 1 > 12 ? today.getMonth() : today.getMonth() + 1;\n  mm = mm < 10 ? \"0\" + mm : mm;\n\n  if (dd === \"00\") {\n    dd = 31;\n    mm = mm - 1;\n  }\n\n  let yyyy = today.getFullYear();\n  today = yyyy + \"-\" + mm + \"-\" + dd;\n  let grandTotal = 1 * ones + 2 * twos + 5 * fives + 10 * tens + 20 * twentys + 50 * fiftys + 100 * hundreds + 200 * twohundreds + 500 * fivehundreds + 2000 * twothousands;\n  let Total = isNaN(people.reduce((accumulator, item) => isNaN(accumulator) ? 0 : accumulator + parseFloat(item.Amount), 0)) ? 0 : people.reduce((accumulator, item) => isNaN(accumulator) ? 0 : accumulator + parseFloat(item.Amount), 0);\n  const churchOffering = grandTotal - Total;\n  let titheTotal = isNaN(people.reduce((accumulator, item) => item.type === 'Tithe' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : people.reduce((accumulator, item) => item.type === 'Tithe' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n  let offeringTotal = isNaN(people.reduce((accumulator, item) => item.type === 'Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : people.reduce((accumulator, item) => item.type === 'Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n  let missionaryTotal = isNaN(people.reduce((accumulator, item) => item.type === 'Missionary' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : people.reduce((accumulator, item) => item.type === 'Missionary' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n  let specialofferingTotal = isNaN(people.reduce((accumulator, item) => item.type === 'Special Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : people.reduce((accumulator, item) => item.type === 'Special Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n  let baptismofferingTotal = isNaN(people.reduce((accumulator, item) => item.type === 'Baptism Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : people.reduce((accumulator, item) => item.type === 'Baptism Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n  let birthdayofferingTotal = isNaN(people.reduce((accumulator, item) => item.type === 'Birthday Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : people.reduce((accumulator, item) => item.type === 'Birthday Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n  let weddingofferingTotal = isNaN(people.reduce((accumulator, item) => item.type === 'Wedding Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : people.reduce((accumulator, item) => item.type === 'Wedding Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n  let childdedicationofferingTotal = isNaN(people.reduce((accumulator, item) => item.type === 'Child Dedication Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : people.reduce((accumulator, item) => item.type === 'Child Dedication Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n  let committedofferingTotal = isNaN(people.reduce((accumulator, item) => item.type === 'Committed Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : people.reduce((accumulator, item) => item.type === 'Committed Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n  let buildingfundTotal = isNaN(people.reduce((accumulator, item) => item.type === 'Building Fund' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : people.reduce((accumulator, item) => item.type === 'Building Fund' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n  const submit = () => {\n    if (name[0] && dateofofferings && amount !== 0 && churchOffering >= 0) {\n      fetch(\"http://\".concat(url, \"/jehovanissi/backend/apis/accounting.php\"), {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: name,\n          type: type,\n          amount: amount,\n          dateofofferings: dateofofferings,\n          churchOffering: churchOffering,\n          titheTotal: titheTotal,\n          grandTotal: grandTotal,\n          offeringTotal: offeringTotal,\n          missionaryTotal: missionaryTotal,\n          specialofferingTotal: specialofferingTotal,\n          buildingfundTotal: buildingfundTotal,\n          baptismofferingTotal: baptismofferingTotal,\n          birthdayofferingTotal: birthdayofferingTotal,\n          weddingofferingTotal: weddingofferingTotal,\n          childdedicationofferingTotal: childdedicationofferingTotal,\n          committedofferingTotal: committedofferingTotal,\n          twothousands: twothousands,\n          twohundreds: twohundreds,\n          fivehundreds: fivehundreds,\n          hundreds: hundreds,\n          fiftys: fiftys,\n          twentys: twentys,\n          tens: tens,\n          fives: fives,\n          twos: twos,\n          ones: ones\n        })\n      }).then(res => res.json()).then(result => {\n        alert(result);\n        window.location.reload();\n      }).catch(error => {\n        console.error(error);\n      });\n    } else {\n      alert(\"Input all required and check for mistakes\");\n    }\n  };\n\n  const searchapi = () => {\n    fetch(\"\".concat(url, \"/jehovanissi/backend/apis/searchname.php\"), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(result => {\n      setnames(result);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    justifyContent: \"space-evenly\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      children: [people.map(p => {\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"dense\",\n            onChange: event => {\n              searchapi();\n              const str = event.target.value.split(' ');\n\n              for (let i = 0; i < str.length; i++) {\n                str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n              }\n\n              const Name = str.join(' ');\n              setsearchterm(Name);\n              setPeople(currentPeople => currentPeople.map(x => x.id === p.id ? { ...x,\n                Name\n              } : x));\n            },\n            value: p.Name,\n            list: \"namelist\",\n            placeholder: \"Enter Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n            id: \"namelist\",\n            children: results.map((k, key) => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                children: k\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            onChange: event => {\n              const type = event.target.value;\n              setPeople(currentPeople => currentPeople.map(x => x.id === p.id ? { ...x,\n                type\n              } : x));\n            },\n            style: {\n              margin: 9\n            },\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              className: \"options\",\n              children: \"Select \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              className: \"options\",\n              value: \"Tithe\",\n              children: \"Tithe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              className: \"options\",\n              value: \"Offering\",\n              children: \"Offering\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              className: \"options\",\n              value: \"Missionary\",\n              children: \"Missionary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              className: \"options\",\n              value: \"Special Offering\",\n              children: \"Special Offering\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              className: \"options\",\n              value: \"Baptism Offering\",\n              children: \"Baptism Offering\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              className: \"options\",\n              value: \"Birthday Offering\",\n              children: \"Birthday Offering\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              className: \"options\",\n              value: \"Wedding Offering\",\n              children: \"Wedding Offering\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              className: \"options\",\n              value: \"Child Dedication Offering\",\n              children: \"Child Dedication Offering\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              className: \"options\",\n              value: \"Committed Offering\",\n              children: \"Committed Offering\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              className: \"options\",\n              value: \"Building Fund\",\n              children: \"Building Fund\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"dense\",\n            onChange: event => {\n              const Am = event.target.value;\n              let patt = /[^0-9]/g;\n              const Amount = parseFloat(Am.replace(patt, ''));\n              setPeople(currentPeople => currentPeople.map(x => x.id === p.id ? { ...x,\n                Amount\n              } : x));\n            },\n            value: p.Amount,\n            type: \"number\",\n            placeholder: \"Enter Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => {\n              setPeople(currentPeople => currentPeople.filter(x => x.id !== p.id));\n              setCount(count - 1);\n            },\n            children: /*#__PURE__*/_jsxDEV(DeleteOutlineIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this)]\n        }, p.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: () => {\n          setPeople(currentPeople => [...currentPeople, {\n            id: count,\n            Name: '',\n            type: '',\n            Amount: ''\n          }]);\n          setCount(count + 1);\n        },\n        children: /*#__PURE__*/_jsxDEV(AddCircleOutlineIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Total:\", Total]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Tithe Total:\", JSON.stringify(titheTotal)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Offering Total:\", JSON.stringify(offeringTotal)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Special Offering Total:\", JSON.stringify(specialofferingTotal)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Missionary Total:\", JSON.stringify(missionaryTotal)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Building Fund Total:\", JSON.stringify(buildingfundTotal)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Church Offering:\", isNaN(churchOffering) ? 0 : churchOffering]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Grand Total:\", isNaN(grandTotal) ? 0 : grandTotal]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submit,\n        style: {\n          justifySelf: \"center\",\n          paddingLeft: 90,\n          paddingRight: 90,\n          paddingTop: 25,\n          paddingBottom: 25\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        value: dateofofferings,\n        onChange: event => setdateofofferings(event.target.value),\n        type: \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setdateofofferings(today),\n        children: \"Click if date is todays date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), offeringsAsObject.map((k, key) => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: [k.price, \" x \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            onChange: e => {\n              setOfferings(cp => cp.map((l, lkey) => lkey === key ? { ...l,\n                cnt: parseInt(e.target.value),\n                tot: parseInt(e.target.value) * k.price\n              } : l));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: isNaN(k.tot)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Accounting, \"xiDNbtdBjGN+5LyLWgjXh24kbb0=\");\n\n_c = Accounting;\nexport default Accounting;\n\nvar _c;\n\n$RefreshReg$(_c, \"Accounting\");","map":{"version":3,"sources":["/home/david/Desktop/mydev/coreui-free-react-admin-template/src/views/Components/Accounting.js"],"names":["Grid","TextField","Select","MenuItem","Button","IconButton","Typography","React","useState","AddCircleOutlineIcon","DeleteOutlineIcon","url","Accounting","people","setPeople","id","Name","type","Amount","count","setCount","names","setnames","searchterm","setsearchterm","results","filter","person","toLowerCase","includes","toLocaleLowerCase","ones","setones","twos","settwos","fives","setfives","tens","settens","twentys","settwentys","fiftys","setfiftys","hundreds","sethundreds","twohundreds","settwohundreds","fivehundreds","setfivehunndreds","twothousands","settwothousands","dateofofferings","setdateofofferings","offeringsAsObject","setOfferings","name","map","k","amount","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","grandTotal","Total","isNaN","reduce","accumulator","item","parseFloat","churchOffering","titheTotal","offeringTotal","missionaryTotal","specialofferingTotal","baptismofferingTotal","birthdayofferingTotal","weddingofferingTotal","childdedicationofferingTotal","committedofferingTotal","buildingfundTotal","submit","fetch","method","headers","body","JSON","stringify","then","res","json","result","alert","window","location","reload","catch","error","console","searchapi","p","event","str","target","value","split","i","length","charAt","toUpperCase","substring","join","currentPeople","x","key","margin","Am","patt","replace","justifySelf","paddingLeft","paddingRight","paddingTop","paddingBottom","price","e","cp","l","lkey","cnt","parseInt","tot"],"mappings":"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","sourcesContent":["import { Grid, TextField, Select, MenuItem, Button, IconButton, Typography } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport { url } from \"../Constants\";\n\n\n\nconst Accounting = () => {\n  const [people, setPeople] = useState([{ id: 1, Name: '', type: '', Amount: '' }]);\n  const [count, setCount] = useState(2);\n  const [names, setnames] = useState([]);\n\n  const [searchterm, setsearchterm] = useState();\n\n  const results = !searchterm ? names : names.filter(person => person.toLowerCase().includes(searchterm.toLocaleLowerCase()));\n\n  const [ones, setones] = useState(0);\n  const [twos, settwos] = useState(0);\n  const [fives, setfives] = useState(0);\n  const [tens, settens] = useState(0);\n  const [twentys, settwentys] = useState(0);\n  const [fiftys, setfiftys] = useState(0);\n  const [hundreds, sethundreds] = useState(0);\n  const [twohundreds, settwohundreds] = useState(0);\n  const [fivehundreds, setfivehunndreds] = useState(0);\n  const [twothousands, settwothousands] = useState(0);\n  const [dateofofferings, setdateofofferings] = useState();\n\n  const [offeringsAsObject,setOfferings] = useState(\n    [\n      {\"price\":2000,\"cnt\":0,\"tot\":0},\n      {\"price\":500,\"cnt\":0,\"tot\":0},\n      {\"price\":200,\"cnt\":0,\"tot\":0},\n      {\"price\":100,\"cnt\":0,\"tot\":0},\n      {\"price\":50,\"cnt\":0,\"tot\":0},\n      {\"price\":20,\"cnt\":0,\"tot\":0},\n      {\"price\":10,\"cnt\":0,\"tot\":0},\n      {\"price\":5,\"cnt\":0,\"tot\":0},\n      {\"price\":2,\"cnt\":0,\"tot\":0},\n      {\"price\":1,\"cnt\":0,\"tot\":0},\n    ]\n  );\n\n  let name = people.map((k) => k.Name);\n\n  let type = people.map((k) => k.type);\n\n  let amount = people.map((k) => k.Amount);\n\n\n\n\n\n  let today = new Date();\n\n  let dd = today.getDate();\n  dd = dd < 10 ? \"0\" + dd : dd;\n\n\n  let mm = (today.getMonth() + 1) > 12 ? today.getMonth() : today.getMonth() + 1;\n  mm = mm < 10 ? \"0\" + mm : mm;\n  if (dd === \"00\") {\n    dd = 31;\n    mm = mm - 1;\n  }\n  let yyyy = today.getFullYear();\n\n  today = yyyy + \"-\" + mm + \"-\" + dd;\n\n  let grandTotal = (1 * ones) + (2 * twos) + (5 * fives) + (10 * tens) + (20 * twentys) + (50 * fiftys) + (100 * hundreds) + (200 * twohundreds) + (500 * fivehundreds) + (2000 * twothousands);\n\n\n  let Total = isNaN(people.reduce((accumulator, item) => isNaN(accumulator) ? 0 : accumulator + parseFloat(item.Amount), 0)) ? 0 : people.reduce((accumulator, item) => isNaN(accumulator) ? 0 : accumulator + parseFloat(item.Amount), 0);\n\n  const churchOffering = grandTotal - Total;\n\n\n\n  let titheTotal = isNaN(people.reduce((accumulator, item) => item.type === 'Tithe' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : people.reduce((accumulator, item) => item.type === 'Tithe' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n  let offeringTotal = isNaN(people.reduce((accumulator, item) => item.type === 'Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : people.reduce((accumulator, item) => item.type === 'Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n  let missionaryTotal = isNaN(people.reduce((accumulator, item) => item.type === 'Missionary' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : people.reduce((accumulator, item) => item.type === 'Missionary' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n  let specialofferingTotal = isNaN(people.reduce((accumulator, item) => item.type === 'Special Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : people.reduce((accumulator, item) => item.type === 'Special Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n  let baptismofferingTotal = isNaN(people.reduce((accumulator, item) => item.type === 'Baptism Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : people.reduce((accumulator, item) => item.type === 'Baptism Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n  let birthdayofferingTotal = isNaN(people.reduce((accumulator, item) => item.type === 'Birthday Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : people.reduce((accumulator, item) => item.type === 'Birthday Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n  let weddingofferingTotal = isNaN(people.reduce((accumulator, item) => item.type === 'Wedding Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : people.reduce((accumulator, item) => item.type === 'Wedding Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n  let childdedicationofferingTotal = isNaN(people.reduce((accumulator, item) => item.type === 'Child Dedication Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : people.reduce((accumulator, item) => item.type === 'Child Dedication Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n  let committedofferingTotal = isNaN(people.reduce((accumulator, item) => item.type === 'Committed Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : people.reduce((accumulator, item) => item.type === 'Committed Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n  let buildingfundTotal = isNaN(people.reduce((accumulator, item) => item.type === 'Building Fund' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : people.reduce((accumulator, item) => item.type === 'Building Fund' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n  const submit = () => {\n    if (name[0] && dateofofferings && (amount !== 0) && churchOffering >= 0) {\n      fetch(`http://${url}/jehovanissi/backend/apis/accounting.php`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n\n        },\n        body: JSON.stringify({\n          name: name,\n          type: type,\n          amount: amount,\n          dateofofferings: dateofofferings,\n          churchOffering: churchOffering,\n          titheTotal: titheTotal,\n          grandTotal: grandTotal,\n          offeringTotal: offeringTotal,\n          missionaryTotal: missionaryTotal,\n          specialofferingTotal: specialofferingTotal,\n          buildingfundTotal: buildingfundTotal,\n          baptismofferingTotal: baptismofferingTotal,\n          birthdayofferingTotal: birthdayofferingTotal,\n          weddingofferingTotal: weddingofferingTotal,\n          childdedicationofferingTotal: childdedicationofferingTotal,\n          committedofferingTotal: committedofferingTotal,\n          twothousands: twothousands,\n          twohundreds: twohundreds,\n          fivehundreds: fivehundreds,\n          hundreds: hundreds,\n          fiftys: fiftys,\n          twentys: twentys,\n          tens: tens,\n          fives: fives,\n          twos: twos,\n          ones: ones\n\n        })\n      })\n        .then(res => res.json())\n        .then((result) => {\n          alert(result);\n          window.location.reload();\n        }).catch((error) => {\n          console.error(error);\n        });\n\n    }\n\n\n    else {\n      alert(\"Input all required and check for mistakes\");\n    }\n  }\n  const searchapi = () => {\n    fetch(`${url}/jehovanissi/backend/apis/searchname.php`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n\n      },\n    })\n      .then(res => res.json())\n      .then((result) => {\n        setnames(result);\n      }).catch((error) => {\n        console.error(error);\n      });\n  }\n\n\n  return (\n    <Grid\n      container\n      justifyContent={\"space-evenly\"}\n    >\n      <Grid\n\n      >\n        {people.map((p) => {\n          return (\n            <Grid key={p.id}>\n              <TextField\n                margin=\"dense\"\n                onChange={(event) => {\n                  searchapi();\n                  const str = event.target.value.split(' ');\n                  for (let i = 0; i < str.length; i++) {\n\n                    str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n                  }\n\n                  const Name = str.join(' ');\n                  setsearchterm(Name);\n                  setPeople((currentPeople) => currentPeople.map(x => x.id === p.id ? {\n                    ...x,\n                    Name\n                  } : x));\n                }} value={p.Name}\n                list=\"namelist\"\n                placeholder=\"Enter Name\"\n\n              />\n              <datalist id=\"namelist\">\n                {results.map((k, key) => {\n                  return (\n                    <option key={key} >{k}</option>\n                  )\n                })}\n              </datalist>\n\n\n              <Select onChange={(event) => {\n                const type = event.target.value;\n                setPeople((currentPeople) => currentPeople.map(x => x.id === p.id ? {\n                  ...x,\n                  type\n                } : x));\n\n              }}\n                style={{ margin: 9 }}\n              >\n                <MenuItem className=\"options\">Select </MenuItem>\n                <MenuItem className=\"options\" value=\"Tithe\">Tithe</MenuItem>\n                <MenuItem className=\"options\" value=\"Offering\">Offering</MenuItem>\n                <MenuItem className=\"options\" value=\"Missionary\">Missionary</MenuItem>\n                <MenuItem className=\"options\" value=\"Special Offering\">Special Offering</MenuItem>\n                <MenuItem className=\"options\" value=\"Baptism Offering\">Baptism Offering</MenuItem>\n                <MenuItem className=\"options\" value=\"Birthday Offering\">Birthday Offering</MenuItem>\n                <MenuItem className=\"options\" value=\"Wedding Offering\">Wedding Offering</MenuItem>\n                <MenuItem className=\"options\" value=\"Child Dedication Offering\">Child Dedication Offering</MenuItem>\n                <MenuItem className=\"options\" value=\"Committed Offering\">Committed Offering</MenuItem>\n                <MenuItem className=\"options\" value=\"Building Fund\">Building Fund</MenuItem>\n              </Select>\n\n              <TextField\n                margin=\"dense\"\n                onChange={(event) => {\n                  const Am = event.target.value;\n                  let patt = /[^0-9]/g;\n                  const Amount = parseFloat(Am.replace(patt, ''));\n                  setPeople((currentPeople) => currentPeople.map(x => x.id === p.id ? {\n                    ...x,\n                    Amount\n                  } : x));\n                }}\n                value={p.Amount}\n                type=\"number\"\n                placeholder=\"Enter Amount\" />\n\n              <IconButton\n                onClick={\n                  () => {\n                    setPeople(currentPeople => currentPeople.filter(x => x.id !== p.id)); setCount(count - 1)\n                  }\n                }><DeleteOutlineIcon/></IconButton>\n            </Grid>\n          )\n\n        })}\n        <IconButton\n          onClick={() => {\n            setPeople(currentPeople => [...currentPeople, {\n              id: count,\n              Name: '',\n              type: '',\n              Amount: '',\n            }]); setCount(count + 1)\n          }}\n        ><AddCircleOutlineIcon /></IconButton>\n\n        <Typography>Total:{Total}</Typography>\n        <Typography>Tithe Total:{JSON.stringify(titheTotal)}</Typography>\n        <Typography>Offering Total:{JSON.stringify(offeringTotal)}</Typography>\n        <Typography>Special Offering Total:{JSON.stringify(specialofferingTotal)}</Typography>\n        <Typography>Missionary Total:{JSON.stringify(missionaryTotal)}</Typography>\n        <Typography>Building Fund Total:{JSON.stringify(buildingfundTotal)}</Typography>\n\n\n        <p>Church Offering:{isNaN(churchOffering) ? 0 : churchOffering}</p>\n        <p>Grand Total:{isNaN(grandTotal) ? 0 : grandTotal}</p>\n        <button onClick={submit} style={{ justifySelf: \"center\", paddingLeft: 90, paddingRight: 90, paddingTop: 25, paddingBottom: 25 }} >Submit</button>\n      </Grid>\n      <Grid>\n        <TextField\n          value={dateofofferings}\n          onChange={(event) => setdateofofferings(event.target.value)}\n          type=\"date\" />\n        <Button\n          onClick={() => setdateofofferings(today)}\n        >\n          Click if date is todays date\n        </Button>\n\n        {offeringsAsObject.map((k,key)=>{\n          return(\n            <>\n            <Typography>{k.price} x </Typography>\n            <TextField\n              onChange={(e)=>{\n                setOfferings(cp=>cp.map((l,lkey)=>lkey===key?\n                  {\n                    ...l,\n                    cnt:parseInt(e.target.value),\n                    tot:parseInt(e.target.value)*k.price\n                  }\n                :l))\n              }}  \n            /> \n            <Typography>{isNaN(k.tot)}</Typography>\n            </>\n          )\n        })}\n        \n        {/* <p>2000 x <input min=\"0\" onChange={(event) => settwothousands(event.target.valueAsNumber)} type=\"number\" /><span>={isNaN(2000 * twothousands) ? 0 : 2000 * twothousands}</span></p>\n        <p>500 x <input min=\"0\" onChange={(event) => setfivehunndreds(event.target.valueAsNumber)} type=\"number\" /><span>={isNaN(500 * fivehundreds) ? 0 : 500 * fivehundreds}</span></p>\n        <p>200 x <input min=\"0\" onChange={(event) => settwohundreds(event.target.valueAsNumber)} type=\"number\" /><span>={isNaN(200 * twohundreds) ? 0 : 200 * twohundreds}</span></p>\n        <p>100 x <input min=\"0\" onChange={(event) => sethundreds(event.target.valueAsNumber)} type=\"number\" /><span>={isNaN(100 * hundreds) ? 0 : 100 * hundreds}</span></p>\n        <p>50 x <input min=\"0\" onChange={(event) => setfiftys(event.target.valueAsNumber)} type=\"number\" /><span>={isNaN(50 * fiftys) ? 0 : 50 * fiftys}</span></p>\n        <p>20 x <input min=\"0\" onChange={(event) => settwentys(event.target.valueAsNumber)} type=\"number\" /><span>={isNaN(20 * twentys) ? 0 : 20 * twentys}</span></p>\n        <p>10 x <input min=\"0\" onChange={(event) => settens(event.target.valueAsNumber)} type=\"number\" /><span>={isNaN(10 * tens) ? 0 : 10 * tens}</span></p>\n        <p>5 x <input min=\"0\" onChange={(event) => setfives(event.target.valueAsNumber)} type=\"number\" /><span>={isNaN(5 * fives) ? 0 : 5 * fives}</span></p>\n        <p>2 x <input min=\"0\" onChange={(event) => settwos(event.target.valueAsNumber)} type=\"number\" /><span>={isNaN(2 * twos) ? 0 : 2 * twos}</span></p>\n        <p>1 x <input min=\"0\" onChange={(event) => setones(event.target.valueAsNumber)} type=\"number\" /><span>={isNaN(1 * ones) ? 0 : 1 * ones}</span></p> */}\n\n\n\n\n      </Grid>\n\n    </Grid>\n\n  )\n}\nexport default Accounting;"]},"metadata":{},"sourceType":"module"}