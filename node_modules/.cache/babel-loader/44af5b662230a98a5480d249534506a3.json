{"ast":null,"code":"var _jsxFileName = \"/home/david/Desktop/mydev/Church-Management/src/views/Components/Dataentry.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { url } from '../Constants';\nimport { DataEntryForms } from './DataEntryForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dataentry = () => {\n  _s();\n\n  const [familyheads, setFamilyheads] = useState([]);\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: '',\n    variant: 'filled',\n    severity: 'error'\n  });\n  const [validity, setValidity] = useState(true);\n  const [age, setAge] = useState();\n  const [data, setData] = useState({\n    Name: '',\n    DOB: new Date(),\n    Gender: 'male',\n    WeddingDate: '',\n    EmailID: '',\n    Mobile: '',\n    Address: '',\n    FamilyHead: '',\n    FamilyID: '',\n    SelfID: '',\n    Android: false,\n    Baptized: false,\n    Married: false\n  });\n  useEffect(() => {\n    let yearDifference = 31536000000;\n    setAge(String(parseInt((new Date().getTime() - new Date(data.DOB).getTime()) / yearDifference).toString().replace(\"-\", \"\")));\n  }, [data.DOB]);\n  const [validated, setValidated] = useState();\n\n  const handleSubmit = event => {\n    const form = event.currentTarget;\n\n    if (form.checkValidity() == false) {\n      // event.preventDefault()\n      event.stopPropagation();\n    } else {\n      setValidated(true);\n    }\n  };\n\n  const addrecords = () => {\n    if (validated) {\n      fetch(`${url}/member_details.php`, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: data.Name,\n          dob: data.DOB,\n          age: age,\n          gender: data.Gender,\n          married: data.Married == false ? 0 : data.Married,\n          weddingdate: data.WeddingDate,\n          emailid: data.EmailID,\n          mobile: data.Mobile,\n          address: data.Address,\n          familyhead: data.FamilyHead,\n          baptized: data.Baptized == false ? 0 : data.Baptized,\n          android: data.Android == false ? 0 : data.Android,\n          familyid: data.FamilyID,\n          selfid: data.SelfID\n        })\n      }).then(res => res.json()).then(result => {\n        setNotify({ ...notify,\n          isOpen: true,\n          severity: result['status'] == 1 ? \"success\" : \"error\",\n          message: String(result['message'])\n        });\n        setData({\n          Name: '',\n          DOB: new Date(),\n          Gender: 'male',\n          WeddingDate: '',\n          EmailID: '',\n          Mobile: '',\n          Address: '',\n          FamilyHead: '',\n          FamilyID: '',\n          SelfID: '',\n          Android: false,\n          Baptized: false,\n          Married: false\n        });\n      }).catch(error => {\n        console.error(error);\n      });\n    } else {\n      setNotify({ ...notify,\n        isOpen: true,\n        message: \"Input all required\"\n      });\n    }\n  };\n\n  useEffect(() => {\n    addrecords();\n    setValidated(false);\n  }, [validated]);\n\n  const searchfamilyhead = () => {\n    fetch(`${url}/searchfamilyhead.php`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(result => {\n      let filteredresult = [...new Set(result)];\n      setFamilyheads(filteredresult);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  useEffect(() => {\n    searchfamilyhead();\n  }, [validated]);\n  return /*#__PURE__*/_jsxDEV(DataEntryForms, {\n    familyheads: familyheads,\n    data: data,\n    notify: notify,\n    setNotify: setNotify,\n    setData: setData,\n    validated: validated,\n    handleSubmit: handleSubmit\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dataentry, \"YOmTFV2O4AQoUZiqsQClFCEJqeo=\");\n\n_c = Dataentry;\nexport default Dataentry;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dataentry\");","map":{"version":3,"sources":["/home/david/Desktop/mydev/Church-Management/src/views/Components/Dataentry.js"],"names":["useEffect","useState","url","DataEntryForms","Dataentry","familyheads","setFamilyheads","notify","setNotify","isOpen","message","variant","severity","validity","setValidity","age","setAge","data","setData","Name","DOB","Date","Gender","WeddingDate","EmailID","Mobile","Address","FamilyHead","FamilyID","SelfID","Android","Baptized","Married","yearDifference","String","parseInt","getTime","toString","replace","validated","setValidated","handleSubmit","event","form","currentTarget","checkValidity","stopPropagation","addrecords","fetch","method","headers","Accept","body","JSON","stringify","name","dob","gender","married","weddingdate","emailid","mobile","address","familyhead","baptized","android","familyid","selfid","then","res","json","result","catch","error","console","searchfamilyhead","filteredresult","Set"],"mappings":"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","sourcesContent":["\nimport { useEffect, useState } from 'react'\nimport { url } from '../Constants'\nimport { DataEntryForms } from './DataEntryForm'\n\n\nconst Dataentry = () => {\n  const [familyheads, setFamilyheads] = useState([]);\n  const [notify, setNotify] = useState({ isOpen: false, message: '', variant: 'filled', severity: 'error' });\n  const [validity, setValidity] = useState(true);\n  const [age, setAge] = useState();\n\n\n  const [data, setData] = useState({\n    Name: '',\n    DOB: new Date(),\n    Gender: 'male',\n    WeddingDate: '',\n    EmailID: '',\n    Mobile: '',\n    Address: '',\n    FamilyHead: '',\n    FamilyID: '',\n    SelfID: '',\n    Android: false,\n    Baptized: false,\n    Married: false,\n  })\n\n  useEffect(() => {\n\n\n    let yearDifference = 31536000000;\n    setAge(String(parseInt((new Date().getTime() - new Date(data.DOB).getTime()) / yearDifference).toString().replace(\"-\", \"\")));\n\n\n  }, [data.DOB])\n\n\n\n  const [validated, setValidated] = useState();\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget\n\n    if (form.checkValidity() == false) {\n      // event.preventDefault()\n\n      event.stopPropagation()\n\n    }\n    else {\n      setValidated(true);\n    }\n  }\n\n\n\n\n  const addrecords = () => {\n    if (validated) {\n\n      fetch(`${url}/member_details.php`, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: data.Name,\n          dob: data.DOB,\n          age: age,\n          gender: data.Gender,\n          married: data.Married==false?0:data.Married,\n          weddingdate: data.WeddingDate,\n          emailid: data.EmailID,\n          mobile: data.Mobile,\n          address: data.Address,\n          familyhead: data.FamilyHead,\n          baptized: data.Baptized==false?0:data.Baptized,\n          android: data.Android==false?0:data.Android,\n          familyid: data.FamilyID,\n          selfid: data.SelfID,\n        }),\n      })\n        .then((res) => res.json())\n        .then((result) => {\n          setNotify({\n            ...notify,\n            isOpen: true,\n            severity: result['status'] == 1 ? \"success\" : \"error\",\n            message: String(result['message'])\n          });\n          setData({\n            Name: '',\n            DOB: new Date(),\n            Gender: 'male',\n            WeddingDate: '',\n            EmailID: '',\n            Mobile: '',\n            Address: '',\n            FamilyHead: '',\n            FamilyID: '',\n            SelfID: '',\n            Android: false,\n            Baptized: false,\n            Married: false,\n          });\n\n        })\n        .catch((error) => {\n          console.error(error)\n        })\n    } else {\n      setNotify({\n        ...notify,\n        isOpen: true,\n        message: \"Input all required\"\n      })\n    }\n  }\n\n  useEffect(() => {\n    addrecords();\n    setValidated(false);\n  }, [validated])\n\n  const searchfamilyhead = () => {\n    fetch(`${url}/searchfamilyhead.php`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        let filteredresult = [...new Set(result)]\n        setFamilyheads(filteredresult)\n      })\n      .catch((error) => {\n        console.error(error)\n      })\n  }\n  useEffect(() => {\n    searchfamilyhead()\n  }, [validated])\n\n  return (\n    <DataEntryForms\n      familyheads={familyheads}\n      data={data}\n      notify={notify}\n      setNotify={setNotify}\n      setData={setData}\n      validated={validated}\n      handleSubmit={handleSubmit}\n    />\n  )\n}\n\nexport default Dataentry\n"]},"metadata":{},"sourceType":"module"}