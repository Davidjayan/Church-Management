{"ast":null,"code":"var _jsxFileName = \"/home/david/Desktop/mydev/coreui-free-react-admin-template/src/views/Components/Dataentry.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { url } from \"../Constants\";\nimport { Grid, TextField, Button, FormControlLabel, RadioGroup, Radio } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dataentry = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [dob, setDob] = useState('');\n  const [gender, setGender] = useState('');\n  const [married, setMarried] = useState(false);\n  const [weddingdate, setWeddingdate] = useState('01/01/1997');\n  const [emailid, setEmailid] = useState('');\n  const [mobile, setMobile] = useState();\n  const [address, setAddress] = useState('');\n  const [familyhead, setFamilyhead] = useState('');\n  const [baptized, setBaptized] = useState(false);\n  const [android, setAndroid] = useState(true);\n  const [familyid, setFamilyid] = useState('');\n  const [selfid, setSelfid] = useState('');\n  const [display, setdisplay] = useState(\"none\");\n  const [familyheads, setFamilyheads] = useState([]);\n  const [validity, setvalidity] = useState();\n  const str = dob.split('-');\n  const today = new Date();\n  const mon = today.getMonth();\n  const year = today.getFullYear();\n  let age;\n  let k = year - 1;\n\n  if (mon >= str[1]) {\n    age = year - str[0];\n  } else {\n    age = k - str[0];\n  }\n\n  const addrecords = () => {\n    if ((familyid && familyhead && address && selfid && name && gender && !mobile.length < 10) !== '') {\n      setvalidity(true);\n    } else {\n      setvalidity(false);\n    }\n\n    if (validity) {\n      let Familyid = familyid;\n      let Selfid = selfid;\n      let Name = name;\n      let Dob = dob;\n      let Age = age;\n      let Gender = gender;\n      let Married = married;\n      let Weddingdate = weddingdate;\n      let Emailid = emailid;\n      let Mobile = mobile;\n      let Address = address;\n      let Familyhead = familyhead;\n      let Baptized = baptized;\n      let Android = android;\n      fetch(\"\".concat(url, \"/jehovanissi/backend/apis/member_details.php\"), {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: Name,\n          dob: Dob,\n          age: Age,\n          gender: Gender,\n          married: Married,\n          weddingdate: Weddingdate,\n          emailid: Emailid,\n          mobile: Mobile,\n          address: Address,\n          familyhead: Familyhead,\n          baptized: Baptized,\n          android: Android,\n          familyid: Familyid,\n          selfid: Selfid\n        })\n      }).then(res => res.json()).then(result => {\n        alert(result);\n        window.location.reload();\n      }).catch(error => {\n        console.error(error);\n      });\n    } else {\n      alert(\"Input All required\");\n    }\n  };\n\n  const searchfamilyhead = () => {\n    fetch(\"\".concat(url, \"/jehovanissi/backend/apis/searchfamilyhead.php\"), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(result => {\n      let filteredresult = [...new Set(result)];\n      setFamilyheads(filteredresult);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    direction: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    justifyItems: \"center\",\n    container: true,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      direction: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        name: \"familyid\",\n        value: familyid,\n        margin: \"dense\",\n        variant: \"outlined\",\n        onChange: event => setFamilyid(event.target.value.toUpperCase()),\n        placeholder: \"Family ID\",\n        label: \"Family ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"selfid\",\n        value: selfid,\n        margin: \"dense\",\n        variant: \"outlined\",\n        placeholder: \"Self ID\",\n        label: \"Self ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"name\",\n        value: name,\n        margin: \"dense\",\n        variant: \"outlined\",\n        onChange: event => {\n          const str = event.target.value.split(' ');\n\n          for (let i = 0; i < str.length; i++) {\n            str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n          }\n\n          const Nameoff = str.join(' ');\n          setName(Nameoff);\n        },\n        placeholder: \"Enter Name\",\n        label: \"Enter Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"date\",\n        name: \"dob\",\n        margin: \"dense\",\n        value: dob,\n        variant: \"outlined\",\n        onChange: event => setDob(event.target.value),\n        placeholder: \"Enter DOB\",\n        label: \"Enter DOB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        row: true,\n        \"aria-label\": \"gender\",\n        name: \"row-radio-buttons-group\",\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"male\",\n          name: \"gender\",\n          label: \"Male\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 34\n          }, this),\n          onChange: event => setGender(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"female\",\n          name: \"gender\",\n          label: \"Female\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 34\n          }, this),\n          onChange: event => setGender(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        row: true,\n        \"aria-label\": \"martial-status\",\n        name: \"row-radio-buttons-group\",\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: true,\n          label: \"Married\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 34\n          }, this),\n          onChange: event => {\n            setMarried(event.target.value === 'true' ? event.target.value = true : event.target.value = false);\n            setdisplay(event.target.value === \"true\" ? \"block\" : \"none\");\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: false,\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 34\n          }, this),\n          label: \"Unmarried\",\n          onChange: event => {\n            setMarried(event.target.value === 'false' ? event.target.value = false : event.target.value = true);\n            setdisplay(event.target.value === \"false\" ? \"none\" : \"block\");\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      style: {\n        display: display\n      },\n      type: \"date\",\n      label: \"Wedding Date\",\n      margin: \"dense\",\n      variant: \"outlined\",\n      defaultValue: \"01/01/2020\",\n      onChange: event => setWeddingdate(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      name: \"emailid\",\n      margin: \"dense\",\n      label: \"Email ID\",\n      variant: \"outlined\",\n      onChange: event => setEmailid(event.target.value),\n      value: emailid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      name: \"mobile\",\n      label: \"Mobile\",\n      margin: \"dense\",\n      variant: \"outlined\",\n      value: mobile,\n      onChange: event => {\n        let patt = /[^0-9]/g;\n        const ph = event.target.value.replace(patt, '');\n        setMobile(ph.slice(0, 10));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      name: \"address\",\n      label: \"Address\",\n      margin: \"dense\",\n      variant: \"outlined\",\n      value: address,\n      onChange: event => setAddress(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      name: \"familyhead\",\n      value: familyhead,\n      margin: \"dense\",\n      variant: \"outlined\",\n      label: \"Family Head\",\n      onChange: event => {\n        searchfamilyhead();\n        const str = event.target.value.split(' ');\n\n        for (let i = 0; i < str.length; i++) {\n          str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n        }\n\n        const familyheadname = str.join(' ');\n        setFamilyhead(familyheadname);\n      },\n      list: \"searchfhead\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n      id: \"searchfhead\",\n      children: familyheads.map((k, key) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          children: k\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n      row: true,\n      \"aria-label\": \"Baptizm\",\n      name: \"row-radio-buttons-group\",\n      children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 30\n        }, this),\n        value: true,\n        label: \"Baptized\",\n        onChange: event => setBaptized(event.target.value === 'true' ? event.target.value = true : event.target.value = false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        value: false,\n        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 30\n        }, this),\n        label: \"Not Baptized\",\n        onChange: event => setBaptized(event.target.value === 'false' ? event.target.value = false : event.target.value = true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n      row: true,\n      \"aria-label\": \"mobile-type\",\n      name: \"row-radio-buttons-group\",\n      children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n        label: \"Android\",\n        value: true,\n        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 30\n        }, this),\n        onChange: event => setAndroid(event.target.value === 'true' ? event.target.value = true : event.target.value = false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        label: \"Normal\",\n        value: false,\n        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 30\n        }, this),\n        onChange: event => setAndroid(event.target.value === 'false' ? event.target.value = false : event.target.value = true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: addrecords,\n      children: \"Add to records\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dataentry, \"7n5UMEuzk8iViDYBYXQ0gnytmcg=\");\n\n_c = Dataentry;\nexport default Dataentry;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dataentry\");","map":{"version":3,"sources":["/home/david/Desktop/mydev/coreui-free-react-admin-template/src/views/Components/Dataentry.js"],"names":["React","useState","url","Grid","TextField","Button","FormControlLabel","RadioGroup","Radio","Dataentry","name","setName","dob","setDob","gender","setGender","married","setMarried","weddingdate","setWeddingdate","emailid","setEmailid","mobile","setMobile","address","setAddress","familyhead","setFamilyhead","baptized","setBaptized","android","setAndroid","familyid","setFamilyid","selfid","setSelfid","display","setdisplay","familyheads","setFamilyheads","validity","setvalidity","str","split","today","Date","mon","getMonth","year","getFullYear","age","k","addrecords","length","Familyid","Selfid","Name","Dob","Age","Gender","Married","Weddingdate","Emailid","Mobile","Address","Familyhead","Baptized","Android","fetch","method","headers","body","JSON","stringify","then","res","json","result","alert","window","location","reload","catch","error","console","searchfamilyhead","filteredresult","Set","event","target","value","toUpperCase","i","charAt","substring","Nameoff","join","patt","ph","replace","slice","familyheadname","map","key"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { url } from \"../Constants\";\nimport { Grid, TextField, Button, FormControlLabel, RadioGroup, Radio } from \"@mui/material\";\n\nconst Dataentry = () => {\n    const [name, setName] = useState('');\n    const [dob, setDob] = useState('');\n    const [gender, setGender] = useState('');\n    const [married, setMarried] = useState(false);\n    const [weddingdate, setWeddingdate] = useState('01/01/1997');\n    const [emailid, setEmailid] = useState('');\n    const [mobile, setMobile] = useState();\n    const [address, setAddress] = useState('');\n    const [familyhead, setFamilyhead] = useState('');\n    const [baptized, setBaptized] = useState(false);\n    const [android, setAndroid] = useState(true);\n    const [familyid, setFamilyid] = useState('');\n    const [selfid, setSelfid] = useState('');\n    const [display, setdisplay] = useState(\"none\");\n    const [familyheads, setFamilyheads] = useState([]);\n    const [validity, setvalidity] = useState();\n\n\n    const str = dob.split('-');\n    const today = new Date();\n    const mon = today.getMonth();\n    const year = today.getFullYear();\n    let age;\n\n\n\n    let k = year - 1;\n\n    if (mon >= str[1]) {\n        age = year - str[0];\n\n\n    }\n    else {\n        age = k - str[0];\n\n    }\n\n    const addrecords = () => {\n        if ((familyid && familyhead && address && selfid && name && gender && (!mobile.length < 10)) !== '') {\n            setvalidity(true);\n        }\n        else {\n            setvalidity(false);\n        }\n\n        if (validity) {\n\n            let Familyid = familyid;\n            let Selfid = selfid;\n            let Name = name;\n            let Dob = dob;\n            let Age = age;\n            let Gender = gender;\n            let Married = married;\n            let Weddingdate = weddingdate;\n            let Emailid = emailid;\n            let Mobile = mobile;\n            let Address = address;\n            let Familyhead = familyhead;\n            let Baptized = baptized;\n            let Android = android;\n\n\n            fetch(`${url}/jehovanissi/backend/apis/member_details.php`, {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n\n                    name: Name,\n                    dob: Dob,\n                    age: Age,\n                    gender: Gender,\n                    married: Married,\n                    weddingdate: Weddingdate,\n                    emailid: Emailid,\n                    mobile: Mobile,\n                    address: Address,\n                    familyhead: Familyhead,\n                    baptized: Baptized,\n                    android: Android,\n                    familyid: Familyid,\n                    selfid: Selfid\n                })\n            })\n                .then(res => res.json())\n                .then((result) => {\n                    alert(result);\n                    window.location.reload();\n                }).catch((error) => {\n                    console.error(error);\n                });\n        }\n        else {\n            alert(\"Input All required\");\n\n        }\n\n\n\n    }\n\n    const searchfamilyhead = () => {\n        fetch(`${url}/jehovanissi/backend/apis/searchfamilyhead.php`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n\n        })\n            .then(res => res.json())\n            .then((result) => {\n                let filteredresult = [...new Set(result)];\n                setFamilyheads(filteredresult);\n            }).catch((error) => {\n                console.error(error);\n            });\n    }\n\n\n    return (\n        <Grid\n            direction=\"column\"\n            alignItems={\"center\"}\n            justifyContent={\"center\"}\n            justifyItems={\"center\"}\n            container\n        >\n            <Grid\n                direction={\"column\"}\n            >\n            <TextField\n                name=\"familyid\"\n                value={familyid}\n                margin=\"dense\"\n                variant=\"outlined\"\n                onChange={(event) => setFamilyid(event.target.value.toUpperCase())}\n                placeholder=\"Family ID\"\n                label=\"Family ID\"\n            />\n\n            <TextField\n                name=\"selfid\"\n                value={selfid}\n                margin=\"dense\"\n                variant=\"outlined\"\n                placeholder=\"Self ID\"\n                label=\"Self ID\"\n            />\n            <TextField\n                name=\"name\"\n                value={name}\n                margin=\"dense\"\n                variant=\"outlined\"\n                onChange={(event) => {\n                    const str = event.target.value.split(' ');\n                    for (let i = 0; i < str.length; i++) {\n\n                        str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n                    }\n\n                    const Nameoff = str.join(' ');\n                    setName(Nameoff)\n                }}\n                placeholder=\"Enter Name\"\n                label=\"Enter Name\"\n            />\n            <TextField\n                type=\"date\"\n                name=\"dob\"\n                margin=\"dense\"\n                value={dob}\n                variant=\"outlined\"\n                onChange={(event) => setDob(event.target.value)}\n                placeholder=\"Enter DOB\"\n                label=\"Enter DOB\"\n            />\n                <RadioGroup row aria-label=\"gender\" name=\"row-radio-buttons-group\">\n                    <FormControlLabel\n                        value=\"male\"\n                        name=\"gender\"\n                        label={\"Male\"}\n                        control={<Radio />}\n                        onChange={(event) => setGender(event.target.value)} />\n                    <FormControlLabel\n                        value=\"female\"\n                        name=\"gender\"\n                        label={\"Female\"}\n                        control={<Radio />}\n                        onChange={(event) => setGender(event.target.value)} />\n                </RadioGroup>\n                <RadioGroup row aria-label=\"martial-status\" name=\"row-radio-buttons-group\">\n                    <FormControlLabel\n                        value={true}\n                        label={\"Married\"}\n                        control={<Radio />}\n                        onChange={(event) => { setMarried(event.target.value === 'true' ? event.target.value = true : event.target.value = false); setdisplay(event.target.value === \"true\" ? \"block\" : \"none\") }} />\n                    <FormControlLabel\n                        value={false}\n                        control={<Radio />}\n                        label=\"Unmarried\"\n                        onChange={(event) => { setMarried(event.target.value === 'false' ? event.target.value = false : event.target.value = true); setdisplay(event.target.value === \"false\" ? \"none\" : \"block\") }} />\n                </RadioGroup>\n            </Grid>\n            <TextField style={{ display: display }}\n                type=\"date\"\n                label=\"Wedding Date\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                defaultValue={\"01/01/2020\"}\n                onChange={(event) => setWeddingdate(event.target.value)}\n            />\n            <TextField\n                name=\"emailid\"\n                margin=\"dense\"\n                label=\"Email ID\"\n                variant=\"outlined\"\n                onChange={(event) => setEmailid(event.target.value)}\n                value={emailid}\n            />\n            <TextField\n                name=\"mobile\"\n                label=\"Mobile\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                value={mobile}\n                onChange={(event) => {\n                    let patt = /[^0-9]/g;\n                    const ph = event.target.value.replace(patt, '');\n                    setMobile(ph.slice(0, 10));\n                }} />\n\n            <TextField\n                name=\"address\"\n                label=\"Address\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                value={address}\n                onChange={(event) => setAddress(event.target.value)}\n            />\n            <TextField\n                name=\"familyhead\"\n                value={familyhead}\n                margin=\"dense\"\n                variant=\"outlined\"\n                label=\"Family Head\"\n                onChange={(event) => {\n                    searchfamilyhead();\n                    const str = event.target.value.split(' ');\n                    for (let i = 0; i < str.length; i++) {\n\n                        str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n                    }\n\n                    const familyheadname = str.join(' ');\n\n                    setFamilyhead(familyheadname)\n                }}\n                list=\"searchfhead\"\n            />\n            <datalist id=\"searchfhead\">\n                {familyheads.map((k, key) => {\n                    return (\n                        <option key={key}>{k}</option>\n                    )\n                })}\n            </datalist>\n            <RadioGroup row aria-label=\"Baptizm\" name=\"row-radio-buttons-group\" >\n                <FormControlLabel\n                    control={<Radio />}\n                    value={true}\n                    label={\"Baptized\"}\n                    onChange={(event) => setBaptized(event.target.value === 'true' ? event.target.value = true : event.target.value = false)}\n                />\n                <FormControlLabel\n                    value={false}\n                    control={<Radio />}\n                    label={\"Not Baptized\"}\n                    onChange={(event) => setBaptized(event.target.value === 'false' ? event.target.value = false : event.target.value = true)}\n                />\n            </RadioGroup>\n\n            <RadioGroup row aria-label=\"mobile-type\" name=\"row-radio-buttons-group\">\n                <FormControlLabel\n                    label={\"Android\"}\n                    value={true}\n                    control={<Radio />}\n                    onChange={(event) => setAndroid(event.target.value === 'true' ? event.target.value = true : event.target.value = false)} />\n                <FormControlLabel\n                    label={\"Normal\"}\n                    value={false}\n                    control={<Radio />}\n                    onChange={(event) => setAndroid(event.target.value === 'false' ? event.target.value = false : event.target.value = true)} />\n            </RadioGroup>\n\n            <Button\n                variant=\"contained\"\n                onClick={addrecords} >\n                Add to records</Button>\n        </Grid>\n    )\n}\n\nexport default Dataentry;"]},"metadata":{},"sourceType":"module"}