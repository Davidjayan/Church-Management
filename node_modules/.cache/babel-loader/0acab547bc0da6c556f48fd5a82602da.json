{"ast":null,"code":"var _jsxFileName = \"/home/david/Desktop/mydev/coreui-free-react-admin-template/src/views/Components/Sub Components/Editaccounting.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Grid, Select, Table, TableHead, TableRow, IconButton, TextField, TableCell, MenuItem, Autocomplete, Typography } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport { url } from \"../../Constants\";\nimport AddCircleOutline from \"@mui/icons-material/AddCircleOutline\";\nimport { CAlert } from \"@coreui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Editaccounting = () => {\n  _s();\n\n  const [date, setdate] = useState('');\n  const [dateset, isDateset] = useState(false);\n  const [data, setdata] = useState([]);\n  const [data2, setdata2] = useState({});\n  const [click, setclick] = useState(0);\n  const [tempname, settempname] = useState('');\n  const [temptype, settemptype] = useState('');\n  const [tempamount, settempamount] = useState(0);\n  const arrOfferingTypes = [{\n    \"name\": \"Select\",\n    \"value\": \"\"\n  }, {\n    \"name\": \"Tithe\",\n    \"value\": \"Tithe\"\n  }, {\n    \"name\": \"Offering\",\n    \"value\": \"Offering\"\n  }, {\n    \"name\": \"Missionary\",\n    \"value\": \"Missionary\"\n  }, {\n    \"name\": \"Special Offering\",\n    \"value\": \"Special Offering\"\n  }, {\n    \"name\": \"Baptism Offering\",\n    \"value\": \"Baptism Offering\"\n  }, {\n    \"name\": \"Birthday Offering\",\n    \"value\": \"Birthday Offering\"\n  }, {\n    \"name\": \"Wedding Offering\",\n    \"value\": \"Wedding Offering\"\n  }, {\n    \"name\": \"Child Dedication Offering\",\n    \"value\": \"Child Dedication Offering\"\n  }, {\n    \"name\": \"Committed Offering\",\n    \"value\": \"Committed Offering\"\n  }, {\n    \"name\": \"Building Fund\",\n    \"value\": \"Building Fund\"\n  }];\n\n  const sumbit = () => {\n    fetch(\"\".concat(url, \"/jehovanissi/api/accounting-fetch.php\"), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        date: date\n      })\n    }).then(res => res.json()).then(result => {\n      if (result !== \"No matches found on Record\") {\n        setdata(result);\n        isDateset(true);\n        data.map((x, key) => {\n          setdata(currentPeople => currentPeople.map((p, l) => l === key ? { ...p,\n            OldType: p.Type\n          } : p));\n        });\n      } else {\n        /*#__PURE__*/\n        _jsxDEV(CAlert, {\n          children: result\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this);\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  const submit2 = () => {\n    fetch(\"\".concat(url, \"/jehovanissi/api/accounting-fetch-denominations.php\"), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        date: date\n      })\n    }).then(res => res.json()).then(result => {\n      if (result !== \"No matches found on Record\") {\n        setdata2(result[0]);\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  let Total = isNaN(data.reduce((accumulator, item) => isNaN(accumulator) ? 0 : accumulator + parseFloat(item.Amount), 0)) ? 0 : data.reduce((accumulator, item) => isNaN(accumulator) ? 0 : accumulator + parseFloat(item.Amount), 0);\n  let grandTotal = 1 * data2['One'] + 2 * data2['Two'] + 5 * data2['Five'] + 10 * data2['Ten'] + 20 * data2['Twenty'] + 50 * data2['Fifty'] + 100 * data2['Hundreds'] + 200 * data2['TwoHundreds'] + 500 * data2['FiveHundreds'] + 2000 * data2['TwoThousands'];\n  let titheTotal = isNaN(data.reduce((accumulator, item) => item.Type === 'Tithe' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : data.reduce((accumulator, item) => item.Type === 'Tithe' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n  let offeringTotal = isNaN(data.reduce((accumulator, item) => item.Type === 'Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : data.reduce((accumulator, item) => item.Type === 'Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n  let missionaryTotal = isNaN(data.reduce((accumulator, item) => item.Type === 'Missionary' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : data.reduce((accumulator, item) => item.Type === 'Missionary' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n  let specialofferingTotal = isNaN(data.reduce((accumulator, item) => item.Type === 'Special Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : data.reduce((accumulator, item) => item.Type === 'Special Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n  let baptismofferingTotal = isNaN(data.reduce((accumulator, item) => item.Type === 'Baptism Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : data.reduce((accumulator, item) => item.Type === 'Baptism Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n  let birthdayofferingTotal = isNaN(data.reduce((accumulator, item) => item.Type === 'Birthday Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : data.reduce((accumulator, item) => item.Type === 'Birthday Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n  let weddingofferingTotal = isNaN(data.reduce((accumulator, item) => item.Type === 'Wedding Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : data.reduce((accumulator, item) => item.Type === 'Wedding Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n  let childdedicationofferingTotal = isNaN(data.reduce((accumulator, item) => item.Type === 'Child Dedication Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : data.reduce((accumulator, item) => item.Type === 'Child Dedication Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n  let committedofferingTotal = isNaN(data.reduce((accumulator, item) => item.Type === 'Committed Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : data.reduce((accumulator, item) => item.Type === 'Committed Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n  let buildingfundTotal = isNaN(data.reduce((accumulator, item) => item.Type === 'Building Fund' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : data.reduce((accumulator, item) => item.Type === 'Building Fund' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n  let churchOffering = grandTotal - Total;\n  let name = data.map(k => k.Name);\n  let type = data.map(k => k.Type);\n  let oldtype = data.map(k => k.OldType);\n  let amount = data.map(k => k.Amount);\n  const [names, setnames] = useState([]);\n  const [searchterm, setsearchterm] = useState();\n  const results = !searchterm ? names : names.filter(person => person.toLowerCase().includes(searchterm.toLocaleLowerCase()));\n\n  const searchapi = () => {\n    fetch(\"\".concat(url, \"/jehovanissi/api/searchname.php\"), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(result => {\n      setnames(result);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  useEffect(() => {\n    searchapi();\n  }, [1]);\n\n  const confirm = () => {\n    fetch(\"\".concat(url, \"/jehovanissi/api/edit-accounting.php\"), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        Name: name,\n        Type: type,\n        Amount: amount,\n        OldType: oldtype,\n        date: date,\n        TwoThousands: data2['TwoThousands'],\n        FiveHundreds: data2['FiveHundreds'],\n        TwoHundreds: data2['TwoHundreds'],\n        Hundreds: data2['Hundreds'],\n        Fifty: data2['Fifty'],\n        Twenty: data2['Twenty'],\n        Ten: data2['Ten'],\n        Five: data2['Five'],\n        Two: data2['Two'],\n        One: data2['One'],\n        ChurchOffering: churchOffering,\n        TitheTotal: titheTotal,\n        OfferingTotal: offeringTotal,\n        SpecialOfferingTotal: specialofferingTotal,\n        BaptismofferingTotal: baptismofferingTotal,\n        BirthdayofferingTotal: birthdayofferingTotal,\n        WeddingofferingTotal: weddingofferingTotal,\n        ChilddedicationofferingTotal: childdedicationofferingTotal,\n        CommittedofferingTotal: committedofferingTotal,\n        MissionaryTotal: missionaryTotal,\n        BuildingFundTotal: buildingfundTotal,\n        GrandTotal: grandTotal\n      })\n    }).then(res => res.json()).then(result => {\n      /*#__PURE__*/\n      _jsxDEV(CAlert, {\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  const deleteRow = (delName, delType) => {\n    fetch(\"\".concat(url, \"/jehovanissi/api/accounting-delete-row.php\"), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        date: date,\n        name: delName,\n        type: delType\n      })\n    }).then(res => res.json()).catch(error => {\n      console.error(error);\n    });\n  };\n\n  const addnew = () => {\n    fetch(\"\".concat(url, \"/jehovanissi/api/accounting-add-new.php\"), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        Name: tempname,\n        date: date,\n        Name: tempname,\n        Type: temptype,\n        Amount: tempamount\n      })\n    }).then(res => res.json()).catch(error => {\n      console.error(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    style: {\n      display: \"grid\",\n      justifyContent: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        type: \"date\",\n        onChange: event => setdate(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn2\",\n        onClick: () => {\n          sumbit();\n          submit2();\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      style: {\n        display: dateset ? \"block\" : \"none\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableRow, {\n          children: /*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: [\"REPORT ON \", date]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }, this), data.map((p, key) => {\n          return /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: p.Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                value: p.Type,\n                onChange: event => {\n                  const Type = event.target.value;\n                  setdata(currentPeople => currentPeople.map((x, l) => l === key ? { ...x,\n                    Type\n                  } : x));\n                },\n                children: arrOfferingTypes.map((val, key) => {\n                  return /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: val.value,\n                    children: val.name\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 49\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                onChange: event => {\n                  const Am = event.target.value;\n                  let patt = /[^0-9]/g;\n                  const Amount = parseFloat(Am.replace(patt, ''));\n                  setdata(currentPeople => currentPeople.map((x, l) => l === key ? { ...x,\n                    Amount\n                  } : x));\n                },\n                value: p.Amount,\n                type: \"number\",\n                placeholder: \"Enter Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                style: {\n                  border: \"none\",\n                  cursor: \"pointer\"\n                },\n                onClick: () => {\n                  setdata(currentPeople => currentPeople.filter((x, id) => id !== key));\n                  deleteRow(p.Name, p.Type);\n                },\n                children: /*#__PURE__*/_jsxDEV(DeleteOutlineIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 33\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 29\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(TableRow, {\n          children: /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              style: {\n                border: \"none\",\n                cursor: \"pointer\"\n              },\n              onClick: () => {\n                setclick(click + 1);\n              },\n              children: /*#__PURE__*/_jsxDEV(AddCircleOutline, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n          style: {\n            display: click === 0 ? \"none\" : \"\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              options: results,\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                onChange: event => {\n                  const str = event.target.value.split(' ');\n\n                  for (let i = 0; i < str.length; i++) {\n                    str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n                  }\n\n                  const Name = str.join(' ');\n                  setsearchterm(Name);\n                  settempname(Name);\n                },\n                value: tempname,\n                placeholder: \"Enter Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              value: temptype,\n              onChange: event => {\n                const Type = event.target.value;\n                settemptype(Type);\n              },\n              children: arrOfferingTypes.map((val, key) => {\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: val.value,\n                  children: val.name\n                }, key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 41\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              onChange: event => {\n                const Am = event.target.value;\n                let patt = /[^0-9]/g;\n                const Amount = parseFloat(Am.replace(patt, ''));\n                settempamount(Amount);\n              },\n              value: tempamount,\n              type: \"number\",\n              placeholder: \"Enter Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                setdata(currentPeople => [...currentPeople, {\n                  Name: tempname,\n                  Type: temptype,\n                  Amount: tempamount\n                }]);\n                addnew();\n                settempname('');\n                settempamount(0);\n                settemptype('');\n              },\n              children: \"Confirm Adding\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Church Offering\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: churchOffering\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: Total\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Grand Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: grandTotal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          direction: \"row\",\n          alignItems: \"center\",\n          margin: 2,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: \"2000 x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            value: data2['TwoThousands'],\n            onChange: event => {\n              setdata2({ ...data2,\n                TwoThousands: event.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"=\", 2000 * data2['TwoThousands']]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          direction: \"row\",\n          alignItems: \"center\",\n          margin: 2,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: \"500 x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            value: data2['FiveHundreds'],\n            onChange: event => setdata2({ ...data2,\n              FiveHundreds: event.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"=\", 500 * data2['FiveHundreds']]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          direction: \"row\",\n          alignItems: \"center\",\n          margin: 2,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: \"200 x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            value: data2['TwoHundreds'],\n            onChange: event => setdata2({ ...data2,\n              TwoHundreds: event.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 25\n          }, this), \"=\", /*#__PURE__*/_jsxDEV(Typography, {\n            children: 200 * data2['TwoHundreds']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          direction: \"row\",\n          alignItems: \"center\",\n          margin: 2,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: \"100 x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            value: data2['Hundreds'],\n            onChange: event => setdata2({ ...data2,\n              Hundreds: event.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"=\", 100 * data2['Hundreds']]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          direction: \"row\",\n          alignItems: \"center\",\n          margin: 2,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: \"50 x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            value: data2['Fifty'],\n            onChange: event => setdata2({ ...data2,\n              Fifty: event.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"=\", 50 * data2['Fifty']]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          direction: \"row\",\n          alignItems: \"center\",\n          margin: 2,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: \"20 x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            value: data2['Twenty'],\n            onChange: event => setdata2({ ...data2,\n              Twenty: event.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 25\n          }, this), \"=\", /*#__PURE__*/_jsxDEV(Typography, {\n            children: 20 * data2['Twenty']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          direction: \"row\",\n          alignItems: \"center\",\n          margin: 2,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: \"10 x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            value: data2['Ten'],\n            onChange: event => setdata2({ ...data2,\n              Ten: event.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"=\", 10 * data2['Ten']]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          direction: \"row\",\n          alignItems: \"center\",\n          margin: 2,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: \"5 x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            value: data2['Five'],\n            onChange: event => setdata2({ ...data2,\n              Five: event.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"=\", 5 * data2['Five']]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 587,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          direction: \"row\",\n          alignItems: \"center\",\n          margin: 2,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: \"2 x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            value: data2['Two'],\n            onChange: event => setdata2({ ...data2,\n              Two: event.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"=\", 2 * data2['Two']]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          direction: \"row\",\n          alignItems: \"center\",\n          margin: 2,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: \"1 x \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            value: data2['One'],\n            onChange: event => setdata2({ ...data2,\n              One: event.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 54\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"=\", 1 * data2['One']]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            confirm();\n          },\n          variant: \"contained\",\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Editaccounting, \"9rzMMoIE/eu0jcdV8PCiVT+EQ9Q=\");\n\n_c = Editaccounting;\nexport default Editaccounting;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editaccounting\");","map":{"version":3,"sources":["/home/david/Desktop/mydev/coreui-free-react-admin-template/src/views/Components/Sub Components/Editaccounting.js"],"names":["Button","Grid","Select","Table","TableHead","TableRow","IconButton","TextField","TableCell","MenuItem","Autocomplete","Typography","React","useEffect","useState","DeleteOutlineIcon","url","AddCircleOutline","CAlert","Editaccounting","date","setdate","dateset","isDateset","data","setdata","data2","setdata2","click","setclick","tempname","settempname","temptype","settemptype","tempamount","settempamount","arrOfferingTypes","sumbit","fetch","method","headers","body","JSON","stringify","then","res","json","result","map","x","key","currentPeople","p","l","OldType","Type","catch","error","console","submit2","Total","isNaN","reduce","accumulator","item","parseFloat","Amount","grandTotal","titheTotal","offeringTotal","missionaryTotal","specialofferingTotal","baptismofferingTotal","birthdayofferingTotal","weddingofferingTotal","childdedicationofferingTotal","committedofferingTotal","buildingfundTotal","churchOffering","name","k","Name","type","oldtype","amount","names","setnames","searchterm","setsearchterm","results","filter","person","toLowerCase","includes","toLocaleLowerCase","searchapi","confirm","TwoThousands","FiveHundreds","TwoHundreds","Hundreds","Fifty","Twenty","Ten","Five","Two","One","ChurchOffering","TitheTotal","OfferingTotal","SpecialOfferingTotal","BaptismofferingTotal","BirthdayofferingTotal","WeddingofferingTotal","ChilddedicationofferingTotal","CommittedofferingTotal","MissionaryTotal","BuildingFundTotal","GrandTotal","deleteRow","delName","delType","addnew","display","justifyContent","event","target","value","val","Am","patt","replace","border","cursor","id","params","str","split","i","length","charAt","toUpperCase","substring","join"],"mappings":"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","sourcesContent":["import { Button, Grid, Select, Table, TableHead, TableRow, IconButton, TextField, TableCell, MenuItem, Autocomplete, Typography } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport { url } from \"../../Constants\";\nimport AddCircleOutline from \"@mui/icons-material/AddCircleOutline\";\nimport { CAlert } from \"@coreui/react\";\n\nconst Editaccounting = () => {\n    const [date, setdate] = useState('');\n    const [dateset, isDateset] = useState(false);\n    const [data, setdata] = useState([]);\n    const [data2, setdata2] = useState({});\n    const [click, setclick] = useState(0);\n    const [tempname, settempname] = useState('');\n    const [temptype, settemptype] = useState('');\n    const [tempamount, settempamount] = useState(0);\n    const arrOfferingTypes = [\n        { \"name\": \"Select\", \"value\": \"\" },\n        { \"name\": \"Tithe\", \"value\": \"Tithe\" },\n        { \"name\": \"Offering\", \"value\": \"Offering\" },\n        { \"name\": \"Missionary\", \"value\": \"Missionary\" },\n        { \"name\": \"Special Offering\", \"value\": \"Special Offering\" },\n        { \"name\": \"Baptism Offering\", \"value\": \"Baptism Offering\" },\n        { \"name\": \"Birthday Offering\", \"value\": \"Birthday Offering\" },\n        { \"name\": \"Wedding Offering\", \"value\": \"Wedding Offering\" },\n        { \"name\": \"Child Dedication Offering\", \"value\": \"Child Dedication Offering\" },\n        { \"name\": \"Committed Offering\", \"value\": \"Committed Offering\" },\n        { \"name\": \"Building Fund\", \"value\": \"Building Fund\" }\n    ]\n\n    const sumbit = () => {\n        fetch(`${url}/jehovanissi/api/accounting-fetch.php`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n\n            },\n            body: JSON.stringify({\n                date: date\n            })\n        })\n            .then(res => res.json())\n            .then((result) => {\n                if (result !== \"No matches found on Record\") {\n                    setdata(result);\n                    isDateset(true);\n                    data.map((x, key) => {\n                        setdata((currentPeople) => currentPeople.map((p, l) => l === key ? {\n                            ...p,\n                            OldType: p.Type,\n                        } : p));\n                    })\n                }\n                else {\n                    <CAlert\n                        \n                    >{result}\n                    </CAlert>\n                }\n\n\n            }).catch((error) => {\n                console.error(error);\n            });\n    }\n    const submit2 = () => {\n        fetch(`${url}/jehovanissi/api/accounting-fetch-denominations.php`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n\n            },\n            body: JSON.stringify({\n                date: date\n            })\n        })\n            .then(res => res.json())\n            .then((result) => {\n                if (result !== \"No matches found on Record\") {\n                    setdata2(result[0]);\n                }\n\n            }).catch((error) => {\n                console.error(error);\n            });\n    }\n\n\n\n\n\n    let Total = isNaN(data.reduce((accumulator, item) => isNaN(accumulator) ? 0 : accumulator + parseFloat(item.Amount), 0)) ? 0 : data.reduce((accumulator, item) => isNaN(accumulator) ? 0 : accumulator + parseFloat(item.Amount), 0);\n\n    let grandTotal = (1 * data2['One']) + (2 * data2['Two']) + (5 * data2['Five']) + (10 * data2['Ten']) + (20 * data2['Twenty']) + (50 * data2['Fifty']) + (100 * data2['Hundreds']) + (200 * data2['TwoHundreds']) + (500 * data2['FiveHundreds']) + (2000 * data2['TwoThousands']);\n\n    let titheTotal = isNaN(data.reduce((accumulator, item) => item.Type === 'Tithe' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : data.reduce((accumulator, item) => item.Type === 'Tithe' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n    let offeringTotal = isNaN(data.reduce((accumulator, item) => item.Type === 'Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : data.reduce((accumulator, item) => item.Type === 'Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n    let missionaryTotal = isNaN(data.reduce((accumulator, item) => item.Type === 'Missionary' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : data.reduce((accumulator, item) => item.Type === 'Missionary' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n    let specialofferingTotal = isNaN(data.reduce((accumulator, item) => item.Type === 'Special Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : data.reduce((accumulator, item) => item.Type === 'Special Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n    let baptismofferingTotal = isNaN(data.reduce((accumulator, item) => item.Type === 'Baptism Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : data.reduce((accumulator, item) => item.Type === 'Baptism Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n    let birthdayofferingTotal = isNaN(data.reduce((accumulator, item) => item.Type === 'Birthday Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : data.reduce((accumulator, item) => item.Type === 'Birthday Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n    let weddingofferingTotal = isNaN(data.reduce((accumulator, item) => item.Type === 'Wedding Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : data.reduce((accumulator, item) => item.Type === 'Wedding Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n    let childdedicationofferingTotal = isNaN(data.reduce((accumulator, item) => item.Type === 'Child Dedication Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : data.reduce((accumulator, item) => item.Type === 'Child Dedication Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n    let committedofferingTotal = isNaN(data.reduce((accumulator, item) => item.Type === 'Committed Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : data.reduce((accumulator, item) => item.Type === 'Committed Offering' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n    let buildingfundTotal = isNaN(data.reduce((accumulator, item) => item.Type === 'Building Fund' ? accumulator + parseFloat(item.Amount) : accumulator, 0)) ? 0 : data.reduce((accumulator, item) => item.Type === 'Building Fund' ? accumulator + parseFloat(item.Amount) : accumulator, 0);\n\n    let churchOffering = grandTotal - Total;\n\n    let name = data.map((k) => k.Name);\n\n    let type = data.map((k) => k.Type);\n\n    let oldtype = data.map((k) => k.OldType);\n\n    let amount = data.map((k) => k.Amount);\n    const [names, setnames] = useState([]);\n\n    const [searchterm, setsearchterm] = useState();\n\n    const results = !searchterm ? names : names.filter(person => person.toLowerCase().includes(searchterm.toLocaleLowerCase()));\n    const searchapi = () => {\n        fetch(`${url}/jehovanissi/api/searchname.php`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n\n            },\n        })\n            .then(res => res.json())\n            .then((result) => {\n                setnames(result);\n            }).catch((error) => {\n                console.error(error);\n            });\n    }\n    useEffect(() => {\n        searchapi();\n    }, [1])\n    const confirm = () => {\n\n\n        fetch(`${url}/jehovanissi/api/edit-accounting.php`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n\n            },\n            body: JSON.stringify({\n                Name: name,\n                Type: type,\n                Amount: amount,\n                OldType: oldtype,\n                date: date,\n                TwoThousands: data2['TwoThousands'],\n                FiveHundreds: data2['FiveHundreds'],\n                TwoHundreds: data2['TwoHundreds'],\n                Hundreds: data2['Hundreds'],\n                Fifty: data2['Fifty'],\n                Twenty: data2['Twenty'],\n                Ten: data2['Ten'],\n                Five: data2['Five'],\n                Two: data2['Two'],\n                One: data2['One'],\n                ChurchOffering: churchOffering,\n                TitheTotal: titheTotal,\n                OfferingTotal: offeringTotal,\n                SpecialOfferingTotal: specialofferingTotal,\n                BaptismofferingTotal: baptismofferingTotal,\n                BirthdayofferingTotal: birthdayofferingTotal,\n                WeddingofferingTotal: weddingofferingTotal,\n                ChilddedicationofferingTotal: childdedicationofferingTotal,\n                CommittedofferingTotal: committedofferingTotal,\n                MissionaryTotal: missionaryTotal,\n                BuildingFundTotal: buildingfundTotal,\n                GrandTotal: grandTotal\n\n            })\n        })\n            .then(res => res.json())\n            .then((result) => {\n                <CAlert\n                    \n                >{result}\n                </CAlert>\n\n            }).catch((error) => {\n                console.error(error);\n            });\n\n    }\n    const deleteRow = (delName, delType) => {\n        fetch(`${url}/jehovanissi/api/accounting-delete-row.php`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n\n            },\n            body: JSON.stringify({\n                date: date,\n                name: delName,\n                type: delType\n\n            })\n        })\n            .then(res => res.json())\n\n            .catch((error) => {\n                console.error(error);\n            });\n    }\n    const addnew = () => {\n        fetch(`${url}/jehovanissi/api/accounting-add-new.php`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n\n            },\n            body: JSON.stringify({\n                Name: tempname,\n                date: date,\n                Name: tempname,\n                Type: temptype,\n                Amount: tempamount\n\n            })\n        })\n            .then(res => res.json())\n            .catch((error) => {\n                console.error(error);\n            });\n    }\n\n    return (\n        <Grid style={{ display: \"grid\", justifyContent: \"center\" }} >\n\n            <Grid>\n                <TextField type=\"date\" onChange={(event) => setdate(event.target.value)} />\n                <Button className=\"btn2\" onClick={() => {\n                    sumbit();\n                    submit2();\n                }} >Submit</Button>\n            </Grid>\n            <Grid style={{ display: dateset ? \"block\" : \"none\" }} >\n\n                <Table>\n                    <TableRow>\n                        <TableHead>\n                            <TableCell>\n                                <Typography>\n                                    REPORT ON {date}\n                                </Typography>\n                            </TableCell>\n                        </TableHead>\n                    </TableRow>\n\n\n\n                    {data.map((p, key) => {\n                        return (\n                            <TableRow key={key} >\n                                <TableCell>\n                                    <p>{p.Name}</p>\n                                </TableCell>\n\n\n                                <TableCell>\n                                    <Select value={p.Type}\n                                        onChange={(event) => {\n                                            const Type = event.target.value;\n                                            setdata((currentPeople) => currentPeople.map((x, l) => l === key ? {\n                                                ...x,\n                                                Type\n                                            } : x));\n\n                                        }} >\n                                        {arrOfferingTypes.map((val, key) => {\n                                            return (\n                                                <MenuItem\n                                                    value={val.value}\n                                                    key={key}\n                                                >\n                                                    {val.name}\n                                                </MenuItem>\n                                            )\n                                        })}\n                                    </Select>\n                                </TableCell>\n                                <TableCell><TextField onChange={(event) => {\n                                    const Am = event.target.value;\n                                    let patt = /[^0-9]/g;\n                                    const Amount = parseFloat(Am.replace(patt, ''));\n                                    setdata((currentPeople) => currentPeople.map((x, l) => l === key ? {\n                                        ...x,\n                                        Amount\n                                    } : x));\n                                }}\n                                    value={p.Amount}\n                                    type=\"number\"\n                                    placeholder=\"Enter Amount\" /></TableCell>\n                                <TableCell>\n                                    <IconButton\n                                        style={{ border: \"none\", cursor: \"pointer\" }}\n                                        onClick={\n                                            () => {\n                                                setdata(currentPeople => currentPeople.filter((x, id) => id !== key));\n                                                deleteRow(p.Name, p.Type);\n\n                                            }\n                                        }>\n                                        <DeleteOutlineIcon />\n                                    </IconButton>\n                                </TableCell>\n\n                            </TableRow>\n                        )\n                    })}\n\n\n                    <TableRow>\n\n                        <TableCell>\n                            <IconButton\n                                style={{ border: \"none\", cursor: \"pointer\" }}\n                                onClick={() => {\n                                    setclick(click + 1);\n\n                                }}\n                            >\n                                <AddCircleOutline />\n                            </IconButton>\n                        </TableCell>\n\n                    </TableRow>\n                    <TableRow style={{ display: click === 0 ? \"none\" : \"\" }} >\n                        <TableCell>\n                            <Autocomplete\n                                options={results}\n                                renderInput={(params) =>\n                                    <TextField\n                                        {...params}\n                                        onChange={(event) => {\n                                            const str = event.target.value.split(' ');\n                                            for (let i = 0; i < str.length; i++) {\n\n                                                str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1);\n                                            }\n                                            const Name = str.join(' ');\n                                            setsearchterm(Name);\n                                            settempname(Name);\n                                        }}\n                                        value={tempname}\n                                        placeholder=\"Enter Name\"\n\n                                    />\n                                }\n                            />\n\n\n                        </TableCell>\n                        <TableCell>\n                            <Select\n                                value={temptype}\n                                onChange={(event) => {\n                                    const Type = event.target.value;\n                                    settemptype(Type);\n\n                                }} >\n                                {arrOfferingTypes.map((val, key) => {\n                                    return (\n                                        <MenuItem\n                                            key={key}\n                                            value={val.value}\n                                        >\n                                            {val.name}\n                                        </MenuItem>\n                                    )\n                                })}\n                            </Select>\n\n                        </TableCell>\n                        <TableCell>\n                            <TextField\n                                onChange={(event) => {\n                                    const Am = event.target.value;\n                                    let patt = /[^0-9]/g;\n                                    const Amount = parseFloat(Am.replace(patt, ''));\n                                    settempamount(Amount);\n                                }}\n                                value={tempamount}\n                                type=\"number\"\n                                placeholder=\"Enter Amount\" />\n                        </TableCell>\n                        <TableCell>\n                            <Button\n                                onClick={() => {\n                                    setdata(currentPeople => [...currentPeople, {\n                                        Name: tempname,\n                                        Type: temptype,\n                                        Amount: tempamount,\n                                    }]);\n\n                                    addnew();\n                                    settempname('');\n                                    settempamount(0);\n                                    settemptype('');\n                                }}\n                            >\n                                Confirm Adding\n                            </Button>\n                        </TableCell>\n\n                    </TableRow>\n\n                    <TableRow>\n                        <TableCell></TableCell>\n                        <TableCell>\n                            <Typography>\n                                Church Offering\n                            </Typography>\n                        </TableCell>\n                        <TableCell>\n                            {churchOffering}\n                        </TableCell>\n\n                    </TableRow>\n\n\n                    <TableRow>\n                        <TableCell></TableCell>\n                        <TableCell>\n                            <Typography>\n                                Total\n                            </Typography>\n                        </TableCell>\n                        <TableCell>\n                            {Total}\n                        </TableCell>\n\n                    </TableRow>\n\n\n                    <TableRow>\n                        <TableCell></TableCell>\n                        <TableCell>\n                            Grand Total\n                        </TableCell>\n                        <TableCell>\n                            {grandTotal}\n                        </TableCell>\n\n                    </TableRow>\n\n\n\n                </Table>\n\n\n\n                <Grid>\n                    <Grid\n                        item\n                        container\n                        direction={\"row\"}\n                        alignItems={\"center\"}\n                        margin={2}\n                    >\n                        <Typography>\n                            2000 x\n                        </Typography>\n                        <TextField\n                            value={data2['TwoThousands']}\n                            onChange={(event) => { setdata2({ ...data2, TwoThousands: event.target.value }) }}\n                        />\n                        <Typography>\n                            ={2000 * (data2['TwoThousands'])}\n                        </Typography>\n                    </Grid>\n                    <Grid\n                        item\n                        container\n                        direction={\"row\"}\n                        alignItems={\"center\"}\n                        margin={2}\n                    >\n                        <Typography>500 x</Typography>\n                        <TextField\n                            value={data2['FiveHundreds']}\n                            onChange={(event) => setdata2({ ...data2, FiveHundreds: event.target.value })}\n                        />\n                        <Typography>\n                            ={500 * (data2['FiveHundreds'])}\n                        </Typography>\n                    </Grid>\n                    <Grid\n                        item\n                        container\n                        direction={\"row\"}\n                        alignItems={\"center\"}\n                        margin={2}\n                    >\n                        <Typography>\n                            200 x\n                        </Typography>\n                        <TextField\n                            value={data2['TwoHundreds']}\n                            onChange={(event) => setdata2({ ...data2, TwoHundreds: event.target.value })}\n                        />=\n                        <Typography>{200 * (data2['TwoHundreds'])}</Typography>\n                    </Grid>\n                    <Grid\n                        item\n                        container\n                        direction={\"row\"}\n                        alignItems={\"center\"}\n                        margin={2}>\n                        <Typography>100 x</Typography>\n                        <TextField value={data2['Hundreds']}\n                            onChange={(event) => setdata2({ ...data2, Hundreds: event.target.value })}\n                        />\n                        <Typography>={100 * (data2['Hundreds'])}</Typography>\n                    </Grid>\n                    <Grid\n                        item\n                        container\n                        direction={\"row\"}\n                        alignItems={\"center\"}\n                        margin={2}>\n                        <Typography>50 x</Typography>\n                        <TextField\n                            value={data2['Fifty']}\n                            onChange={(event) => setdata2({ ...data2, Fifty: event.target.value })}\n                        />\n                        <Typography>={50 * (data2['Fifty'])}</Typography>\n                    </Grid>\n                    <Grid\n                        item\n                        container\n                        direction={\"row\"}\n                        alignItems={\"center\"}\n                        margin={2}\n                    >\n                        <Typography>20 x</Typography>\n                        <TextField value={data2['Twenty']}\n                            onChange={(event) => setdata2({ ...data2, Twenty: event.target.value })}\n                        />=\n                        <Typography>{20 * (data2['Twenty'])}</Typography>\n                    </Grid>\n                    <Grid\n                        item\n                        container\n                        direction={\"row\"}\n                        alignItems={\"center\"}\n                        margin={2}\n                    >\n                        <Typography>10 x</Typography>\n                        <TextField value={data2['Ten']}\n                            onChange={(event) => setdata2({ ...data2, Ten: event.target.value })}\n                        />\n                        <Typography>={10 * (data2['Ten'])}</Typography>\n                    </Grid>\n                    <Grid\n                        item\n                        container\n                        direction={\"row\"}\n                        alignItems={\"center\"}\n                        margin={2}\n                    >\n                        <Typography>5 x</Typography>\n                        <TextField value={data2['Five']}\n                            onChange={(event) => setdata2({ ...data2, Five: event.target.value })}\n                        />\n                        <Typography>={5 * (data2['Five'])}</Typography>\n                    </Grid>\n                    <Grid\n                        item\n                        container\n                        direction={\"row\"}\n                        alignItems={\"center\"}\n                        margin={2}\n                    >\n                        <Typography>2 x</Typography>\n                        <TextField value={data2['Two']}\n                            onChange={(event) => setdata2({ ...data2, Two: event.target.value })}\n                        />\n                        <Typography>={2 * (data2['Two'])}</Typography>\n                    </Grid>\n                    <Grid\n                        item\n                        container\n                        direction={\"row\"}\n                        alignItems={\"center\"}\n                        margin={2}\n                    >\n                        <Typography>1 x </Typography><TextField value={data2['One']}\n                            onChange={(event) => setdata2({ ...data2, One: event.target.value })}\n                        />\n                        <Typography>={1 * (data2['One'])}</Typography>\n                    </Grid>\n                    <Button\n                        onClick={() => { confirm() }}\n                        variant=\"contained\"\n                    >\n                        Confirm\n                    </Button>\n                </Grid>\n\n            </Grid>\n\n        </Grid>\n    )\n}\n\nexport default Editaccounting;"]},"metadata":{},"sourceType":"module"}