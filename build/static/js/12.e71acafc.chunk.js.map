{"version":3,"sources":["views/Components/Support/AlertMessage.js","views/Constants.js","../node_modules/@mui/material/FormControl/useFormControl.js","../node_modules/@mui/material/FormControl/formControlState.js","../node_modules/@mui/material/FormControl/FormControlContext.js","views/Components/DataEntryForm.js","views/Components/Dataentry.js"],"names":["AlertMessage","props","notify","setNotify","direction","in","isOpen","severity","variant","style","alignContent","alignItems","fontSize","position","zIndex","marginLeft","action","color","size","onClick","sx","mb","points","message","url","useFormControl","React","FormControlContext","formControlState","states","muiFormControl","reduce","acc","state","DataEntryForms","data","familyheads","justifyItems","container","item","validated","closeFunc","window","location","reload","md","width","marginRight","name","value","FamilyID","margin","onChange","event","setData","target","toUpperCase","placeholder","label","required","invalid","SelfID","onFocus","slice","readOnly","Name","str","split","i","length","charAt","substring","Name1","join","replace","type","DOB","row","Gender","justifyContent","control","Married","display","WeddingDate","EmailID","includes","Mobile","ph","Address","address","FamilyHead","familyheadname","list","id","map","f","key","Baptized","Android","handleSubmit","Dataentry","useState","setFamilyheads","age","setAge","Date","useEffect","String","parseInt","getTime","toString","console","log","setValidated","fetch","method","headers","Accept","body","JSON","stringify","dob","gender","married","weddingdate","emailid","mobile","familyhead","baptized","android","familyid","selfid","then","res","json","result","catch","error","filteredresult","Set","currentTarget","checkValidity","stopPropagation"],"mappings":"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","file":"static/js/12.e71acafc.chunk.js","sourcesContent":["import { Alert, Collapse,Slide ,IconButton } from \"@mui/material\";\nimport React,{ useState } from \"react\";\nimport CloseIcon from '@mui/icons-material/Close';\n\nexport const AlertMessage=(props)=>{\n  const {notify,setNotify} = props;\n    return(\n        <Slide direction=\"down\" in={notify.isOpen}>\n        <Alert\n          severity={notify.severity}\n          variant={notify.variant}\n          style={{\n            alignContent:\"center\",\n            alignItems:\"center\",\n            fontSize:18,\n            position:'fixed',\n            zIndex:3,\n            marginLeft:'25%'\n          }}\n          action={\n            <IconButton\n              aria-label=\"close\"\n              color=\"inherit\"\n              size=\"large\"\n              onClick={() => {\n                setNotify({...notify,isOpen:false});\n              }}\n            >\n              <CloseIcon fontSize=\"inherit\" />\n            </IconButton>\n          }\n          sx={{ mb:7 }}\n          points=\"0,100 50,00, 100,100\"\n        >\n         {notify.message}\n        </Alert>\n      </Slide>\n    )\n}","// export const url = \"http://backendjnag.rf.gd\";\nexport const url = \"https://admin-management-website.000webhostapp.com/Church-management-api/api\"; \n// export const url = \"http://localhost/Church-management-api/api\"; ","import * as React from 'react';\nimport FormControlContext from './FormControlContext';\nexport default function useFormControl() {\n  return React.useContext(FormControlContext);\n}","export default function formControlState({\n  props,\n  states,\n  muiFormControl\n}) {\n  return states.reduce((acc, state) => {\n    acc[state] = props[state];\n\n    if (muiFormControl) {\n      if (typeof props[state] === 'undefined') {\n        acc[state] = muiFormControl[state];\n      }\n    }\n\n    return acc;\n  }, {});\n}","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nconst FormControlContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  FormControlContext.displayName = 'FormControlContext';\n}\n\nexport default FormControlContext;","import { CButton, CCol, CForm, CFormFeedback, CFormInput, CFormLabel, CFormTextarea } from '@coreui/react'\nimport { FormControlLabel, Radio, RadioGroup } from '@mui/material'\nimport { AlertMessage } from './Support/AlertMessage'\n\n\n\nexport const DataEntryForms = (props)=>{\n    const data = props.data;\n    const familyheads = props.familyheads;\n    return(\n        <CForm direction={'column'} alignItems={'center'} justifyItems={'stretch'} container item validated={props.validated} >\n      <AlertMessage\n      closeFunc={window.location.reload}\n        notify={props.notify}\n        setNotify={props.setNotify}\n      />\n      <CCol md={4}>\n        <CFormLabel>\n          Family ID\n        </CFormLabel>\n        <CFormInput\n          style={{ width: 300, marginRight: 15 }}\n          name=\"familyid\"\n          value={data.FamilyID}\n          margin=\"dense\"\n          variant=\"outlined\"\n          onChange={(event) => {\n            props.setData({ ...data, FamilyID: event.target.value.toUpperCase() })\n          }}\n          placeholder=\"Family ID\"\n          label=\"Family ID\"\n          required\n          invalid={data.FamilyID ? false : true}\n        />\n        <CFormFeedback\n          invalid\n        >Field is required</CFormFeedback>\n      </CCol>\n      <CCol md={4} >\n        <CFormLabel>\n          Self ID\n        </CFormLabel>\n        <CFormInput\n          name=\"selfid\"\n          style={{ width: 300, marginRight: 15 }}\n          value={data.SelfID}\n          margin=\"dense\"\n          variant=\"outlined\"\n          onFocus={() => props.setData({ ...data, SelfID: data.FamilyID.slice(3) })}\n          placeholder=\"Self ID\"\n          label=\"Self ID\"\n          required\n          readOnly\n          invalid={data.SelfID ? false : true}\n        />\n        <CFormFeedback\n          invalid\n        >\n          Field is required\n        </CFormFeedback>\n      </CCol>\n\n      <CCol>\n        <CFormLabel>\n          Name\n        </CFormLabel>\n        <CFormInput\n          name=\"name\"\n          value={data.Name}\n          style={{ width: 300, marginRight: 15 }}\n          margin=\"dense\"\n          variant=\"outlined\"\n          onChange={(event) => {\n            const str = event.target.value.split(' ')\n            for (let i = 0; i < str.length; i++) {\n              str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1)\n            }\n            const patt = /[^a-zA-Z ]/g;\n            const Name1 = str.join(' ').replace(patt, '');\n            props.setData({ ...data, Name: Name1 })\n          }}\n          placeholder=\"Enter Name\"\n          label=\"Enter Name\"\n          // invalid={data.name ? false : true}\n          required\n        />\n        <CFormFeedback\n          invalid\n        >\n          Please fill this field\n        </CFormFeedback>\n      </CCol>\n      <CCol md={4} >\n        <CFormLabel>\n          Date Of Birth\n        </CFormLabel>\n        <CFormInput\n          type={'date'}\n          style={{ width: 300, marginRight: 15 }}\n          value={data.DOB}\n          onChange={(event) => props.setData({ ...data, DOB: event.target.value })}\n          label=\"Enter DOB\"\n          required\n          invalid={data.DOB ? false : true}\n        />\n        <CFormFeedback\n          invalid\n        >\n          Field is required\n        </CFormFeedback>\n      </CCol>\n      <CCol md={4} >\n        <CFormLabel>\n          Gender\n        </CFormLabel>\n        <RadioGroup\n          row\n          value={data.Gender}\n          aria-label=\"gender\"\n          name=\"row-radio-buttons-group\"\n          style={{\n            width: 300,\n            justifyContent: 'space-evenly',\n          }}\n        >\n          <FormControlLabel\n            value=\"male\"\n            name=\"gender\"\n            label={'Male'}\n            control={<Radio />}\n            onChange={(event) => props.setData({ ...data, Gender: event.target.value })}\n          />\n          <FormControlLabel\n            value=\"female\"\n            name=\"gender\"\n            label={'Female'}\n            control={<Radio />}\n            onChange={(event) => props.setData({ ...data, Gender: event.target.value })}\n          />\n        </RadioGroup>\n      </CCol>\n      <CCol md={4} >\n        <CFormLabel>\n          Martial status\n        </CFormLabel>\n        <RadioGroup\n          row\n          aria-label=\"martial-status\"\n          name=\"row-radio-buttons-group\"\n          value={data.Married==1||data.Married==true?true:false}\n          style={{\n            width: 300,\n            justifyContent: 'space-evenly',\n          }}\n        >\n          <FormControlLabel\n            value={true}\n            label={'Married'}\n            control={<Radio />}\n            onChange={(event) => {\n              props.setData({ ...data, Married: event.target.value == 'true' ? true : false })\n            }}\n          />\n          <FormControlLabel\n            value={false}\n            control={<Radio />}\n            label={'Unmarried'}\n            onChange={(event) => {\n              props.setData({ ...data, Married: event.target.value == 'true' ? true : false })\n            }}\n          />\n        </RadioGroup>\n      </CCol>\n      <CCol md={4}\n        style={{\n          display: data.Married == true || data.Married==1? 'block' : 'none',\n          width: 300,\n          marginRight: 15,\n        }}\n      >\n        <CFormLabel>\n          Wedding Date\n        </CFormLabel>\n        <CFormInput\n          type=\"date\"\n          label=\"Wedding Date\"\n          margin=\"dense\"\n          variant=\"outlined\"\n          value={data.WeddingDate}\n          onChange={(event) => props.setData({ ...data, WeddingDate:event.target.value })}\n        />\n      </CCol>\n\n      <CCol>\n        <CFormLabel>\n          Email\n        </CFormLabel>\n        <CFormInput\n          name=\"emailid\"\n          placeholder='Enter Emailid'\n          margin=\"dense\"\n          label=\"Email ID\"\n          style={{ width: 300, marginRight: 15 }}\n          variant=\"outlined\"\n          onChange={(event) => props.setData({ ...data, EmailID: event.target.value })}\n          value={data.EmailID}\n          invalid={(!data.EmailID || (data.EmailID.includes('@') && data.EmailID.includes('.com'))) ? false : true}\n        />\n        <CFormFeedback\n          invalid\n        >\n          Please input valid email address\n        </CFormFeedback>\n      </CCol>\n      <CCol>\n        <CFormLabel>\n          Mobile\n        </CFormLabel>\n        <CFormInput\n          name=\"mobile\"\n          style={{ width: 300, marginRight: 15 }}\n          label=\"Mobile\"\n          placeholder='Enter mobile number'\n          margin=\"dense\"\n          variant=\"outlined\"\n          value={data.Mobile}\n          onChange={(event) => {\n            let patt = /[^0-9]/g\n            const ph = event.target.value.replace(patt, '')\n            props.setData({ ...data, Mobile: ph.slice(0, 10) })\n          }}\n          required\n          invalid={(data.Mobile.length === 10) ? false : true}\n        />\n        <CFormFeedback invalid>\n          Enter valid number\n        </CFormFeedback>\n      </CCol>\n\n\n\n      <CCol>\n        <CFormLabel>\n          Address\n        </CFormLabel>\n        <CFormTextarea\n          name=\"address\"\n          label=\"Address\"\n          placeholder='Enter address'\n          style={{ width: 300, marginRight: 15 }}\n          margin=\"dense\"\n          variant=\"outlined\"\n          value={data.Address}\n          onChange={(event) => {\n            const str = event.target.value.split(',')\n            for (let i = 0; i < str.length; i++) {\n              str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1)\n            }\n            const address = str.join(',')\n            props.setData({ ...data, Address: address })\n          }}\n          required\n          invalid={data.Address ? false : true}\n        />\n        <CFormFeedback\n          invalid\n        >\n          Field is required\n        </CFormFeedback>\n      </CCol>\n      <CCol md={4}>\n        <CFormLabel>\n          Family head\n        </CFormLabel>\n        <CFormInput\n          name=\"familyhead\"\n          value={data.FamilyHead}\n          margin=\"dense\"\n          placeholder='Enter family head'\n          variant=\"outlined\"\n          label=\"Family Head\"\n          onChange={(event) => {\n            const str = event.target.value.split(' ')\n            for (let i = 0; i < str.length; i++) {\n              str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1)\n            }\n            const familyheadname = str.join(' ')\n            props.setData({ ...data, FamilyHead: familyheadname })\n          }}\n          required\n          invalid={data.FamilyHead ? false : true}\n          list='listforfamilyheads'\n        />\n        <datalist id='listforfamilyheads'>\n          {familyheads.map((f, key) => {\n            return (\n              <option key={key} >{f}</option>\n            )\n          })}\n        </datalist>\n        <CFormFeedback invalid>\n          Field is required\n        </CFormFeedback>\n      </CCol>\n      <CCol md={4}>\n        <CFormLabel>\n          Baptism\n        </CFormLabel>\n        <RadioGroup\n          row\n          aria-label=\"Baptizm\"\n          value={data.Baptized==true||data.Baptized==1?true:false}\n          name=\"row-radio-buttons-group\"\n          style={{\n            width: 300,\n            justifyContent: 'space-evenly',\n          }}\n        >\n          <FormControlLabel\n            control={<Radio />}\n            value={true}\n            label={'Baptized'}\n            onChange={(event) =>\n              props.setData({ ...data, Baptized: event.target.value == 'true' ? true : false })\n            }\n          />\n          <FormControlLabel\n            value={false}\n            control={<Radio />}\n            label={'Not Baptized'}\n            onChange={(event) =>\n              props.setData({ ...data, Baptized: event.target.value == 'true' ? true : false })\n            }\n          />\n        </RadioGroup>\n      </CCol>\n      <CCol md={4}>\n        <CFormLabel>\n          Mobile type\n        </CFormLabel>\n        <RadioGroup\n          row\n          value={data.Android==1||data.Android==true?true:false}\n          aria-label=\"mobile-type\"\n          name=\"row-radio-buttons-group\"\n          style={{\n            width: 300,\n            justifyContent: 'space-evenly',\n          }}\n        >\n          <FormControlLabel\n            label={'Android'}\n            value={true}\n            control={<Radio />}\n            onChange={(event) =>\n              props.setData({ ...data, Android: event.target.value == 'true' ? true : false })\n            }\n          />\n          <FormControlLabel\n            label={'Normal'}\n            value={false}\n            control={<Radio />}\n            onChange={(event) =>\n              props.setData({ ...data, Android: event.target.value == 'true' ? true : false })\n            }\n          />\n        </RadioGroup>\n      </CCol>\n\n      <CButton onClick={props.handleSubmit} >\n        Add to records\n      </CButton>\n    </CForm>\n    )\n} ","\nimport { useEffect, useState } from 'react'\nimport { url } from '../Constants'\nimport { DataEntryForms } from './DataEntryForm'\n\n\nconst Dataentry = () => {\n  const [familyheads, setFamilyheads] = useState([]);\n  const [notify, setNotify] = useState({ isOpen: false, message: '', variant: 'filled', severity: 'error' });\n  const [validity, setValidity] = useState(true);\n  const [age, setAge] = useState();\n\n\n  const [data, setData] = useState({\n    Name: '',\n    DOB: new Date(),\n    Gender: 'male',\n    WeddingDate: '',\n    EmailID: '',\n    Mobile: '',\n    Address: '',\n    FamilyHead: '',\n    FamilyID: '',\n    SelfID: '',\n    Android: false,\n    Baptized: false,\n    Married: false,\n  })\n\n  useEffect(() => {\n\n\n    let yearDifference = 31536000000;\n    setAge(String(parseInt((new Date().getTime() - new Date(data.DOB).getTime()) / yearDifference).toString().replace(\"-\", \"\")));\n\n\n    console.log(age);\n  }, [data.DOB])\n\n\n\n  const [validated, setValidated] = useState();\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget\n\n    if (form.checkValidity() == false) {\n      // event.preventDefault()\n\n      event.stopPropagation()\n\n    }\n    else {\n      setValidated(true);\n    }\n  }\n\n\n\n\n  const addrecords = () => {\n    if (validated) {\n\n      fetch(`${url}/member_details.php`, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: data.Name,\n          dob: data.DOB,\n          age: age,\n          gender: data.Gender,\n          married: data.Married==false?0:data.Married,\n          weddingdate: data.WeddingDate,\n          emailid: data.EmailID,\n          mobile: data.Mobile,\n          address: data.Address,\n          familyhead: data.FamilyHead,\n          baptized: data.Baptized==false?0:data.Baptized,\n          android: data.Android==false?0:data.Android,\n          familyid: data.FamilyID,\n          selfid: data.SelfID,\n        }),\n      })\n        .then((res) => res.json())\n        .then((result) => {\n          setNotify({\n            ...notify,\n            isOpen: true,\n            severity: result['status'] == 1 ? \"success\" : \"error\",\n            message: String(result['message'])\n          });\n          setData({\n            Name: '',\n            DOB: new Date(),\n            Gender: 'male',\n            WeddingDate: '',\n            EmailID: '',\n            Mobile: '',\n            Address: '',\n            FamilyHead: '',\n            FamilyID: '',\n            SelfID: '',\n            Android: false,\n            Baptized: false,\n            Married: false,\n          });\n\n        })\n        .catch((error) => {\n          console.error(error)\n        })\n    } else {\n      setNotify({\n        ...notify,\n        isOpen: true,\n        message: \"Input all required\"\n      })\n    }\n  }\n\n  useEffect(() => {\n    addrecords();\n    setValidated(false);\n  }, [validated])\n\n  const searchfamilyhead = () => {\n    fetch(`${url}/searchfamilyhead.php`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        let filteredresult = [...new Set(result)]\n        setFamilyheads(filteredresult)\n      })\n      .catch((error) => {\n        console.error(error)\n      })\n  }\n  useEffect(() => {\n    searchfamilyhead()\n  }, [validated])\n\n  return (\n    <DataEntryForms\n      familyheads={familyheads}\n      data={data}\n      notify={notify}\n      setNotify={setNotify}\n      setData={setData}\n      validated={validated}\n      handleSubmit={handleSubmit}\n    />\n  )\n}\n\nexport default Dataentry\n"],"sourceRoot":""}