{"version":3,"sources":["views/Constants.js","views/Components/Support/AlertMessage.js","views/Components/Sub Components/Inputchurchattendance.js"],"names":["url","AlertMessage","props","notify","setNotify","direction","in","isOpen","severity","variant","style","alignContent","alignItems","fontSize","position","zIndex","marginLeft","action","color","size","onClick","sx","mb","points","message","Inputchurchattendance","useState","namelist","setnamelist","churchattendance","setchurchattendance","date","setdate","service","setservice","obj","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","useEffect","fetch","method","headers","then","res","json","result","catch","error","console","i","count","length","push","className","onChange","event","target","value","type","map","p","name","present","cp","x","body","JSON","stringify","window","location","reload"],"mappings":"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","file":"static/js/17.1206d60d.chunk.js","sourcesContent":["// export const url = \"http://backendjnag.rf.gd\";\nexport const url = \"http://localhost/Church-management-api/api\"; ","import { Alert, Collapse,Slide ,IconButton } from \"@mui/material\";\nimport React,{ useState } from \"react\";\nimport CloseIcon from '@mui/icons-material/Close';\n\nexport const AlertMessage=(props)=>{\n  const {notify,setNotify} = props;\n    return(\n        <Slide direction=\"down\" in={notify.isOpen}>\n        <Alert\n          severity={notify.severity}\n          variant={notify.variant}\n          style={{\n            alignContent:\"center\",\n            alignItems:\"center\",\n            fontSize:18,\n            position:'fixed',\n            zIndex:3,\n            marginLeft:'25%'\n          }}\n          action={\n            <IconButton\n              aria-label=\"close\"\n              color=\"inherit\"\n              size=\"large\"\n              onClick={() => {\n                setNotify({...notify,isOpen:false})\n              }}\n            >\n              <CloseIcon fontSize=\"inherit\" />\n            </IconButton>\n          }\n          sx={{ mb:7 }}\n          points=\"0,100 50,00, 100,100\"\n        >\n         {notify.message}\n        </Alert>\n      </Slide>\n    )\n}","import { CAlert } from \"@coreui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport { url } from \"../../Constants\";\nimport { AlertMessage } from \"../Support/AlertMessage\";\n\nconst Inputchurchattendance = () => {\n\n  const [namelist, setnamelist] = useState([]);\n  const [churchattendance, setchurchattendance] = useState([]);\n  const [date, setdate] = useState();\n  const [service, setservice] = useState();\n  const [notify, setNotify] = useState({ isOpen: false, message: '', variant: 'filled', severity: 'error' });\n\n  const obj = [];\n\n  let today = new Date();\n\n  let dd = today.getDate();\n  dd = dd < 10 ? \"0\" + dd : dd;\n  if (dd === \"00\") {\n    dd = 31;\n    mm = mm - 1;\n  }\n\n  let mm = (today.getMonth() + 1) > 12 ? today.getMonth() : today.getMonth() + 1;\n  mm = mm < 10 ? \"0\" + mm : mm;\n  let yyyy = today.getFullYear();\n\n\n  today = yyyy + \"-\" + mm + \"-\" + dd;\n\n\n  useEffect(() => {\n    fetch(`${url}/searchname.php`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n\n      },\n    })\n      .then(res => res.json())\n      .then((result) => {\n        setnamelist(result);\n      }).catch((error) => {\n        console.error(error);\n      });\n  }, []);\n\n  let i = 0;\n  const count = namelist.length;\n\n  for (i = 0; i < count; i++) {\n    if (namelist[i] !== '') {\n      obj.push({ \"name\": namelist[i], \"present\": false });\n    }\n  }\n\n  useEffect(() => {\n\n\n    setchurchattendance(obj);\n\n  }, [namelist]);\n\n  const submit = () => {\n    if (churchattendance) {\n      fetch(`${url}/church_attendance.php`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n\n        },\n        body: JSON.stringify({\n          churchattendance: churchattendance,\n          date: date,\n          service: service\n\n\n        })\n      })\n        .then(res => res.json())\n        .then((result) => {\n          setNotify({\n            ...notify,\n            isOpen:true,\n            message:result\n          })\n          window.location.reload();\n        }).catch((error) => {\n          console.error(error);\n        });\n\n    }\n  }\n\n  return (\n\n    <div className=\"church-attendance-body\">\n      <AlertMessage\n        notify={notify}\n        setNotify={setNotify}\n      />\n      <select className=\"sel-inp\" onChange={(event) => setservice(event.target.value)}>\n        <option value=\"FIRST SERVICE\">FIRST SERVICE</option>\n        <option value=\"SECOND SERVICE\">SECOND SERVICE</option>\n        <option value=\"THIRD SERVICE\">THIRD SERVICE</option>\n\n\n      </select>\n      <input className=\"inp\" type=\"date\" onChange={(event) => { setdate(event.target.value) }} ></input>\n      <button className=\"btn\" onClick={() => {\n        setdate(today)\n      }}>Click if Today</button>\n      <p>Date:{date}</p>\n      <table>\n        <thead>\n          <tr><th>Name</th>\n            <th>Present</th>\n            <th>Absent</th></tr>\n        </thead>\n        <tbody>\n          {churchattendance.map((p) => {\n            return (\n              <tr key={p.name} >\n                <td>{p.name}</td>\n                <td ><label className=\"container\"><input\n\n                  onChange={\n                    (event) => {\n                      let temp = true;\n\n                      event.target.value === 'true' ? temp = true : temp = false;\n                      const present = temp;\n                      setchurchattendance((cp) => cp.map(x => x.name === p.name ? {\n                        ...x,\n                        present\n                      } : x))\n                    }} type=\"radio\" name={p.name} value=\"true\" /> <span className=\"fas fa-check present\"></span> </label></td>\n                <td ><label className=\"container\"><input\n                  onChange={\n                    (event) => {\n                      let temp = true;\n                      event.target.value === 'false' ? temp = false : temp = true;\n                      const present = temp;\n                      setchurchattendance((cp) => cp.map(x => x.name === p.name ? {\n                        ...x,\n                        present\n                      } : x))\n                    }}\n                  type=\"radio\" name={p.name} value=\"false\" /> <span className=\"fas fa-times absent\"></span></label> </td>\n              </tr>\n            )\n          })}</tbody>\n        <tfoot></tfoot>\n\n\n      </table>\n\n      <button className=\"btn\" onClick={() => { submit() }}>Submit</button>\n\n    </div>\n  )\n}\n\nexport default Inputchurchattendance;"],"sourceRoot":""}