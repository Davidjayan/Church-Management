{"version":3,"sources":["views/Constants.js","views/Components/Support/AlertMessage.js","views/Components/Sub Components/newstudententry.js","views/Components/Sub Components/Inputstudentattendance.js"],"names":["url","AlertMessage","props","notify","setNotify","direction","in","isOpen","severity","variant","style","alignContent","alignItems","fontSize","position","zIndex","marginLeft","action","color","size","onClick","sx","mb","points","message","Newstudententry","useState","newname","setnewname","names","setnames","searchterm","setsearchterm","results","filter","person","toLowerCase","includes","toLocaleLowerCase","className","TextField","required","placeholder","value","onChange","event","fetch","method","headers","then","res","json","result","catch","error","console","str1","target","split","j","length","charAt","toUpperCase","substring","newstr","join","list","id","map","k","key","body","JSON","stringify","window","location","reload","Inputstudentattendance","studentnames","setstudentnames","date","setdate","obj","studentattendance","setstudentattendance","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","useEffect","i","count","push","type","p","name","present","cp","x"],"mappings":"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","file":"static/js/18.7ecbaf2b.chunk.js","sourcesContent":["// export const url = \"http://backendjnag.rf.gd\";\nexport const url = \"http://localhost/Church-management-api/api\"; ","import { Alert, Collapse,Slide ,IconButton } from \"@mui/material\";\nimport React,{ useState } from \"react\";\nimport CloseIcon from '@mui/icons-material/Close';\n\nexport const AlertMessage=(props)=>{\n  const {notify,setNotify} = props;\n    return(\n        <Slide direction=\"down\" in={notify.isOpen}>\n        <Alert\n          severity={notify.severity}\n          variant={notify.variant}\n          style={{\n            alignContent:\"center\",\n            alignItems:\"center\",\n            fontSize:18,\n            position:'fixed',\n            zIndex:3,\n            marginLeft:'25%'\n          }}\n          action={\n            <IconButton\n              aria-label=\"close\"\n              color=\"inherit\"\n              size=\"large\"\n              onClick={() => {\n                setNotify({...notify,isOpen:false})\n              }}\n            >\n              <CloseIcon fontSize=\"inherit\" />\n            </IconButton>\n          }\n          sx={{ mb:7 }}\n          points=\"0,100 50,00, 100,100\"\n        >\n         {notify.message}\n        </Alert>\n      </Slide>\n    )\n}","import { TextField } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { url } from \"../../Constants\";\nimport { AlertMessage } from \"../Support/AlertMessage\";\n\nconst Newstudententry = () => {\n  const [newname, setnewname] = useState('');\n  const [names, setnames] = useState([]);\n  const [searchterm, setsearchterm] = useState();\n  const results = !searchterm ? names : names.filter(person => person.toLowerCase().includes(searchterm.toLocaleLowerCase()));\n  const [notify, setNotify] = useState({ isOpen: false, message: '', variant: 'filled', severity: 'error' });\n\n\n  const submit = () => {\n    if (newname) {\n      fetch(`${url}/insertstudentname.php`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n\n        },\n        body: JSON.stringify({\n          newname: newname\n\n        })\n      })\n        .then(res => res.json())\n        .then((result) => {\n          setNotify({\n            ...notify,\n            isOpen:true,\n            message:result\n          })\n          window.location.reload();\n        }).catch((error) => {\n          console.error(error);\n        });\n\n\n\n    }\n    else {\n     setNotify({\n       ...notify,\n       isOpen:true,\n       message:'Input All Requried'\n     })\n    }\n  }\n  const searchapi = () => {\n    fetch(`${url}/searchname.php`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n\n      },\n    })\n      .then(res => res.json())\n      .then((result) => {\n        setnames(result);\n      }).catch((error) => {\n        console.error(error);\n      });\n  }\n\n  return (\n    <div className=\"newentry\">\n      <AlertMessage\n        notify={notify}\n        setNotify={setNotify}\n      />\n      <TextField className=\"newentry-in\"\n        required\n        placeholder=\"New Student\"\n        value={newname}\n        onChange={(event) => {\n          searchapi();\n          const str1 = event.target.value.split(' ');\n          for (let j = 0; j < str1.length; j++) {\n\n            str1[j] = str1[j].charAt(0).toUpperCase() + str1[j].substring(1);\n          }\n          const newstr = str1.join(' ');\n          setsearchterm(newstr);\n          setnewname(newstr);\n\n        }}\n        list=\"namelist\"\n      ></TextField>\n      <datalist id=\"namelist\">\n        {results.map((k, key) => {\n          return (\n            <option key={key} >{k}</option>\n          )\n        })}\n      </datalist>\n\n\n      <button className=\"btn\" onClick={() => { submit() }}>+Add</button>\n    </div>\n  )\n}\n\nexport default Newstudententry;","\nimport React, { useEffect, useState } from \"react\";\nimport { url } from \"../../Constants\";\nimport { AlertMessage } from \"../Support/AlertMessage\";\nimport Newstudententry from \"./newstudententry.js\";\n\nconst Inputstudentattendance = () => {\n  const [studentnames, setstudentnames] = useState([]);\n  const [notify, setNotify] = useState({ isOpen: false, message: '', variant: 'filled', severity: 'error' });\n  const [date, setdate] = useState();\n\n\n  const obj = [];\n  const [studentattendance, setstudentattendance] = useState([]);\n\n  let today = new Date();\n\n  let dd = today.getDate();\n  dd = dd < 10 ? \"0\" + dd : dd;\n  if (dd === \"00\") {\n    dd = 31;\n    mm = mm - 1;\n  }\n\n  let mm = (today.getMonth() + 1) > 12 ? today.getMonth() : today.getMonth() + 1;\n  mm = mm < 10 ? \"0\" + mm : mm;\n  let yyyy = today.getFullYear();\n\n  today = yyyy + \"-\" + mm + \"-\" + dd;\n\n  const submit = () => {\n    if (studentattendance) {\n      fetch(`${url}/student_attendance.php`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n\n        },\n        body: JSON.stringify({\n          studentattendance: studentattendance,\n          date: date\n\n        })\n      })\n        .then(res => res.json())\n        .then((result) => {\n          setNotify({\n            ...notify,\n            isOpen:true,\n            message:result\n          })\n          window.location.reload();\n        }).catch((error) => {\n          console.error(error);\n        });\n\n    }\n\n\n    else {\n     setNotify({\n       ...notify,\n       isOpen:true,\n       message:'Input All Required'\n     })\n    }\n  }\n\n\n  useEffect(() => {\n    fetch(`${url}/getstudentname.php`)\n      .then(res => res.json())\n      .then(\n        (result) => {\n\n          setstudentnames(result);\n        },\n        (error) => {\n          setNotify({\n            ...notify,\n            isOpen:true,\n            message:error\n          })\n        }\n      )\n  }, [])\n\n\n\n\n\n\n  let i = 0;\n  const count = studentnames.length;\n\n  for (i = 0; i < count; i++) {\n    if (studentnames[i] !== '') {\n      obj.push({ \"name\": studentnames[i], \"present\": false });\n    }\n  }\n\n  useEffect(() => {\n\n\n    setstudentattendance(obj);\n\n  }, [studentnames]);\n\n\n\n\n  return (\n    <div className=\"student-attendance-body\">\n      <AlertMessage\n        notify={notify}\n        setNotify={setNotify}\n      />\n      <input className=\"inp\" type=\"date\" value={date} onChange={(event) => {\n        setdate(event.target.value)\n      }} /><button className=\"btn\" onClick={() => setdate(today)} >Click if today</button>\n      <p>Date:{date}</p>\n      <table>\n        <thead>\n          <tr><th>Name</th>\n            <th>Present</th>\n            <th>Absent</th></tr>\n        </thead>\n        <tbody>\n          {studentattendance.map((p) => {\n            return (\n              <tr key={p.name} >\n                <td>{p.name}</td>\n                <td ><label className=\"container\"><input\n\n                  onChange={\n                    (event) => {\n                      let temp = true;\n\n                      event.target.value === 'true' ? temp = true : temp = false;\n                      const present = temp;\n                      setstudentattendance((cp) => cp.map(x => x.name === p.name ? {\n                        ...x,\n                        present\n                      } : x))\n                    }} type=\"radio\" name={p.name} value=\"true\" /> <span className=\"fas fa-check present\"></span> </label></td>\n                <td ><label className=\"container\"><input\n                  onChange={\n                    (event) => {\n                      let temp = true;\n                      event.target.value === 'false' ? temp = false : temp = true;\n                      const present = temp;\n                      setstudentattendance((cp) => cp.map(x => x.name === p.name ? {\n                        ...x,\n                        present\n                      } : x))\n                    }}\n                  type=\"radio\" name={p.name} value=\"false\" /> <span className=\"fas fa-times absent\"></span></label> </td>\n              </tr>\n            )\n          })}</tbody>\n        <tfoot></tfoot>\n\n\n      </table>\n      <button className=\"btn\" onClick={() => submit()}>Submit</button>\n      <div>\n        <Newstudententry />\n\n      </div>\n\n    </div>\n  )\n}\n\nexport default Inputstudentattendance;"],"sourceRoot":""}