{"version":3,"sources":["views/Constants.js","views/Components/Support/AlertMessage.js","views/Components/DataEntryForm.js","views/Components/Dataentry.js"],"names":["url","AlertMessage","props","notify","setNotify","direction","in","isOpen","severity","variant","style","alignContent","alignItems","fontSize","position","zIndex","marginLeft","action","color","size","onClick","sx","mb","points","message","DataEntryForms","data","familyheads","justifyItems","container","item","validated","closeFunc","window","location","reload","md","width","marginRight","name","value","familyid","margin","onChange","event","setData","target","toUpperCase","placeholder","label","required","invalid","selfid","onFocus","slice","readOnly","str","split","i","length","charAt","substring","Name1","join","replace","type","dob","RadioGroup","row","justifyContent","FormControlLabel","control","Radio","gender","married","display","weddingdate","emailid","includes","mobile","ph","address","familyhead","familyheadname","list","id","map","f","key","baptized","android","handleSubmit","Dataentry","useState","setFamilyheads","age","setAge","useEffect","String","parseInt","Date","getTime","toString","console","log","setValidated","Familyid","Selfid","Name","Dob","Age","Gender","Married","Weddingdate","Emailid","Mobile","Address","Familyhead","Baptized","Android","fetch","method","headers","Accept","body","JSON","stringify","then","res","json","result","catch","error","addrecords","filteredresult","Set","currentTarget","checkValidity","stopPropagation"],"mappings":"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","file":"static/js/14.68f368bb.chunk.js","sourcesContent":["// export const url = \"http://backendjnag.rf.gd\";\nexport const url = \"https://admin-management-website.000webhostapp.com/Church-management-api/api\"; \n// export const url = \"http://localhost/Church-management-api/api\"; ","import { Alert, Collapse,Slide ,IconButton } from \"@mui/material\";\nimport React,{ useState } from \"react\";\nimport CloseIcon from '@mui/icons-material/Close';\n\nexport const AlertMessage=(props)=>{\n  const {notify,setNotify} = props;\n    return(\n        <Slide direction=\"down\" in={notify.isOpen}>\n        <Alert\n          severity={notify.severity}\n          variant={notify.variant}\n          style={{\n            alignContent:\"center\",\n            alignItems:\"center\",\n            fontSize:18,\n            position:'fixed',\n            zIndex:3,\n            marginLeft:'25%'\n          }}\n          action={\n            <IconButton\n              aria-label=\"close\"\n              color=\"inherit\"\n              size=\"large\"\n              onClick={() => {\n                setNotify({...notify,isOpen:false});\n              }}\n            >\n              <CloseIcon fontSize=\"inherit\" />\n            </IconButton>\n          }\n          sx={{ mb:7 }}\n          points=\"0,100 50,00, 100,100\"\n        >\n         {notify.message}\n        </Alert>\n      </Slide>\n    )\n}","import { CButton, CCol, CForm, CFormFeedback, CFormInput, CFormLabel, CFormTextarea } from '@coreui/react'\nimport { FormControlLabel, Radio, RadioGroup } from '@mui/material'\nimport { AlertMessage } from './Support/AlertMessage'\n\n\n\nexport const DataEntryForms = (props)=>{\n    const data = props.data;\n    const familyheads = props.familyheads;\n    return(\n        <CForm direction={'column'} alignItems={'center'} justifyItems={'stretch'} container item validated={props.validated} >\n      <AlertMessage\n      closeFunc={window.location.reload}\n        notify={props.notify}\n        setNotify={props.setNotify}\n      />\n      <CCol md={4}>\n        <CFormLabel>\n          Family ID\n        </CFormLabel>\n        <CFormInput\n          style={{ width: 300, marginRight: 15 }}\n          name=\"familyid\"\n          value={data.familyid}\n          margin=\"dense\"\n          variant=\"outlined\"\n          onChange={(event) => {\n            props.setData({ ...data, familyid: event.target.value.toUpperCase() })\n          }}\n          placeholder=\"Family ID\"\n          label=\"Family ID\"\n          required\n          invalid={data.familyid ? false : true}\n        />\n        <CFormFeedback\n          invalid\n        >Field is required</CFormFeedback>\n      </CCol>\n      <CCol md={4} >\n        <CFormLabel>\n          Self ID\n        </CFormLabel>\n        <CFormInput\n          name=\"selfid\"\n          style={{ width: 300, marginRight: 15 }}\n          value={data.selfid}\n          margin=\"dense\"\n          variant=\"outlined\"\n          onFocus={() => props.setData({ ...data, selfid: data.familyid.slice(3) })}\n          placeholder=\"Self ID\"\n          label=\"Self ID\"\n          required\n          readOnly\n          invalid={data.selfid ? false : true}\n        />\n        <CFormFeedback\n          invalid\n        >\n          Field is required\n        </CFormFeedback>\n      </CCol>\n\n      <CCol>\n        <CFormLabel>\n          Name\n        </CFormLabel>\n        <CFormInput\n          name=\"name\"\n          value={data.name}\n          style={{ width: 300, marginRight: 15 }}\n          margin=\"dense\"\n          variant=\"outlined\"\n          onChange={(event) => {\n            const str = event.target.value.split(' ')\n            for (let i = 0; i < str.length; i++) {\n              str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1)\n            }\n            const patt = /[^a-zA-Z ]/g;\n            const Name1 = str.join(' ').replace(patt, '');\n            props.setData({ ...data, name: Name1 })\n          }}\n          placeholder=\"Enter Name\"\n          label=\"Enter Name\"\n          // invalid={data.name ? false : true}\n          required\n        />\n        <CFormFeedback\n          invalid\n        >\n          Please fill this field\n        </CFormFeedback>\n      </CCol>\n      <CCol md={4} >\n        <CFormLabel>\n          Date Of Birth\n        </CFormLabel>\n        <CFormInput\n          type={'date'}\n          style={{ width: 300, marginRight: 15 }}\n          value={data.dob}\n          onChange={(event) => props.setData({ ...data, dob: event.target.value })}\n          label=\"Enter DOB\"\n          required\n          invalid={data.dob ? false : true}\n        />\n        <CFormFeedback\n          invalid\n        >\n          Field is required\n        </CFormFeedback>\n      </CCol>\n      <CCol md={4} >\n        <CFormLabel>\n          Gender\n        </CFormLabel>\n        <RadioGroup\n          row\n          aria-label=\"gender\"\n          name=\"row-radio-buttons-group\"\n          style={{\n            width: 300,\n            justifyContent: 'space-evenly',\n          }}\n        >\n          <FormControlLabel\n            value=\"male\"\n            name=\"gender\"\n            label={'Male'}\n            control={<Radio />}\n            onChange={(event) => props.setData({ ...data, gender: event.target.value })}\n          />\n          <FormControlLabel\n            value=\"female\"\n            name=\"gender\"\n            label={'Female'}\n            control={<Radio />}\n            onChange={(event) => props.setData({ ...data, gender: event.target.value })}\n          />\n        </RadioGroup>\n      </CCol>\n      <CCol md={4} >\n        <CFormLabel>\n          Martial status\n        </CFormLabel>\n        <RadioGroup\n          row\n          aria-label=\"martial-status\"\n          name=\"row-radio-buttons-group\"\n          style={{\n            width: 300,\n            justifyContent: 'space-evenly',\n          }}\n        >\n          <FormControlLabel\n            value={true}\n            label={'Married'}\n            control={<Radio />}\n            onChange={(event) => {\n              props.setData({ ...data, married: event.target.value == 'true' ? true : false })\n            }}\n          />\n          <FormControlLabel\n            value={false}\n            control={<Radio />}\n            label={'Unmarried'}\n            onChange={(event) => {\n              props.setData({ ...data, married: event.target.value == 'true' ? true : false })\n            }}\n          />\n        </RadioGroup>\n      </CCol>\n      <CCol md={4}\n        style={{\n          display: data.married === true ? 'block' : 'none',\n          width: 300,\n          marginRight: 15,\n        }}\n      >\n        <CFormLabel>\n          Wedding Date\n        </CFormLabel>\n        <CFormInput\n          type=\"date\"\n          label=\"Wedding Date\"\n          margin=\"dense\"\n          variant=\"outlined\"\n          value={data.weddingdate}\n          onChange={(event) => props.setData({ ...data, weddingdate:event.target.value })}\n        />\n      </CCol>\n\n      <CCol>\n        <CFormLabel>\n          Email\n        </CFormLabel>\n        <CFormInput\n          name=\"emailid\"\n          placeholder='Enter Emailid'\n          margin=\"dense\"\n          label=\"Email ID\"\n          style={{ width: 300, marginRight: 15 }}\n          variant=\"outlined\"\n          onChange={(event) => props.setData({ ...data, emailid: event.target.value })}\n          value={data.emailid}\n          invalid={(!data.emailid || (data.emailid.includes('@') && data.emailid.includes('.com'))) ? false : true}\n        />\n        <CFormFeedback\n          invalid\n        >\n          Please input valid email address\n        </CFormFeedback>\n      </CCol>\n      <CCol>\n        <CFormLabel>\n          Mobile\n        </CFormLabel>\n        <CFormInput\n          name=\"mobile\"\n          style={{ width: 300, marginRight: 15 }}\n          label=\"Mobile\"\n          placeholder='Enter mobile number'\n          margin=\"dense\"\n          variant=\"outlined\"\n          value={data.mobile}\n          onChange={(event) => {\n            let patt = /[^0-9]/g\n            const ph = event.target.value.replace(patt, '')\n            props.setData({ ...data, mobile: ph.slice(0, 10) })\n          }}\n          required\n          invalid={(data.mobile.length === 10) ? false : true}\n        />\n        <CFormFeedback invalid>\n          Enter valid number\n        </CFormFeedback>\n      </CCol>\n\n\n\n      <CCol>\n        <CFormLabel>\n          Address\n        </CFormLabel>\n        <CFormTextarea\n          name=\"address\"\n          label=\"Address\"\n          placeholder='Enter address'\n          style={{ width: 300, marginRight: 15 }}\n          margin=\"dense\"\n          variant=\"outlined\"\n          value={data.address}\n          onChange={(event) => {\n            const str = event.target.value.split(',')\n            for (let i = 0; i < str.length; i++) {\n              str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1)\n            }\n            const address = str.join(',')\n            props.setData({ ...data, address: address })\n          }}\n          required\n          invalid={data.address ? false : true}\n        />\n        <CFormFeedback\n          invalid\n        >\n          Field is required\n        </CFormFeedback>\n      </CCol>\n      <CCol md={4}>\n        <CFormLabel>\n          Family head\n        </CFormLabel>\n        <CFormInput\n          name=\"familyhead\"\n          value={data.familyhead}\n          margin=\"dense\"\n          placeholder='Enter family head'\n          variant=\"outlined\"\n          label=\"Family Head\"\n          onChange={(event) => {\n            const str = event.target.value.split(' ')\n            for (let i = 0; i < str.length; i++) {\n              str[i] = str[i].charAt(0).toUpperCase() + str[i].substring(1)\n            }\n            const familyheadname = str.join(' ')\n            props.setData({ ...data, familyhead: familyheadname })\n          }}\n          required\n          invalid={data.familyhead ? false : true}\n          list='listforfamilyheads'\n        />\n        <datalist id='listforfamilyheads'>\n          {familyheads.map((f, key) => {\n            return (\n              <option key={key} >{f}</option>\n            )\n          })}\n        </datalist>\n        <CFormFeedback invalid>\n          Field is required\n        </CFormFeedback>\n      </CCol>\n      <CCol md={4}>\n        <CFormLabel>\n          Baptism\n        </CFormLabel>\n        <RadioGroup\n          row\n          aria-label=\"Baptizm\"\n          name=\"row-radio-buttons-group\"\n          style={{\n            width: 300,\n            justifyContent: 'space-evenly',\n          }}\n        >\n          <FormControlLabel\n            control={<Radio />}\n            value={true}\n            label={'Baptized'}\n            onChange={(event) =>\n              props.setData({ ...data, baptized: event.target.value == 'true' ? true : false })\n            }\n          />\n          <FormControlLabel\n            value={false}\n            control={<Radio />}\n            label={'Not Baptized'}\n            onChange={(event) =>\n              props.setData({ ...data, baptized: event.target.value == 'true' ? true : false })\n            }\n          />\n        </RadioGroup>\n      </CCol>\n      <CCol md={4}>\n        <CFormLabel>\n          Mobile type\n        </CFormLabel>\n        <RadioGroup\n          row\n          aria-label=\"mobile-type\"\n          name=\"row-radio-buttons-group\"\n          style={{\n            width: 300,\n            justifyContent: 'space-evenly',\n          }}\n        >\n          <FormControlLabel\n            label={'Android'}\n            value={true}\n            control={<Radio />}\n            onChange={(event) =>\n              props.setData({ ...data, android: event.target.value == 'true' ? true : false })\n            }\n          />\n          <FormControlLabel\n            label={'Normal'}\n            value={false}\n            control={<Radio />}\n            onChange={(event) =>\n              props.setData({ ...data, android: event.target.value == 'true' ? true : false })\n            }\n          />\n        </RadioGroup>\n      </CCol>\n\n      <CButton onClick={props.handleSubmit} >\n        Add to records\n      </CButton>\n    </CForm>\n    )\n} ","\nimport { useEffect, useState } from 'react'\nimport { url } from '../Constants'\nimport { DataEntryForms } from './DataEntryForm'\n\n\nconst Dataentry = () => {\n  const [familyheads, setFamilyheads] = useState([]);\n  const [notify, setNotify] = useState({ isOpen: false, message: '', variant: 'filled', severity: 'error' });\n  const [validity,setValidity] = useState(true);\n  const [age,setAge] = useState();\n\n\n  const [data, setData] = useState({\n    name: '',\n    dob: '',\n    gender: 'male',\n    weddingdate: '',\n    emailid: '',\n    mobile: '',\n    address: '',\n    familyhead: '',\n    familyid: '',\n    selfid: '',\n    android: false,\n    baptized: false,\n    married: false,\n  })\n\n  useEffect(() => {\n\n\n    let yearDifference = 31536000000;\n    setAge(String(parseInt((new Date().getTime()-new Date(data.dob).getTime())/yearDifference).toString().replace(\"-\",\"\")));\n\n\n    console.log(age);\n  }, [data.dob])\n  \n\n\n  const [validated, setValidated] = useState();\n\n  const handleSubmit =(event) =>{\n    const form = event.currentTarget\n\n    if (form.checkValidity() == false) {\n      // event.preventDefault()\n      \n      event.stopPropagation()\n      \n    }\n    else {\n      setValidated(true);\n    }\n  }\n\n  \n  \n\n  const addrecords = () => {\n    if (validated) {\n      let Familyid = data.familyid\n      let Selfid = data.selfid\n      let Name = data.name\n      let Dob = data.dob\n      let Age = age;\n      let Gender = data.gender\n      let Married = data.married==false?0:data.married;\n      let Weddingdate = data.weddingdate\n      let Emailid = data.emailid\n      let Mobile = data.mobile\n      let Address = data.address\n      let Familyhead = data.familyhead\n      let Baptized = data.baptized==false?0:data.baptized\n      let Android = data.android==false?0:data.android\n\n      fetch(`${url}/member_details.php`, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: Name,\n          dob: Dob,\n          age: Age,\n          gender: Gender,\n          married: Married,\n          weddingdate: Weddingdate,\n          emailid: Emailid,\n          mobile: Mobile,\n          address: Address,\n          familyhead: Familyhead,\n          baptized: Baptized,\n          android: Android,\n          familyid: Familyid,\n          selfid: Selfid,\n        }),\n      })\n        .then((res) => res.json())\n        .then((result) => {\n          setNotify({\n            ...notify,\n            isOpen:true,\n            severity:result['status']==1?\"success\":\"error\",\n            message:String(result['message'])\n          });\n          setData({\n            name: '',\n            dob: new Date(),\n            gender: 'male',\n            weddingdate: '',\n            emailid: '',\n            mobile: '',\n            address: '',\n            familyhead: '',\n            familyid: '',\n            selfid: '',\n            android: false,\n            baptized: false,\n            married: false,\n          });\n          \n        })\n        .catch((error) => {\n          console.error(error)\n        })\n    } else {\n      setNotify({\n        ...notify,\n        isOpen:true,\n        message:\"Input all required\"\n      })\n    }\n  }\n\n  useEffect(()=>{\n    addrecords();\n    setValidated(false);\n  },[validated])\n\n  const searchfamilyhead = () => {\n    fetch(`${url}/searchfamilyhead.php`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        let filteredresult = [...new Set(result)]\n        setFamilyheads(filteredresult)\n      })\n      .catch((error) => {\n        console.error(error)\n      })\n  }\n  useEffect(() => {\n    searchfamilyhead()\n  }, [])\n\n  return (\n    <DataEntryForms\n    familyheads={familyheads}\n    data={data}\n    notify={notify}\n    setNotify={setNotify}\n    setData={setData}\n    validated={validated}\n    handleSubmit={handleSubmit}\n    />\n  )\n}\n\nexport default Dataentry\n"],"sourceRoot":""}